--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET search_path = public, pg_catalog;

--
-- Name: get_bufr_code(text, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code(_code_tbl text, _code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
   descr_val text; 
   sql_q text; 
BEGIN 
   descr_val = ''; 
   IF EXISTS (SELECT 1 FROM bufr_codes WHERE table_code = _code_tbl) THEN 
     BEGIN 
       sql_q = 'SELECT get_bufr_code_' || _code_tbl || '(' || _code || ')'; 
       EXECUTE sql_q INTO descr_val; 
       IF (descr_val IS NULL) THEN descr_val = ''; END IF; 
       END; 
   END IF; 
   descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code(_code_tbl text, _code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_001003(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_001003(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_001003'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_001003 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_001003(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_001024(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_001024(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_001024'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_001024 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_001024(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_001028(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_001028(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_001028'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_001028 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_001028(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_001029(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_001029(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_001029'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_001029 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_001029(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_001036(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_001036(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$  
DECLARE  
 w0 text;   
 isContains boolean;  
BEGIN   
 w0 = '';  
 SELECT description::text INTO w0 FROM bufr_code_001036 WHERE code = _code;  
 IF (w0 IS NULL) THEN  
 BEGIN  
   IF EXISTS (SELECT 1 FROM bufr_code_001036 WHERE code >=_code) THEN  
     BEGIN  
      w0 = 'Зарезервировано';  
     END;  
   ELSE w0 = '';  
   END IF;  
 END;  
 END IF;  
 descr_ = w0;  
 END;  
$$;


ALTER FUNCTION public.get_bufr_code_001036(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_001038(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_001038(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_001038'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_001038 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_001038(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_001052(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_001052(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_001052'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_001052 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_001052(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_001090(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_001090(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_001090'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_001090 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_001090(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_001092(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_001092(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_001092'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_001092 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_001092(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_001101(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_001101(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_001101'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_001101 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_001101(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002001(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002001(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002001'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002001 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002001(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002002(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002002(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002002'::regclass::oid INTO oid_; 
 SELECT device_descr::text INTO w0 FROM bufr_code_002002 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002002(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002003(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002003(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002003'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002003 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002003(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002004(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002004(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
 w1 text; 
 d1 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002004'::regclass::oid INTO oid_; 
 SELECT unknown1::text INTO w0 FROM bufr_code_002004 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
  SELECT unknown2::text INTO w1 FROM bufr_code_002004 WHERE code = _code; 
  IF ( (w1 IS NOT NULL) AND (oid_ IS NOT NULL) ) THEN  
    BEGIN  
      SELECT col_description(oid_, 4) INTO d1; 
      descr_val = descr_val || d1 || ': ' || w1 || '. '; 
    END; 
  END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002004(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002013(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002013(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002013'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002013 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002013(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002015(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002015(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002015'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002015 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002015(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002016(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002016(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002016'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002016 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002016(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002017(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002017(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002017'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002017 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002017(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002020(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002020(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002020'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002020 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002020(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002021(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002021(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002021'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002021 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002021(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002022(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002022(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002022'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002022 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002022(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002023(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002023(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002023'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002023 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002023(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002024(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002024(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002024'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002024 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002024(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002025(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002025(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002025'::regclass::oid INTO oid_; 
 SELECT channel::text INTO w0 FROM bufr_code_002025 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002025(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002030(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002030(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002030'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002030 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002030(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002031(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002031(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002031'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002031 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002031(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002032(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002032(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002032'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002032 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002032(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002033(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002033(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002033'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002033 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002033(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002034(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002034(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002034'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002034 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002034(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002036(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002036(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002036'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002036 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002036(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002037(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002037(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002037'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002037 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002037(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002038(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002038(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002038'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002038 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002038(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002039(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002039(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002039'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002039 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002039(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002040(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002040(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002040'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002040 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002040(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002041(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002041(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002041'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002041 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002041(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002042(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002042(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002042'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002042 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002042(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002044(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002044(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002044'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002044 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002044(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002045(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002045(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002045'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002045 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002045(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002046(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002046(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002046'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002046 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002046(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002047(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002047(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002047'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002047 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002047(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002048(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002048(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002048'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002048 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002048(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002049(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002049(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002049'::regclass::oid INTO oid_; 
 SELECT unknown1::text INTO w0 FROM bufr_code_002049 WHERE unknown0 = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002049(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002050(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002050(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
 w1 text; 
 d1 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002050'::regclass::oid INTO oid_; 
 SELECT channel::text INTO w0 FROM bufr_code_002050 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
  SELECT channel_value::text INTO w1 FROM bufr_code_002050 WHERE bit_number = _code; 
  IF ( (w1 IS NOT NULL) AND (oid_ IS NOT NULL) ) THEN  
    BEGIN  
      SELECT col_description(oid_, 4) INTO d1; 
      descr_val = descr_val || d1 || ': ' || w1 || '. '; 
    END; 
  END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002050(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002051(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002051(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002051'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002051 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002051(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002052(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002052(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
 w1 text; 
 d1 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002052'::regclass::oid INTO oid_; 
 SELECT channel::text INTO w0 FROM bufr_code_002052 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
  SELECT channel_value::text INTO w1 FROM bufr_code_002052 WHERE bit_number = _code; 
  IF ( (w1 IS NOT NULL) AND (oid_ IS NOT NULL) ) THEN  
    BEGIN  
      SELECT col_description(oid_, 4) INTO d1; 
      descr_val = descr_val || d1 || ': ' || w1 || '. '; 
    END; 
  END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002052(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002053(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002053(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002053'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002053 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002053(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002054(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002054(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002054'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002054 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002054(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002055(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002055(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002055'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002055 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002055(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002056(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002056(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002056'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002056 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002056(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002057(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002057(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002057'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002057 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002057(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002058(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002058(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002058'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002058 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002058(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002059(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002059(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002059'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002059 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002059(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002060(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002060(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002060'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002060 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002060(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002061(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002061(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002061'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002061 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002061(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002062(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002062(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002062'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002062 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002062(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002064(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002064(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002064'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002064 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002064(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002066(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002066(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002066'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002066 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002066(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002070(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002070(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002070'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002070 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002070(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002080(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002080(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002080'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002080 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002080(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002081(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002081(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002081'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002081 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002081(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002083(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002083(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002083'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002083 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002083(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002084(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002084(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002084'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002084 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002084(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002095(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002095(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002095'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002095 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002095(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002096(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002096(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002096'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002096 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002096(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002097(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002097(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002097'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002097 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002097(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002099(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002099(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002099'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002099 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002099(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002101(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002101(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002101'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002101 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002101(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002103(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002103(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002103'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002103 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002103(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002104(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002104(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002104'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002104 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002104(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002115(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002115(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002115'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002115 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002115(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002119(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002119(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002119'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002119 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002119(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002131(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002131(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002131'::regclass::oid INTO oid_; 
 SELECT unknown1::text INTO w0 FROM bufr_code_002131 WHERE unknown0 = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002131(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002137(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002137(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002137'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002137 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002137(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002138(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002138(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002138'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002138 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002138(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002139(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002139(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002139'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002139 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002139(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002143(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002143(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002143'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002143 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002143(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002144(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002144(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002144'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002144 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002144(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002145(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002145(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002145'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002145 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002145(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002146(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002146(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002146'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002146 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002146(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002148(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002148(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002148'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002148 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002148(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002149(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002149(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002149'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002149 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002149(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002150(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002150(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002150'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002150 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002150(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002151(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002151(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002151'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002151 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002151(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002152(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002152(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002152'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002152 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002152(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002158(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002158(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002158'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002158 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002158(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002159(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002159(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002159'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002159 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002159(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002160(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002160(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002160'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002160 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002160(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002163(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002163(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002163'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002163 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002163(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002164(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002164(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002164'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002164 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002164(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002165(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002165(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002165'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002165 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002165(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002166(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002166(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002166'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002166 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002166(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002167(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002167(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002167'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002167 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002167(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002169(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002169(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002169'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002169 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002169(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002170(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002170(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002170'::regclass::oid INTO oid_; 
 SELECT sensor_type::text INTO w0 FROM bufr_code_002170 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002170(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002172(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002172(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002172'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002172 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002172(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002175(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002175(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002175'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002175 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002175(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002176(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002176(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002176'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002176 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002176(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002177(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002177(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002177'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002177 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002177(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002178(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002178(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002178'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002178 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002178(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002179(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002179(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002179'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002179 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002179(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002180(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002180(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002180'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002180 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002180(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002181(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002181(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002181'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002181 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002181(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002182(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002182(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002182'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002182 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002182(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002183(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002183(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002183'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002183 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002183(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002184(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002184(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002184'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002184 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002184(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002185(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002185(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002185'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002185 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002185(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002186(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002186(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002186'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002186 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002186(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002187(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002187(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002187'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002187 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002187(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002188(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002188(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002188'::regclass::oid INTO oid_; 
 SELECT unknown1::text INTO w0 FROM bufr_code_002188 WHERE unknown0 = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002188(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002189(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002189(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002189'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002189 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002189(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_002191(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_002191(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_002191'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_002191 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_002191(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_004059(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_004059(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_004059'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_004059 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_004059(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_004080(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_004080(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_004080'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_004080 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_004080(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008001(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008001(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008001'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008001 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008001(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008002(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008002(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008002'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008002 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008002(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008003(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008003(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008003'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008003 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008003(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008004(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008004(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008004'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008004 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008004(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008005(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008005(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008005'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008005 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008005(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008006(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008006(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008006'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008006 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008006(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008007(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008007(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008007'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008007 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008007(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008008(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008008(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008008'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008008 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008008(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008009(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008009(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008009'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008009 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008009(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008010(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008010(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008010'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008010 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008010(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008011(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008011(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008011'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008011 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008011(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008012(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008012(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008012'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008012 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008012(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008013(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008013(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008013'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008013 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008013(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008014(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008014(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008014'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008014 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008014(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008016(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008016(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008016'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008016 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008016(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008017(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008017(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008017'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008017 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008017(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008018(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008018(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008018'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008018 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008018(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008019(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008019(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008019'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008019 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008019(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008021(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008021(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008021'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008021 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008021(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008023(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008023(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008023'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008023 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008023(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008024(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008024(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008024'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008024 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008024(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008025(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008025(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008025'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008025 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008025(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008026(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008026(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008026'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008026 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008026(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008029(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008029(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008029'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008029 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008029(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008033(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008033(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008033'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008033 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008033(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008035(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008035(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008035'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008035 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008035(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008036(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008036(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008036'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008036 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008036(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008039(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008039(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008039'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008039 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008039(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008040(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008040(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008040'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008040 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008040(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008041(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008041(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008041'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008041 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008041(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008042(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008042(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008042'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008042 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008042(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008043(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008043(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
 w1 text; 
 d1 text; 
 w2 text; 
 d2 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008043'::regclass::oid INTO oid_; 
 SELECT name::text INTO w0 FROM bufr_code_008043 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
  SELECT formula::text INTO w1 FROM bufr_code_008043 WHERE code = _code; 
  IF ( (w1 IS NOT NULL) AND (oid_ IS NOT NULL) ) THEN  
    BEGIN  
      SELECT col_description(oid_, 4) INTO d1; 
      descr_val = descr_val || d1 || ': ' || w1 || '. '; 
    END; 
  END IF; 
  SELECT cas_number::text INTO w2 FROM bufr_code_008043 WHERE code = _code; 
  IF ( (w2 IS NOT NULL) AND (oid_ IS NOT NULL) ) THEN  
    BEGIN  
      SELECT col_description(oid_, 5) INTO d2; 
      descr_val = descr_val || d2 || ': ' || w2 || '. '; 
    END; 
  END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008043(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008050(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008050(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008050'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008050 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008050(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008051(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008051(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008051'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008051 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008051(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008052(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008052(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008052'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008052 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008052(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008053(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008053(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008053'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008053 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008053(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008054(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008054(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008054'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008054 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008054(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008060(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008060(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008060'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008060 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008060(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008065(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008065(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008065'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008065 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008065(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008066(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008066(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008066'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008066 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008066(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008070(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008070(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008070'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008070 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008070(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008072(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008072(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008072'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008072 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008072(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008074(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008074(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008074'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008074 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008074(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008075(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008075(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008075'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008075 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008075(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008076(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008076(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008076'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008076 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008076(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008077(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008077(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008077'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008077 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008077(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008079(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008079(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008079'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008079 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008079(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008080(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008080(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008080'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008080 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008080(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008081(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008081(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008081'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008081 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008081(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008082(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008082(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008082'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008082 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008082(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008083(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008083(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008083'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008083 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008083(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008085(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008085(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008085'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008085 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008085(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_008086(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_008086(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_008086'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_008086 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_008086(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_010063(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_010063(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_010063'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_010063 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_010063(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_010064(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_010064(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_010064'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_010064 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_010064(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_011030(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_011030(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_011030'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_011030 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_011030(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_011031(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_011031(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_011031'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_011031 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_011031(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_011037(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_011037(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
 w1 text; 
 d1 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_011037'::regclass::oid INTO oid_; 
 SELECT unknown1::text INTO w0 FROM bufr_code_011037 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
  SELECT unknown2::text INTO w1 FROM bufr_code_011037 WHERE code = _code; 
  IF ( (w1 IS NOT NULL) AND (oid_ IS NOT NULL) ) THEN  
    BEGIN  
      SELECT col_description(oid_, 4) INTO d1; 
      descr_val = descr_val || d1 || ': ' || w1 || '. '; 
    END; 
  END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_011037(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_011038(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_011038(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_011038'::regclass::oid INTO oid_; 
 SELECT supervision_time_before::text INTO w0 FROM bufr_code_011038 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_011038(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_011039(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_011039(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_011039'::regclass::oid INTO oid_; 
 SELECT supervision_time_before::text INTO w0 FROM bufr_code_011039 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_011039(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_013038(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_013038(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_013038'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_013038 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_013038(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_013039(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_013039(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_013039'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_013039 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_013039(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_013040(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_013040(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_013040'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_013040 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_013040(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_013041(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_013041(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_013041'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_013041 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_013041(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_013051(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_013051(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_013051'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_013051 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_013051(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_013056(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_013056(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_013056'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_013056 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_013056(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_013057(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_013057(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_013057'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_013057 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_013057(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_015025(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_015025(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_015025'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_015025 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_015025(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_019001(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_019001(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_019001'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_019001 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_019001(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_019008(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_019008(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_019008'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_019008 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_019008(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_019010(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_019010(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_019010'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_019010 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_019010(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_019100(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_019100(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_019100'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_019100 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_019100(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_019101(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_019101(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_019101'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_019101 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_019101(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_019102(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_019102(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_019102'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_019102 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_019102(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_019103(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_019103(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_019103'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_019103 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_019103(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_019104(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_019104(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_019104'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_019104 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_019104(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_019105(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_019105(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_019105'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_019105 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_019105(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_019107(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_019107(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_019107'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_019107 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_019107(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_019108(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_019108(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_019108'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_019108 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_019108(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_019109(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_019109(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_019109'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_019109 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_019109(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_019110(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_019110(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_019110'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_019110 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_019110(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_019113(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_019113(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_019113'::regclass::oid INTO oid_; 
 SELECT type::text INTO w0 FROM bufr_code_019113 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_019113(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_019117(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_019117(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_019117'::regclass::oid INTO oid_; 
 SELECT type::text INTO w0 FROM bufr_code_019117 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_019117(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_019119(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_019119(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_019119'::regclass::oid INTO oid_; 
 SELECT type::text INTO w0 FROM bufr_code_019119 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_019119(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020003(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020003(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020003'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020003 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020003(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020004(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020004(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020004'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020004 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020004(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020005(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020005(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020005'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020005 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020005(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020006(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020006(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020006'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020006 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020006(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020008(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020008(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020008'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020008 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020008(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020009(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020009(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020009'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020009 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020009(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020011(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020011(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020011'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020011 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020011(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020012(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020012(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020012'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020012 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020012(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020017(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020017(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020017'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020017 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020017(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020018(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020018(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020018'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020018 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020018(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020021(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020021(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020021'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020021 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020021(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020022(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020022(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020022'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020022 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020022(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020023(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020023(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020023'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020023 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020023(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020024(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020024(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020024'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020024 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020024(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020025(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020025(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020025'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020025 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020025(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020026(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020026(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020026'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020026 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020026(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020027(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020027(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020027'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020027 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020027(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020028(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020028(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020028'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020028 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020028(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020029(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020029(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020029'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020029 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020029(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020032(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020032(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020032'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020032 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020032(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020033(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020033(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020033'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020033 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020033(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020034(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020034(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020034'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020034 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020034(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020035(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020035(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020035'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020035 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020035(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020036(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020036(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020036'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020036 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020036(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020037(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020037(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020037'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020037 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020037(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020040(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020040(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020040'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020040 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020040(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020041(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020041(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020041'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020041 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020041(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020042(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020042(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020042'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020042 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020042(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020045(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020045(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020045'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020045 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020045(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020048(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020048(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020048'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020048 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020048(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020050(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020050(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020050'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020050 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020050(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020055(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020055(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020055'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020055 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020055(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020056(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020056(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020056'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020056 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020056(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020062(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020062(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020062'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020062 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020062(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020063(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020063(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020063'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020063 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020063(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020071(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020071(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
 w1 text; 
 d1 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020071'::regclass::oid INTO oid_; 
 SELECT position_accuracy::text INTO w0 FROM bufr_code_020071 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
  SELECT repeat_speed::text INTO w1 FROM bufr_code_020071 WHERE code = _code; 
  IF ( (w1 IS NOT NULL) AND (oid_ IS NOT NULL) ) THEN  
    BEGIN  
      SELECT col_description(oid_, 4) INTO d1; 
      descr_val = descr_val || d1 || ': ' || w1 || '. '; 
    END; 
  END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020071(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020085(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020085(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020085'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020085 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020085(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020086(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020086(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020086'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020086 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020086(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020087(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020087(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020087'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020087 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020087(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020089(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020089(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020089'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020089 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020089(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020090(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020090(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020090'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020090 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020090(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020101(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020101(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020101'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020101 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020101(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020102(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020102(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020102'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020102 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020102(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020103(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020103(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020103'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020103 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020103(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020104(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020104(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020104'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020104 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020104(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020105(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020105(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020105'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020105 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020105(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020106(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020106(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020106'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020106 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020106(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020107(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020107(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020107'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020107 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020107(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020108(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020108(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020108'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020108 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020108(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020119(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020119(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020119'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020119 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020119(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020124(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020124(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020124'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020124 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020124(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_020136(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_020136(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_020136'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_020136 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_020136(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_021022(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_021022(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_021022'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_021022 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_021022(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_021066(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_021066(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_021066'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_021066 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_021066(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_021067(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_021067(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_021067'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_021067 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_021067(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_021068(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_021068(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_021068'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_021068 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_021068(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_021069(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_021069(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_021069'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_021069 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_021069(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_021070(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_021070(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_021070'::regclass::oid INTO oid_; 
 SELECT value::text INTO w0 FROM bufr_code_021070 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_021070(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_021072(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_021072(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_021072'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_021072 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_021072(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_021073(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_021073(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_021073'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_021073 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_021073(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_021076(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_021076(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_021076'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_021076 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_021076(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_021109(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_021109(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_021109'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_021109 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_021109(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_021115(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_021115(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_021115'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_021115 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_021115(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_021116(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_021116(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_021116'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_021116 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_021116(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_021119(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_021119(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_021119'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_021119 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_021119(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_021144(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_021144(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_021144'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_021144 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_021144(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_021150(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_021150(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_021150'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_021150 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_021150(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_021155(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_021155(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_021155'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_021155 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_021155(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_021158(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_021158(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_021158'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_021158 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_021158(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_021159(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_021159(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_021159'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_021159 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_021159(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_021169(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_021169(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_021169'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_021169 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_021169(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_022056(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_022056(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_022056'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_022056 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_022056(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_022060(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_022060(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_022060'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_022060 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_022060(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_022061(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_022061(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
 w1 text; 
 d1 text; 
 w2 text; 
 d2 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_022061'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_022061 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
  SELECT wave_height_min::text INTO w1 FROM bufr_code_022061 WHERE code = _code; 
  IF ( (w1 IS NOT NULL) AND (oid_ IS NOT NULL) ) THEN  
    BEGIN  
      SELECT col_description(oid_, 4) INTO d1; 
      descr_val = descr_val || d1 || ': ' || w1 || '. '; 
    END; 
  END IF; 
  SELECT wave_height_max::text INTO w2 FROM bufr_code_022061 WHERE code = _code; 
  IF ( (w2 IS NOT NULL) AND (oid_ IS NOT NULL) ) THEN  
    BEGIN  
      SELECT col_description(oid_, 5) INTO d2; 
      descr_val = descr_val || d2 || ': ' || w2 || '. '; 
    END; 
  END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_022061(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_022120(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_022120(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_022120'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_022120 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_022120(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_022121(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_022121(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_022121'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_022121 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_022121(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_022122(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_022122(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_022122'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_022122 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_022122(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_022123(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_022123(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_022123'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_022123 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_022123(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_022178(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_022178(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_022178'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_022178 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_022178(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_023001(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_023001(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_023001'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_023001 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_023001(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_023002(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_023002(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_023002'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_023002 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_023002(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_023003(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_023003(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_023003'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_023003 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_023003(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_023004(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_023004(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_023004'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_023004 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_023004(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_023005(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_023005(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_023005'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_023005 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_023005(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_023006(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_023006(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_023006'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_023006 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_023006(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_023007(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_023007(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_023007'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_023007 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_023007(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_023008(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_023008(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_023008'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_023008 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_023008(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_023009(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_023009(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_023009'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_023009 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_023009(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_023016(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_023016(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_023016'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_023016 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_023016(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_023018(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_023018(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_023018'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_023018 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_023018(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_023031(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_023031(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_023031'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_023031 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_023031(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_023032(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_023032(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_023032'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_023032 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_023032(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_024003(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_024003(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_024003'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_024003 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_024003(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025004(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025004(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025004'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025004 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025004(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025005(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025005(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025005'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025005 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025005(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025006(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025006(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025006'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025006 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025006(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025009(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025009(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025009'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025009 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025009(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025010(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025010(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025010'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025010 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025010(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025011(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025011(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025011'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025011 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025011(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025012(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025012(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025012'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025012 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025012(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025013(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025013(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025013'::regclass::oid INTO oid_; 
 SELECT unknown1::text INTO w0 FROM bufr_code_025013 WHERE unknown0 = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025013(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025015(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025015(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025015'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025015 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025015(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025017(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025017(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025017'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025017 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025017(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025020(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025020(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025020'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025020 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025020(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025021(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025021(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025021'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025021 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025021(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025022(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025022(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025022'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025022 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025022(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025023(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025023(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025023'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025023 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025023(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025024(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025024(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025024'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025024 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025024(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025029(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025029(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025029'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025029 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025029(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025030(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025030(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025030'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025030 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025030(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025031(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025031(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025031'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025031 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025031(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025032(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025032(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025032'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025032 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025032(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025033(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025033(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025033'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025033 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025033(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025034(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025034(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025034'::regclass::oid INTO oid_; 
 SELECT value::text INTO w0 FROM bufr_code_025034 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025034(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025035(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025035(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025035'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025035 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025035(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025036(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025036(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025036'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025036 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025036(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025040(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025040(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025040'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025040 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025040(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025041(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025041(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025041'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025041 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025041(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025042(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025042(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025042'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025042 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025042(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025045(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025045(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025045'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025045 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025045(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025046(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025046(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025046'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025046 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025046(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025047(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025047(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025047'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025047 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025047(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025048(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025048(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025048'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025048 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025048(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025049(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025049(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025049'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025049 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025049(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025051(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025051(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025051'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025051 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025051(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025053(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025053(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025053'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025053 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025053(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025063(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025063(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025063'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025063 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025063(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025069(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025069(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025069'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025069 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025069(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025086(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025086(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025086'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025086 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025086(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025090(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025090(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025090'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025090 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025090(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025093(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025093(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025093'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025093 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025093(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025095(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025095(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025095'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025095 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025095(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025096(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025096(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025096'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025096 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025096(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025097(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025097(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025097'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025097 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025097(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025098(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025098(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025098'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025098 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025098(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025099(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025099(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025099'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025099 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025099(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025110(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025110(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025110'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025110 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025110(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025120(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025120(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025120'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025120 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025120(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025122(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025122(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025122'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025122 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025122(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025123(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025123(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025123'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025123 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025123(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025124(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025124(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025124'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025124 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025124(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025150(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025150(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025150'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025150 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025150(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025174(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025174(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025174'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025174 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025174(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025181(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025181(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025181'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025181 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025181(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025182(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025182(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025182'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025182 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025182(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_025184(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_025184(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_025184'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_025184 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_025184(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_026010(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_026010(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_026010'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_026010 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_026010(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_029001(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_029001(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_029001'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_029001 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_029001(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_029002(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_029002(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_029002'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_029002 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_029002(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_030031(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_030031(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_030031'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_030031 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_030031(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_030032(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_030032(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_030032'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_030032 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_030032(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_031021(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_031021(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_031021'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_031021 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_031021(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_031031(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_031031(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
 w1 text; 
 d1 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_031031'::regclass::oid INTO oid_; 
 SELECT value::text INTO w0 FROM bufr_code_031031 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
  SELECT description::text INTO w1 FROM bufr_code_031031 WHERE bit_number = _code; 
  IF ( (w1 IS NOT NULL) AND (oid_ IS NOT NULL) ) THEN  
    BEGIN  
      SELECT col_description(oid_, 4) INTO d1; 
      descr_val = descr_val || d1 || ': ' || w1 || '. '; 
    END; 
  END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_031031(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033002(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033002(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033002'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033002 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033002(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033003(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033003(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033003'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033003 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033003(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033005(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033005(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033005'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033005 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033005(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033006(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033006(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033006'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033006 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033006(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033015(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033015(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033015'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033015 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033015(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033020(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033020(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033020'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033020 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033020(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033021(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033021(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033021'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033021 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033021(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033022(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033022(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033022'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033022 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033022(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033023(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033023(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033023'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033023 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033023(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033024(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033024(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033024'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033024 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033024(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033025(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033025(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033025'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033025 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033025(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033026(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033026(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033026'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033026 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033026(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033027(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033027(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033027'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033027 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033027(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033028(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033028(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033028'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033028 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033028(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033030(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033030(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033030'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033030 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033030(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033031(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033031(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033031'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033031 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033031(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033032(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033032(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033032'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033032 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033032(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033033(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033033(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033033'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033033 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033033(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033035(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033035(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033035'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033035 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033035(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033037(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033037(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033037'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033037 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033037(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033038(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033038(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033038'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033038 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033038(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033039(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033039(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033039'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033039 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033039(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033041(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033041(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033041'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033041 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033041(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033042(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033042(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033042'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033042 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033042(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033043(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033043(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033043'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033043 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033043(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033044(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033044(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033044'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033044 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033044(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033047(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033047(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033047'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033047 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033047(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033048(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033048(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033048'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033048 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033048(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033049(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033049(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033049'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033049 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033049(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033050(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033050(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033050'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033050 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033050(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033052(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033052(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033052'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033052 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033052(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033053(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033053(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033053'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033053 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033053(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033060(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033060(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033060'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033060 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033060(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033070(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033070(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033070'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033070 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033070(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033071(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033071(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033071'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033071 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033071(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033072(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033072(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033072'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033072 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033072(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033075(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033075(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033075'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033075 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033075(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033076(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033076(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033076'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033076 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033076(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033077(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033077(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033077'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033077 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033077(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033078(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033078(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033078'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033078 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033078(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033079(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033079(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033079'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033079 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033079(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033080(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033080(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033080'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033080 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033080(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033081(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033081(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033081'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033081 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033081(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033082(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033082(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033082'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033082 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033082(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033083(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033083(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033083'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033083 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033083(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033084(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033084(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033084'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033084 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033084(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_033086(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_033086(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_033086'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_033086 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_033086(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_035000(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_035000(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_035000'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_035000 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_035000(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_035001(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_035001(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_035001'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_035001 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_035001(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_035030(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_035030(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_035030'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_035030 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_035030(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_035031(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_035031(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_035031'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_035031 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_035031(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_035032(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_035032(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_035032'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_035032 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_035032(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_035033(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_035033(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_035033'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_035033 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_035033(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_035034(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_035034(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_035034'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_035034 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_035034(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_035035(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_035035(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_035035'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_035035 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_035035(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_040005(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_040005(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_040005'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_040005 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_040005(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_040006(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_040006(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_040006'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_040006 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_040006(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_040011(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_040011(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_040011'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_040011 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_040011(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_040012(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_040012(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_040012'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_040012 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_040012(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_040013(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_040013(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_040013'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_040013 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_040013(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_040020(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_040020(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_040020'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_040020 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_040020(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_040023(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_040023(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_040023'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_040023 WHERE bit_number = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_040023(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_040024(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_040024(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_040024'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_040024 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_040024(_code integer, OUT descr_ text) OWNER TO postgres;

--
-- Name: get_bufr_code_040025(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_bufr_code_040025(_code integer, OUT descr_ text) RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE 
 oid_ bigint;  
 descr_val text; 
 w0 text; 
 d0 text; 
BEGIN 
 descr_val = ''; 
 SELECT 'bufr_code_040025'::regclass::oid INTO oid_; 
 SELECT description::text INTO w0 FROM bufr_code_040025 WHERE code = _code; 
 IF (w0 IS NOT NULL)  THEN  
   BEGIN  
     descr_val = descr_val || w0 || '. '; 
   END; 
 END IF; 
 descr_ = descr_val; 
END; 
$$;


ALTER FUNCTION public.get_bufr_code_040025(_code integer, OUT descr_ text) OWNER TO postgres;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: bufr_code_001003; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_001003 (
    id bigint DEFAULT nextval(('public.bufr_code_001003_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_001003 OWNER TO postgres;

--
-- Name: TABLE bufr_code_001003; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_001003 IS 'Кодовая таблица 001003 - Номер региона ВМО/географический район';


--
-- Name: COLUMN bufr_code_001003.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_001003.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_001003.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_001003.description IS 'Описание';


--
-- Name: bufr_code_001003_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_001003_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_001003_seq OWNER TO postgres;

--
-- Name: bufr_code_001024; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_001024 (
    id bigint DEFAULT nextval(('public.bufr_code_001024_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_001024 OWNER TO postgres;

--
-- Name: TABLE bufr_code_001024; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_001024 IS 'Кодовая таблица 001024 - Источник данных о скорости ветра';


--
-- Name: COLUMN bufr_code_001024.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_001024.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_001024.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_001024.description IS 'Описание';


--
-- Name: bufr_code_001024_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_001024_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_001024_seq OWNER TO postgres;

--
-- Name: bufr_code_001028; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_001028 (
    id bigint DEFAULT nextval(('public.bufr_code_001028_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_001028 OWNER TO postgres;

--
-- Name: TABLE bufr_code_001028; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_001028 IS 'Кодовая таблица 001028 - Источник данных об оптической плотности аэрозоля (ОПА)';


--
-- Name: COLUMN bufr_code_001028.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_001028.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_001028.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_001028.description IS 'Описание';


--
-- Name: bufr_code_001028_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_001028_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_001028_seq OWNER TO postgres;

--
-- Name: bufr_code_001029; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_001029 (
    id bigint DEFAULT nextval(('public.bufr_code_001029_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_001029 OWNER TO postgres;

--
-- Name: TABLE bufr_code_001029; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_001029 IS 'Кодовая таблица 001029 - Источник данных о ПСИ*';


--
-- Name: COLUMN bufr_code_001029.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_001029.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_001029.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_001029.description IS 'Описание';


--
-- Name: bufr_code_001029_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_001029_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_001029_seq OWNER TO postgres;

--
-- Name: bufr_code_001036; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_001036 (
    id bigint DEFAULT nextval(('public.bufr_code_001036_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_001036 OWNER TO postgres;

--
-- Name: TABLE bufr_code_001036; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_001036 IS 'Кодовая таблица 001036 - Агентство, ответственное за функционирование наблюдательной платформы';


--
-- Name: COLUMN bufr_code_001036.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_001036.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_001036.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_001036.description IS 'Описание';


--
-- Name: bufr_code_001036_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_001036_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_001036_seq OWNER TO postgres;

--
-- Name: bufr_code_001038; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_001038 (
    id bigint DEFAULT nextval(('public.bufr_code_001038_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_001038 OWNER TO postgres;

--
-- Name: TABLE bufr_code_001038; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_001038 IS 'Кодовая таблица 001038 - Источник данных о доле морского льда';


--
-- Name: COLUMN bufr_code_001038.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_001038.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_001038.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_001038.description IS 'Описание';


--
-- Name: bufr_code_001038_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_001038_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_001038_seq OWNER TO postgres;

--
-- Name: bufr_code_001052; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_001052 (
    id bigint DEFAULT nextval(('public.bufr_code_001052_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_001052 OWNER TO postgres;

--
-- Name: TABLE bufr_code_001052; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_001052 IS 'Кодовая таблица 001052 - Идентификатор передатчика платформы';


--
-- Name: COLUMN bufr_code_001052.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_001052.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_001052.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_001052.description IS 'Описание';


--
-- Name: bufr_code_001052_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_001052_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_001052_seq OWNER TO postgres;

--
-- Name: bufr_code_001090; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_001090 (
    id bigint DEFAULT nextval(('public.bufr_code_001090_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_001090 OWNER TO postgres;

--
-- Name: TABLE bufr_code_001090; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_001090 IS 'Кодовая таблица 001090 - Способ определения первоначальных возмущений';


--
-- Name: COLUMN bufr_code_001090.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_001090.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_001090.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_001090.description IS 'Описание';


--
-- Name: bufr_code_001090_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_001090_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_001090_seq OWNER TO postgres;

--
-- Name: bufr_code_001092; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_001092 (
    id bigint DEFAULT nextval(('public.bufr_code_001092_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_001092 OWNER TO postgres;

--
-- Name: TABLE bufr_code_001092; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_001092 IS 'Кодовая таблица 001092 - Тип ансамблевого прогноза';


--
-- Name: COLUMN bufr_code_001092.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_001092.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_001092.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_001092.description IS 'Описание';


--
-- Name: bufr_code_001092_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_001092_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_001092_seq OWNER TO postgres;

--
-- Name: bufr_code_001101; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_001101 (
    id bigint DEFAULT nextval(('public.bufr_code_001101_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_001101 OWNER TO postgres;

--
-- Name: TABLE bufr_code_001101; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_001101 IS 'Кодовая таблица 001101 - Указатель страны';


--
-- Name: COLUMN bufr_code_001101.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_001101.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_001101.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_001101.description IS 'Описание';


--
-- Name: bufr_code_001101_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_001101_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_001101_seq OWNER TO postgres;

--
-- Name: bufr_code_002001; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002001 (
    id bigint DEFAULT nextval(('public.bufr_code_002001_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002001 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002001; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002001 IS 'Кодовая таблица 002001 - Тип станции';


--
-- Name: COLUMN bufr_code_002001.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002001.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002001.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002001.description IS 'Описание';


--
-- Name: bufr_code_002001_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002001_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002001_seq OWNER TO postgres;

--
-- Name: bufr_code_002002; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002002 (
    id bigint DEFAULT nextval(('public.bufr_code_002002_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    device_descr text
);


ALTER TABLE public.bufr_code_002002 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002002; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002002 IS 'Кодовая таблица 002002 - Тип приборного обеспечения для измерения ветра';


--
-- Name: COLUMN bufr_code_002002.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002002.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_002002.device_descr; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002002.device_descr IS 'Тип приборного обеспечения и первоначальные единицы для измерения ветра (измеряемого в м.с-1,если не указаны другие единицы)';


--
-- Name: bufr_code_002002_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002002_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002002_seq OWNER TO postgres;

--
-- Name: bufr_code_002003; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002003 (
    id bigint DEFAULT nextval(('public.bufr_code_002003_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002003 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002003; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002003 IS 'Кодовая таблица 002003 - Тип используемого измерительного оборудования';


--
-- Name: COLUMN bufr_code_002003.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002003.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002003.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002003.description IS 'Описание';


--
-- Name: bufr_code_002003_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002003_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002003_seq OWNER TO postgres;

--
-- Name: bufr_code_002004; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002004 (
    id bigint DEFAULT nextval(('public.bufr_code_002004_seq'::text)::regclass) NOT NULL,
    code integer,
    unknown1 text,
    unknown2 text
);


ALTER TABLE public.bufr_code_002004 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002004; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002004 IS 'Кодовая таблица 002004 - Тип приборов для измерения испарения или вид сельскохозяйственной культуры, по которой сообщаются данные об эвапотранспирации';


--
-- Name: COLUMN bufr_code_002004.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002004.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002004.unknown1; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002004.unknown1 IS 'Прибор или вид сельскохозяйстенной культуры';


--
-- Name: COLUMN bufr_code_002004.unknown2; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002004.unknown2 IS 'Тип данных';


--
-- Name: bufr_code_002004_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002004_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002004_seq OWNER TO postgres;

--
-- Name: bufr_code_002013; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002013 (
    id bigint DEFAULT nextval(('public.bufr_code_002013_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002013 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002013; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002013 IS 'Кодовая таблица 002013 - Поправка на солнечную и инфракрасную радиацию';


--
-- Name: COLUMN bufr_code_002013.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002013.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002013.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002013.description IS 'Описание';


--
-- Name: bufr_code_002013_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002013_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002013_seq OWNER TO postgres;

--
-- Name: bufr_code_002015; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002015 (
    id bigint DEFAULT nextval(('public.bufr_code_002015_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002015 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002015; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002015 IS 'Кодовая таблица 002015 - Полнота радиозондовых измерений';


--
-- Name: COLUMN bufr_code_002015.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002015.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002015.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002015.description IS 'Описание';


--
-- Name: bufr_code_002015_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002015_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002015_seq OWNER TO postgres;

--
-- Name: bufr_code_002016; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002016 (
    id bigint DEFAULT nextval(('public.bufr_code_002016_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002016 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002016; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002016 IS 'Кодовая таблица 002016 - Конфигурация зонда';


--
-- Name: COLUMN bufr_code_002016.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002016.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002016.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002016.description IS 'Описание';


--
-- Name: bufr_code_002016_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002016_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002016_seq OWNER TO postgres;

--
-- Name: bufr_code_002017; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002017 (
    id bigint DEFAULT nextval(('public.bufr_code_002017_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002017 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002017; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002017 IS 'Кодовая таблица 002017 - Алгоритмы поправок для измерений влажности';


--
-- Name: COLUMN bufr_code_002017.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002017.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002017.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002017.description IS 'Описание';


--
-- Name: bufr_code_002017_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002017_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002017_seq OWNER TO postgres;

--
-- Name: bufr_code_002020; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002020 (
    id bigint DEFAULT nextval(('public.bufr_code_002020_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002020 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002020; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002020 IS 'Кодовая таблица 002020 - Классификация спутников';


--
-- Name: COLUMN bufr_code_002020.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002020.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002020.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002020.description IS 'Описание';


--
-- Name: bufr_code_002020_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002020_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002020_seq OWNER TO postgres;

--
-- Name: bufr_code_002021; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002021 (
    id bigint DEFAULT nextval(('public.bufr_code_002021_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_002021 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002021; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002021 IS 'Кодовая таблица 002021 - Данные о спутниковых приборах, используемые при обработке';


--
-- Name: COLUMN bufr_code_002021.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002021.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_002021.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002021.description IS 'Описание';


--
-- Name: bufr_code_002021_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002021_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002021_seq OWNER TO postgres;

--
-- Name: bufr_code_002022; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002022 (
    id bigint DEFAULT nextval(('public.bufr_code_002022_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_002022 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002022; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002022 IS 'Кодовая таблица 002022 - Используемая методика обработки спутниковых данных. Битовые флаги, показывающие элементы, включенные в обработку данных зондирования';


--
-- Name: COLUMN bufr_code_002022.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002022.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_002022.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002022.description IS 'Описание';


--
-- Name: bufr_code_002022_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002022_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002022_seq OWNER TO postgres;

--
-- Name: bufr_code_002023; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002023 (
    id bigint DEFAULT nextval(('public.bufr_code_002023_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002023 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002023; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002023 IS 'Кодовая таблица 002023 - Метод расчета ветра по спутниковым данным';


--
-- Name: COLUMN bufr_code_002023.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002023.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002023.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002023.description IS 'Описание';


--
-- Name: bufr_code_002023_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002023_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002023_seq OWNER TO postgres;

--
-- Name: bufr_code_002024; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002024 (
    id bigint DEFAULT nextval(('public.bufr_code_002024_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002024 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002024; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002024 IS 'Кодовая таблица 002024 - Метод вычисления средней влажности по слою';


--
-- Name: COLUMN bufr_code_002024.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002024.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002024.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002024.description IS 'Описание';


--
-- Name: bufr_code_002024_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002024_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002024_seq OWNER TO postgres;

--
-- Name: bufr_code_002025; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002025 (
    id bigint DEFAULT nextval(('public.bufr_code_002025_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    channel text
);


ALTER TABLE public.bufr_code_002025 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002025; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002025 IS 'Кодовая таблица 002025 - Спутниковые каналы, используемые в вычислениях';


--
-- Name: COLUMN bufr_code_002025.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002025.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_002025.channel; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002025.channel IS 'Прибор (каналы)';


--
-- Name: bufr_code_002025_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002025_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002025_seq OWNER TO postgres;

--
-- Name: bufr_code_002030; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002030 (
    id bigint DEFAULT nextval(('public.bufr_code_002030_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002030 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002030; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002030 IS 'Кодовая таблица 002030 - Метод измерения течения';


--
-- Name: COLUMN bufr_code_002030.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002030.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002030.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002030.description IS 'Описание';


--
-- Name: bufr_code_002030_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002030_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002030_seq OWNER TO postgres;

--
-- Name: bufr_code_002031; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002031 (
    id bigint DEFAULT nextval(('public.bufr_code_002031_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002031 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002031; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002031 IS 'Кодовая таблица 002031 - Продолжительность и время измерения течения';


--
-- Name: COLUMN bufr_code_002031.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002031.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002031.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002031.description IS 'Описание';


--
-- Name: bufr_code_002031_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002031_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002031_seq OWNER TO postgres;

--
-- Name: bufr_code_002032; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002032 (
    id bigint DEFAULT nextval(('public.bufr_code_002032_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002032 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002032; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002032 IS 'Кодовая таблица 002032 - Указатель преобразования в цифровую форму';


--
-- Name: COLUMN bufr_code_002032.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002032.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002032.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002032.description IS 'Описание';


--
-- Name: bufr_code_002032_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002032_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002032_seq OWNER TO postgres;

--
-- Name: bufr_code_002033; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002033 (
    id bigint DEFAULT nextval(('public.bufr_code_002033_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002033 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002033; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002033 IS 'Кодовая таблица 002033 - Метод измерения солености/глубины';


--
-- Name: COLUMN bufr_code_002033.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002033.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002033.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002033.description IS 'Описание';


--
-- Name: bufr_code_002033_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002033_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002033_seq OWNER TO postgres;

--
-- Name: bufr_code_002034; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002034 (
    id bigint DEFAULT nextval(('public.bufr_code_002034_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002034 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002034; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002034 IS 'Кодовая таблица 002034 - Тип плавучего якоря';


--
-- Name: COLUMN bufr_code_002034.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002034.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002034.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002034.description IS 'Описание';


--
-- Name: bufr_code_002034_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002034_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002034_seq OWNER TO postgres;

--
-- Name: bufr_code_002036; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002036 (
    id bigint DEFAULT nextval(('public.bufr_code_002036_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002036 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002036; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002036 IS 'Кодовая таблица 002036 - Тип буя';


--
-- Name: COLUMN bufr_code_002036.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002036.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002036.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002036.description IS 'Описание';


--
-- Name: bufr_code_002036_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002036_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002036_seq OWNER TO postgres;

--
-- Name: bufr_code_002037; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002037 (
    id bigint DEFAULT nextval(('public.bufr_code_002037_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002037 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002037; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002037 IS 'Кодовая таблица 002037 - Метод наблюдения за приливами';


--
-- Name: COLUMN bufr_code_002037.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002037.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002037.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002037.description IS 'Описание';


--
-- Name: bufr_code_002037_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002037_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002037_seq OWNER TO postgres;

--
-- Name: bufr_code_002038; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002038 (
    id bigint DEFAULT nextval(('public.bufr_code_002038_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002038 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002038; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002038 IS 'Кодовая таблица 002038 - Метод измерения температуры воды и/или солености';


--
-- Name: COLUMN bufr_code_002038.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002038.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002038.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002038.description IS 'Описание';


--
-- Name: bufr_code_002038_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002038_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002038_seq OWNER TO postgres;

--
-- Name: bufr_code_002039; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002039 (
    id bigint DEFAULT nextval(('public.bufr_code_002039_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002039 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002039; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002039 IS 'Кодовая таблица 002039 - Метод измерения температуры по смоченному термометру';


--
-- Name: COLUMN bufr_code_002039.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002039.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002039.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002039.description IS 'Описание';


--
-- Name: bufr_code_002039_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002039_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002039_seq OWNER TO postgres;

--
-- Name: bufr_code_002040; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002040 (
    id bigint DEFAULT nextval(('public.bufr_code_002040_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002040 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002040; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002040 IS 'Кодовая таблица 002040 - Метод исключения скорости и направления движения платформы при определении параметров течения';


--
-- Name: COLUMN bufr_code_002040.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002040.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002040.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002040.description IS 'Описание';


--
-- Name: bufr_code_002040_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002040_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002040_seq OWNER TO postgres;

--
-- Name: bufr_code_002041; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002041 (
    id bigint DEFAULT nextval(('public.bufr_code_002041_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002041 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002041; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002041 IS 'Кодовая таблица 002041 - Метод оценки сводок, касающихся синоптических характеристик';


--
-- Name: COLUMN bufr_code_002041.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002041.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002041.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002041.description IS 'Описание';


--
-- Name: bufr_code_002041_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002041_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002041_seq OWNER TO postgres;

--
-- Name: bufr_code_002042; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002042 (
    id bigint DEFAULT nextval(('public.bufr_code_002042_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002042 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002042; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002042 IS 'Кодовая таблица 002042 - Указатель скорости поверхностного морского течения';


--
-- Name: COLUMN bufr_code_002042.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002042.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002042.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002042.description IS 'Описание';


--
-- Name: bufr_code_002042_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002042_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002042_seq OWNER TO postgres;

--
-- Name: bufr_code_002044; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002044 (
    id bigint DEFAULT nextval(('public.bufr_code_002044_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002044 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002044; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002044 IS 'Кодовая таблица 002044 - Указатель метода расчета данных о спектре волны';


--
-- Name: COLUMN bufr_code_002044.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002044.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002044.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002044.description IS 'Описание';


--
-- Name: bufr_code_002044_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002044_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002044_seq OWNER TO postgres;

--
-- Name: bufr_code_002045; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002045 (
    id bigint DEFAULT nextval(('public.bufr_code_002045_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002045 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002045; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002045 IS 'Кодовая таблица 002045 - Указатель типа платформы';


--
-- Name: COLUMN bufr_code_002045.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002045.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002045.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002045.description IS 'Описание';


--
-- Name: bufr_code_002045_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002045_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002045_seq OWNER TO postgres;

--
-- Name: bufr_code_002046; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002046 (
    id bigint DEFAULT nextval(('public.bufr_code_002046_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002046 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002046; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002046 IS 'Кодовая таблица 002046 - Приборы, используемые для измерения волн';


--
-- Name: COLUMN bufr_code_002046.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002046.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002046.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002046.description IS 'Описание';


--
-- Name: bufr_code_002046_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002046_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002046_seq OWNER TO postgres;

--
-- Name: bufr_code_002047; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002047 (
    id bigint DEFAULT nextval(('public.bufr_code_002047_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002047 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002047; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002047 IS 'Кодовая таблица 002047 - Тип/производитель платформы глубоководного измерителя волн цунами';


--
-- Name: COLUMN bufr_code_002047.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002047.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002047.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002047.description IS 'Описание';


--
-- Name: bufr_code_002047_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002047_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002047_seq OWNER TO postgres;

--
-- Name: bufr_code_002048; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002048 (
    id bigint DEFAULT nextval(('public.bufr_code_002048_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002048 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002048; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002048 IS 'Кодовая таблица 002048 - Указатель спутникового датчика';


--
-- Name: COLUMN bufr_code_002048.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002048.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002048.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002048.description IS 'Описание';


--
-- Name: bufr_code_002048_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002048_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002048_seq OWNER TO postgres;

--
-- Name: bufr_code_002049; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002049 (
    id bigint DEFAULT nextval(('public.bufr_code_002049_seq'::text)::regclass) NOT NULL,
    unknown0 text,
    unknown1 text
);


ALTER TABLE public.bufr_code_002049 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002049; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002049 IS 'Кодовая таблица 002049 - Используемая методика обработки данных геостационарных спутников';


--
-- Name: COLUMN bufr_code_002049.unknown0; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002049.unknown0 IS 'Номер';


--
-- Name: COLUMN bufr_code_002049.unknown1; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002049.unknown1 IS 'бита';


--
-- Name: bufr_code_002049_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002049_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002049_seq OWNER TO postgres;

--
-- Name: bufr_code_002050; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002050 (
    id bigint DEFAULT nextval(('public.bufr_code_002050_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    channel text,
    channel_value text
);


ALTER TABLE public.bufr_code_002050 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002050; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002050 IS 'Кодовая таблица 002050 - Используемые каналы геостационарных спутников зондирования';


--
-- Name: COLUMN bufr_code_002050.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002050.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_002050.channel; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002050.channel IS 'Канал';


--
-- Name: COLUMN bufr_code_002050.channel_value; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002050.channel_value IS 'Данные центральной волны (микрометры)';


--
-- Name: bufr_code_002050_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002050_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002050_seq OWNER TO postgres;

--
-- Name: bufr_code_002051; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002051 (
    id bigint DEFAULT nextval(('public.bufr_code_002051_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002051 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002051; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002051 IS 'Кодовая таблица 002051 - Указатель для определения метода наблюдения за экстремальными температурами';


--
-- Name: COLUMN bufr_code_002051.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002051.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002051.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002051.description IS 'Описание';


--
-- Name: bufr_code_002051_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002051_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002051_seq OWNER TO postgres;

--
-- Name: bufr_code_002052; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002052 (
    id bigint DEFAULT nextval(('public.bufr_code_002052_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    channel text,
    channel_value text
);


ALTER TABLE public.bufr_code_002052 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002052; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002052 IS 'Кодовая таблица 002052 - Каналы для получения изображений, используемые на геостационарных спутниках';


--
-- Name: COLUMN bufr_code_002052.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002052.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_002052.channel; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002052.channel IS 'Канал';


--
-- Name: COLUMN bufr_code_002052.channel_value; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002052.channel_value IS 'Данные центральной волны (микрометры)';


--
-- Name: bufr_code_002052_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002052_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002052_seq OWNER TO postgres;

--
-- Name: bufr_code_002053; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002053 (
    id bigint DEFAULT nextval(('public.bufr_code_002053_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002053 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002053; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002053 IS 'Кодовая таблица 002053 - Характеристики яркостной температуры GOES-I/M';


--
-- Name: COLUMN bufr_code_002053.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002053.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002053.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002053.description IS 'Описание';


--
-- Name: bufr_code_002053_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002053_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002053_seq OWNER TO postgres;

--
-- Name: bufr_code_002054; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002054 (
    id bigint DEFAULT nextval(('public.bufr_code_002054_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002054 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002054; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002054 IS 'Кодовая таблица 002054 - Характеристики параметров зондирований GOES-I/M';


--
-- Name: COLUMN bufr_code_002054.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002054.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002054.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002054.description IS 'Описание';


--
-- Name: bufr_code_002054_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002054_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002054_seq OWNER TO postgres;

--
-- Name: bufr_code_002055; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002055 (
    id bigint DEFAULT nextval(('public.bufr_code_002055_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002055 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002055; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002055 IS 'Кодовая таблица 002055 - Статистические параметры геостационарного зондирования';


--
-- Name: COLUMN bufr_code_002055.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002055.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002055.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002055.description IS 'Описание';


--
-- Name: bufr_code_002055_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002055_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002055_seq OWNER TO postgres;

--
-- Name: bufr_code_002056; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002056 (
    id bigint DEFAULT nextval(('public.bufr_code_002056_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002056 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002056; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002056 IS 'Кодовая таблица 002056 - Статистика точности геостационарного зондирования';


--
-- Name: COLUMN bufr_code_002056.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002056.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002056.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002056.description IS 'Описание';


--
-- Name: bufr_code_002056_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002056_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002056_seq OWNER TO postgres;

--
-- Name: bufr_code_002057; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002057 (
    id bigint DEFAULT nextval(('public.bufr_code_002057_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002057 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002057; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002057 IS 'Кодовая таблица 002057 - Источник информации в нулевом приближении для зондирований GOES-I/M';


--
-- Name: COLUMN bufr_code_002057.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002057.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002057.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002057.description IS 'Описание';


--
-- Name: bufr_code_002057_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002057_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002057_seq OWNER TO postgres;

--
-- Name: bufr_code_002058; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002058 (
    id bigint DEFAULT nextval(('public.bufr_code_002058_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002058 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002058; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002058 IS 'Кодовая таблица 002058 - Эффективное время первой ориентировочной информации для зондирований GOES-I/M';


--
-- Name: COLUMN bufr_code_002058.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002058.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002058.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002058.description IS 'Описание';


--
-- Name: bufr_code_002058_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002058_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002058_seq OWNER TO postgres;

--
-- Name: bufr_code_002059; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002059 (
    id bigint DEFAULT nextval(('public.bufr_code_002059_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002059 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002059; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002059 IS 'Кодовая таблица 002059 - Источник аналитической информации для зондирований GOES-I/M';


--
-- Name: COLUMN bufr_code_002059.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002059.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002059.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002059.description IS 'Описание';


--
-- Name: bufr_code_002059_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002059_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002059_seq OWNER TO postgres;

--
-- Name: bufr_code_002060; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002060 (
    id bigint DEFAULT nextval(('public.bufr_code_002060_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002060 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002060; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002060 IS 'Кодовая таблица 002060 - Источник приземной информации для зондирований GOES-I/M';


--
-- Name: COLUMN bufr_code_002060.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002060.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002060.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002060.description IS 'Описание';


--
-- Name: bufr_code_002060_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002060_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002060_seq OWNER TO postgres;

--
-- Name: bufr_code_002061; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002061 (
    id bigint DEFAULT nextval(('public.bufr_code_002061_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002061 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002061; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002061 IS 'Кодовая таблица 002061 - Навигационная система воздушного судна';


--
-- Name: COLUMN bufr_code_002061.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002061.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002061.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002061.description IS 'Описание';


--
-- Name: bufr_code_002061_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002061_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002061_seq OWNER TO postgres;

--
-- Name: bufr_code_002062; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002062 (
    id bigint DEFAULT nextval(('public.bufr_code_002062_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002062 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002062; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002062 IS 'Кодовая таблица 002062 - Тип системы ретрансляции данных с воздушного судна';


--
-- Name: COLUMN bufr_code_002062.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002062.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002062.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002062.description IS 'Описание';


--
-- Name: bufr_code_002062_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002062_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002062_seq OWNER TO postgres;

--
-- Name: bufr_code_002064; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002064 (
    id bigint DEFAULT nextval(('public.bufr_code_002064_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002064 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002064; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002064 IS 'Кодовая таблица 002064 - Качество угла крена воздушного судна';


--
-- Name: COLUMN bufr_code_002064.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002064.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002064.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002064.description IS 'Описание';


--
-- Name: bufr_code_002064_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002064_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002064_seq OWNER TO postgres;

--
-- Name: bufr_code_002066; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002066 (
    id bigint DEFAULT nextval(('public.bufr_code_002066_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002066 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002066; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002066 IS 'Кодовая таблица 002066 - Наземная система приема сигналов радиозонда';


--
-- Name: COLUMN bufr_code_002066.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002066.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002066.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002066.description IS 'Описание';


--
-- Name: bufr_code_002066_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002066_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002066_seq OWNER TO postgres;

--
-- Name: bufr_code_002070; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002070 (
    id bigint DEFAULT nextval(('public.bufr_code_002070_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002070 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002070; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002070 IS 'Кодовая таблица 002070 - Первоначальная спецификация широты/долготы';


--
-- Name: COLUMN bufr_code_002070.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002070.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002070.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002070.description IS 'Описание';


--
-- Name: bufr_code_002070_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002070_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002070_seq OWNER TO postgres;

--
-- Name: bufr_code_002080; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002080 (
    id bigint DEFAULT nextval(('public.bufr_code_002080_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002080 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002080; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002080 IS 'Кодовая таблица 002080 - Производитель шара-зонда';


--
-- Name: COLUMN bufr_code_002080.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002080.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002080.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002080.description IS 'Описание';


--
-- Name: bufr_code_002080_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002080_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002080_seq OWNER TO postgres;

--
-- Name: bufr_code_002081; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002081 (
    id bigint DEFAULT nextval(('public.bufr_code_002081_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002081 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002081; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002081 IS 'Кодовая таблица 002081 - Тип шара-зонда';


--
-- Name: COLUMN bufr_code_002081.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002081.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002081.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002081.description IS 'Описание';


--
-- Name: bufr_code_002081_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002081_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002081_seq OWNER TO postgres;

--
-- Name: bufr_code_002083; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002083 (
    id bigint DEFAULT nextval(('public.bufr_code_002083_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002083 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002083; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002083 IS 'Кодовая таблица 002083 - Тип укрытия для шаров-зондов';


--
-- Name: COLUMN bufr_code_002083.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002083.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002083.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002083.description IS 'Описание';


--
-- Name: bufr_code_002083_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002083_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002083_seq OWNER TO postgres;

--
-- Name: bufr_code_002084; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002084 (
    id bigint DEFAULT nextval(('public.bufr_code_002084_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002084 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002084; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002084 IS 'Кодовая таблица 002084 - Тип газа, используемого для шара-зонда';


--
-- Name: COLUMN bufr_code_002084.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002084.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002084.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002084.description IS 'Описание';


--
-- Name: bufr_code_002084_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002084_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002084_seq OWNER TO postgres;

--
-- Name: bufr_code_002095; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002095 (
    id bigint DEFAULT nextval(('public.bufr_code_002095_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002095 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002095; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002095 IS 'Кодовая таблица 002095 - Тип датчика давления';


--
-- Name: COLUMN bufr_code_002095.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002095.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002095.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002095.description IS 'Описание';


--
-- Name: bufr_code_002095_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002095_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002095_seq OWNER TO postgres;

--
-- Name: bufr_code_002096; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002096 (
    id bigint DEFAULT nextval(('public.bufr_code_002096_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002096 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002096; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002096 IS 'Кодовая таблица 002096 - Тип датчика температуры';


--
-- Name: COLUMN bufr_code_002096.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002096.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002096.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002096.description IS 'Описание';


--
-- Name: bufr_code_002096_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002096_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002096_seq OWNER TO postgres;

--
-- Name: bufr_code_002097; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002097 (
    id bigint DEFAULT nextval(('public.bufr_code_002097_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002097 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002097; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002097 IS 'Кодовая таблица 002097 - Тип датчика влажности';


--
-- Name: COLUMN bufr_code_002097.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002097.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002097.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002097.description IS 'Описание';


--
-- Name: bufr_code_002097_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002097_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002097_seq OWNER TO postgres;

--
-- Name: bufr_code_002099; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002099 (
    id bigint DEFAULT nextval(('public.bufr_code_002099_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002099 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002099; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002099 IS 'Кодовая таблица 002099 - Поляризация';


--
-- Name: COLUMN bufr_code_002099.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002099.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002099.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002099.description IS 'Описание';


--
-- Name: bufr_code_002099_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002099_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002099_seq OWNER TO postgres;

--
-- Name: bufr_code_002101; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002101 (
    id bigint DEFAULT nextval(('public.bufr_code_002101_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002101 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002101; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002101 IS 'Кодовая таблица 002101 - Тип антенны';


--
-- Name: COLUMN bufr_code_002101.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002101.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002101.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002101.description IS 'Описание';


--
-- Name: bufr_code_002101_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002101_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002101_seq OWNER TO postgres;

--
-- Name: bufr_code_002103; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002103 (
    id bigint DEFAULT nextval(('public.bufr_code_002103_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_002103 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002103; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002103 IS 'Кодовая таблица 002103 - Обтекатель антенны';


--
-- Name: COLUMN bufr_code_002103.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002103.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_002103.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002103.description IS 'Описание';


--
-- Name: bufr_code_002103_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002103_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002103_seq OWNER TO postgres;

--
-- Name: bufr_code_002104; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002104 (
    id bigint DEFAULT nextval(('public.bufr_code_002104_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002104 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002104; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002104 IS 'Кодовая таблица 002104 - Поляризация антенны';


--
-- Name: COLUMN bufr_code_002104.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002104.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002104.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002104.description IS 'Описание';


--
-- Name: bufr_code_002104_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002104_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002104_seq OWNER TO postgres;

--
-- Name: bufr_code_002115; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002115 (
    id bigint DEFAULT nextval(('public.bufr_code_002115_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002115 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002115; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002115 IS 'Кодовая таблица 002115 - Тип оборудования для приземных наблюдений';


--
-- Name: COLUMN bufr_code_002115.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002115.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002115.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002115.description IS 'Описание';


--
-- Name: bufr_code_002115_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002115_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002115_seq OWNER TO postgres;

--
-- Name: bufr_code_002119; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002119 (
    id bigint DEFAULT nextval(('public.bufr_code_002119_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002119 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002119; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002119 IS 'Кодовая таблица 002119 - Режим работы прибора RA-2';


--
-- Name: COLUMN bufr_code_002119.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002119.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002119.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002119.description IS 'Описание';


--
-- Name: bufr_code_002119_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002119_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002119_seq OWNER TO postgres;

--
-- Name: bufr_code_002131; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002131 (
    id bigint DEFAULT nextval(('public.bufr_code_002131_seq'::text)::regclass) NOT NULL,
    unknown0 text,
    unknown1 text
);


ALTER TABLE public.bufr_code_002131 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002131; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002131 IS 'Кодовая таблица 002131 - Временной контроль чувствительности (STC)';


--
-- Name: COLUMN bufr_code_002131.unknown0; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002131.unknown0 IS 'Номер';


--
-- Name: COLUMN bufr_code_002131.unknown1; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002131.unknown1 IS 'бита';


--
-- Name: bufr_code_002131_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002131_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002131_seq OWNER TO postgres;

--
-- Name: bufr_code_002137; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002137 (
    id bigint DEFAULT nextval(('public.bufr_code_002137_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002137 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002137; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002137 IS 'Кодовая таблица 002137 - Соотношение двойной частоты повторения импульсов (ЧПИ) радиолокатора';


--
-- Name: COLUMN bufr_code_002137.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002137.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002137.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002137.description IS 'Описание';


--
-- Name: bufr_code_002137_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002137_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002137_seq OWNER TO postgres;

--
-- Name: bufr_code_002138; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002138 (
    id bigint DEFAULT nextval(('public.bufr_code_002138_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002138 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002138; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002138 IS 'Кодовая таблица 002138 - Направление вращения антенны';


--
-- Name: COLUMN bufr_code_002138.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002138.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002138.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002138.description IS 'Описание';


--
-- Name: bufr_code_002138_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002138_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002138_seq OWNER TO postgres;

--
-- Name: bufr_code_002139; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002139 (
    id bigint DEFAULT nextval(('public.bufr_code_002139_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002139 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002139; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002139 IS 'Кодовая таблица 002139 - Компоновка приборов SIRAL';


--
-- Name: COLUMN bufr_code_002139.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002139.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002139.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002139.description IS 'Описание';


--
-- Name: bufr_code_002139_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002139_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002139_seq OWNER TO postgres;

--
-- Name: bufr_code_002143; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002143 (
    id bigint DEFAULT nextval(('public.bufr_code_002143_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002143 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002143; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002143 IS 'Кодовая таблица 002143 - Тип прибора для измерения озона';


--
-- Name: COLUMN bufr_code_002143.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002143.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002143.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002143.description IS 'Описание';


--
-- Name: bufr_code_002143_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002143_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002143_seq OWNER TO postgres;

--
-- Name: bufr_code_002144; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002144 (
    id bigint DEFAULT nextval(('public.bufr_code_002144_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002144 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002144; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002144 IS 'Кодовая таблица 002144 - Тип источника света для спектрофотометра Брюйера';


--
-- Name: COLUMN bufr_code_002144.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002144.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002144.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002144.description IS 'Описание';


--
-- Name: bufr_code_002144_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002144_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002144_seq OWNER TO postgres;

--
-- Name: bufr_code_002145; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002145 (
    id bigint DEFAULT nextval(('public.bufr_code_002145_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002145 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002145; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002145 IS 'Кодовая таблица 002145 - Установка длины волны для приборов Добсона';


--
-- Name: COLUMN bufr_code_002145.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002145.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002145.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002145.description IS 'Описание';


--
-- Name: bufr_code_002145_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002145_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002145_seq OWNER TO postgres;

--
-- Name: bufr_code_002146; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002146 (
    id bigint DEFAULT nextval(('public.bufr_code_002146_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002146 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002146; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002146 IS 'Кодовая таблица 002146 - Условия источника для приборов Добсона';


--
-- Name: COLUMN bufr_code_002146.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002146.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002146.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002146.description IS 'Описание';


--
-- Name: bufr_code_002146_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002146_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002146_seq OWNER TO postgres;

--
-- Name: bufr_code_002148; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002148 (
    id bigint DEFAULT nextval(('public.bufr_code_002148_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002148 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002148; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002148 IS 'Кодовая таблица 002148 - Система сбора данных и/или определения местоположения';


--
-- Name: COLUMN bufr_code_002148.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002148.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002148.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002148.description IS 'Описание';


--
-- Name: bufr_code_002148_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002148_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002148_seq OWNER TO postgres;

--
-- Name: bufr_code_002149; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002149 (
    id bigint DEFAULT nextval(('public.bufr_code_002149_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002149 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002149; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002149 IS 'Кодовая таблица 002149 - Тип буя для сбора данных';


--
-- Name: COLUMN bufr_code_002149.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002149.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002149.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002149.description IS 'Описание';


--
-- Name: bufr_code_002149_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002149_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002149_seq OWNER TO postgres;

--
-- Name: bufr_code_002150; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002150 (
    id bigint DEFAULT nextval(('public.bufr_code_002150_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002150 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002150; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002150 IS 'Кодовая таблица 002150 - Номер канала используемого прибора TOVS/ATOVS/AVHRR';


--
-- Name: COLUMN bufr_code_002150.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002150.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002150.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002150.description IS 'Описание';


--
-- Name: bufr_code_002150_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002150_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002150_seq OWNER TO postgres;

--
-- Name: bufr_code_002151; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002151 (
    id bigint DEFAULT nextval(('public.bufr_code_002151_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002151 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002151; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002151 IS 'Кодовая таблица 002151 - Идентификатор радиометра';


--
-- Name: COLUMN bufr_code_002151.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002151.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002151.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002151.description IS 'Описание';


--
-- Name: bufr_code_002151_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002151_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002151_seq OWNER TO postgres;

--
-- Name: bufr_code_002152; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002152 (
    id bigint DEFAULT nextval(('public.bufr_code_002152_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_002152 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002152; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002152 IS 'Кодовая таблица 002152 - Спутниковые приборы, используемые при обработке данных';


--
-- Name: COLUMN bufr_code_002152.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002152.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_002152.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002152.description IS 'Описание';


--
-- Name: bufr_code_002152_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002152_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002152_seq OWNER TO postgres;

--
-- Name: bufr_code_002158; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002158 (
    id bigint DEFAULT nextval(('public.bufr_code_002158_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_002158 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002158; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002158 IS 'Кодовая таблица 002158 - Приборы RA-2';


--
-- Name: COLUMN bufr_code_002158.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002158.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_002158.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002158.description IS 'Описание';


--
-- Name: bufr_code_002158_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002158_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002158_seq OWNER TO postgres;

--
-- Name: bufr_code_002159; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002159 (
    id bigint DEFAULT nextval(('public.bufr_code_002159_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_002159 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002159; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002159 IS 'Кодовая таблица 002159 - Приборы MWR';


--
-- Name: COLUMN bufr_code_002159.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002159.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_002159.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002159.description IS 'Описание';


--
-- Name: bufr_code_002159_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002159_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002159_seq OWNER TO postgres;

--
-- Name: bufr_code_002160; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002160 (
    id bigint DEFAULT nextval(('public.bufr_code_002160_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002160 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002160; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002160 IS 'Кодовая таблица 002160 - Длина волны радиолокатора';


--
-- Name: COLUMN bufr_code_002160.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002160.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002160.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002160.description IS 'Описание';


--
-- Name: bufr_code_002160_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002160_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002160_seq OWNER TO postgres;

--
-- Name: bufr_code_002163; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002163 (
    id bigint DEFAULT nextval(('public.bufr_code_002163_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002163 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002163; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002163 IS 'Кодовая таблица 002163 - Метод определения высоты';


--
-- Name: COLUMN bufr_code_002163.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002163.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002163.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002163.description IS 'Описание';


--
-- Name: bufr_code_002163_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002163_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002163_seq OWNER TO postgres;

--
-- Name: bufr_code_002164; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002164 (
    id bigint DEFAULT nextval(('public.bufr_code_002164_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002164 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002164; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002164 IS 'Кодовая таблица 002164 - Метод корреляции слежения';


--
-- Name: COLUMN bufr_code_002164.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002164.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002164.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002164.description IS 'Описание';


--
-- Name: bufr_code_002164_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002164_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002164_seq OWNER TO postgres;

--
-- Name: bufr_code_002165; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002165 (
    id bigint DEFAULT nextval(('public.bufr_code_002165_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_002165 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002165; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002165 IS 'Кодовая таблица 002165 - Флаги типа излучения';


--
-- Name: COLUMN bufr_code_002165.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002165.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_002165.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002165.description IS 'Описание';


--
-- Name: bufr_code_002165_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002165_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002165_seq OWNER TO postgres;

--
-- Name: bufr_code_002166; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002166 (
    id bigint DEFAULT nextval(('public.bufr_code_002166_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002166 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002166; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002166 IS 'Кодовая таблица 002166 - Тип излучения';


--
-- Name: COLUMN bufr_code_002166.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002166.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002166.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002166.description IS 'Описание';


--
-- Name: bufr_code_002166_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002166_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002166_seq OWNER TO postgres;

--
-- Name: bufr_code_002167; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002167 (
    id bigint DEFAULT nextval(('public.bufr_code_002167_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002167 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002167; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002167 IS 'Кодовая таблица 002167 - Метод расчета излучения';


--
-- Name: COLUMN bufr_code_002167.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002167.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002167.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002167.description IS 'Описание';


--
-- Name: bufr_code_002167_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002167_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002167_seq OWNER TO postgres;

--
-- Name: bufr_code_002169; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002169 (
    id bigint DEFAULT nextval(('public.bufr_code_002169_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002169 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002169; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002169 IS 'Кодовая таблица 002169 - Тип анемометра';


--
-- Name: COLUMN bufr_code_002169.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002169.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002169.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002169.description IS 'Описание';


--
-- Name: bufr_code_002169_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002169_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002169_seq OWNER TO postgres;

--
-- Name: bufr_code_002170; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002170 (
    id bigint DEFAULT nextval(('public.bufr_code_002170_seq'::text)::regclass) NOT NULL,
    code integer,
    sensor_type text
);


ALTER TABLE public.bufr_code_002170 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002170; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002170 IS 'Кодовая таблица 002170 - Самолетные датчики влажности';


--
-- Name: COLUMN bufr_code_002170.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002170.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002170.sensor_type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002170.sensor_type IS 'Тип датчика';


--
-- Name: bufr_code_002170_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002170_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002170_seq OWNER TO postgres;

--
-- Name: bufr_code_002172; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002172 (
    id bigint DEFAULT nextval(('public.bufr_code_002172_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002172 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002172; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002172 IS 'Кодовая таблица 002172 - Тип продукции по атмосферным газам, (восстановленной по спутниковым данным)';


--
-- Name: COLUMN bufr_code_002172.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002172.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002172.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002172.description IS 'Описание';


--
-- Name: bufr_code_002172_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002172_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002172_seq OWNER TO postgres;

--
-- Name: bufr_code_002175; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002175 (
    id bigint DEFAULT nextval(('public.bufr_code_002175_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002175 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002175; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002175 IS 'Кодовая таблица 002175 - Метод измерения осадков';


--
-- Name: COLUMN bufr_code_002175.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002175.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002175.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002175.description IS 'Описание';


--
-- Name: bufr_code_002175_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002175_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002175_seq OWNER TO postgres;

--
-- Name: bufr_code_002176; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002176 (
    id bigint DEFAULT nextval(('public.bufr_code_002176_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002176 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002176; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002176 IS 'Кодовая таблица 002176 - Метод измерения состояния поверхности земли';


--
-- Name: COLUMN bufr_code_002176.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002176.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002176.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002176.description IS 'Описание';


--
-- Name: bufr_code_002176_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002176_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002176_seq OWNER TO postgres;

--
-- Name: bufr_code_002177; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002177 (
    id bigint DEFAULT nextval(('public.bufr_code_002177_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002177 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002177; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002177 IS 'Кодовая таблица 002177 - Метод измерения высоты снежного покрова';


--
-- Name: COLUMN bufr_code_002177.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002177.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002177.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002177.description IS 'Описание';


--
-- Name: bufr_code_002177_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002177_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002177_seq OWNER TO postgres;

--
-- Name: bufr_code_002178; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002178 (
    id bigint DEFAULT nextval(('public.bufr_code_002178_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002178 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002178; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002178 IS 'Кодовая таблица 002178 - Метод измерения жидкой фазы осадков';


--
-- Name: COLUMN bufr_code_002178.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002178.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002178.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002178.description IS 'Описание';


--
-- Name: bufr_code_002178_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002178_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002178_seq OWNER TO postgres;

--
-- Name: bufr_code_002179; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002179 (
    id bigint DEFAULT nextval(('public.bufr_code_002179_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002179 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002179; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002179 IS 'Кодовая таблица 002179 - Тип алгоритма состояния неба';


--
-- Name: COLUMN bufr_code_002179.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002179.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002179.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002179.description IS 'Описание';


--
-- Name: bufr_code_002179_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002179_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002179_seq OWNER TO postgres;

--
-- Name: bufr_code_002180; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002180 (
    id bigint DEFAULT nextval(('public.bufr_code_002180_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002180 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002180; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002180 IS 'Кодовая таблица 002180 - Основная система определения текущей погоды';


--
-- Name: COLUMN bufr_code_002180.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002180.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002180.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002180.description IS 'Описание';


--
-- Name: bufr_code_002180_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002180_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002180_seq OWNER TO postgres;

--
-- Name: bufr_code_002181; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002181 (
    id bigint DEFAULT nextval(('public.bufr_code_002181_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002181 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002181; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002181 IS 'Кодовая таблица 002181 - Дополнительный датчик текущей погоды';


--
-- Name: COLUMN bufr_code_002181.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002181.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002181.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002181.description IS 'Описание';


--
-- Name: bufr_code_002181_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002181_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002181_seq OWNER TO postgres;

--
-- Name: bufr_code_002182; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002182 (
    id bigint DEFAULT nextval(('public.bufr_code_002182_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002182 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002182; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002182 IS 'Кодовая таблица 002182 - Система измерения видимости';


--
-- Name: COLUMN bufr_code_002182.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002182.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002182.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002182.description IS 'Описание';


--
-- Name: bufr_code_002182_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002182_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002182_seq OWNER TO postgres;

--
-- Name: bufr_code_002183; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002183 (
    id bigint DEFAULT nextval(('public.bufr_code_002183_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002183 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002183; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002183 IS 'Кодовая таблица 002183 - Система обнаружения облаков';


--
-- Name: COLUMN bufr_code_002183.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002183.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002183.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002183.description IS 'Описание';


--
-- Name: bufr_code_002183_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002183_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002183_seq OWNER TO postgres;

--
-- Name: bufr_code_002184; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002184 (
    id bigint DEFAULT nextval(('public.bufr_code_002184_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002184 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002184; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002184 IS 'Кодовая таблица 002184 - Тип датчика обнаружения молний';


--
-- Name: COLUMN bufr_code_002184.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002184.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002184.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002184.description IS 'Описание';


--
-- Name: bufr_code_002184_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002184_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002184_seq OWNER TO postgres;

--
-- Name: bufr_code_002185; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002185 (
    id bigint DEFAULT nextval(('public.bufr_code_002185_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002185 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002185; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002185 IS 'Кодовая таблица 002185 - Метод измерения испарения';


--
-- Name: COLUMN bufr_code_002185.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002185.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002185.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002185.description IS 'Описание';


--
-- Name: bufr_code_002185_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002185_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002185_seq OWNER TO postgres;

--
-- Name: bufr_code_002186; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002186 (
    id bigint DEFAULT nextval(('public.bufr_code_002186_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_002186 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002186; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002186 IS 'Кодовая таблица 002186 - Способность обнаруживать явления осадков';


--
-- Name: COLUMN bufr_code_002186.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002186.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_002186.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002186.description IS 'Описание';


--
-- Name: bufr_code_002186_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002186_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002186_seq OWNER TO postgres;

--
-- Name: bufr_code_002187; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002187 (
    id bigint DEFAULT nextval(('public.bufr_code_002187_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_002187 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002187; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002187 IS 'Кодовая таблица 002187 - Способность обнаруживать другие явления погоды';


--
-- Name: COLUMN bufr_code_002187.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002187.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_002187.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002187.description IS 'Описание';


--
-- Name: bufr_code_002187_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002187_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002187_seq OWNER TO postgres;

--
-- Name: bufr_code_002188; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002188 (
    id bigint DEFAULT nextval(('public.bufr_code_002188_seq'::text)::regclass) NOT NULL,
    unknown0 text,
    unknown1 text
);


ALTER TABLE public.bufr_code_002188 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002188; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002188 IS 'Кодовая таблица 002188 - Способность обнаруживать явления, ухудшающие видимость';


--
-- Name: COLUMN bufr_code_002188.unknown0; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002188.unknown0 IS 'Номер';


--
-- Name: COLUMN bufr_code_002188.unknown1; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002188.unknown1 IS 'бита';


--
-- Name: bufr_code_002188_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002188_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002188_seq OWNER TO postgres;

--
-- Name: bufr_code_002189; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002189 (
    id bigint DEFAULT nextval(('public.bufr_code_002189_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_002189 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002189; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002189 IS 'Кодовая таблица 002189 - Способность различать удары молнии';


--
-- Name: COLUMN bufr_code_002189.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002189.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_002189.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002189.description IS 'Описание';


--
-- Name: bufr_code_002189_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002189_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002189_seq OWNER TO postgres;

--
-- Name: bufr_code_002191; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_002191 (
    id bigint DEFAULT nextval(('public.bufr_code_002191_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_002191 OWNER TO postgres;

--
-- Name: TABLE bufr_code_002191; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_002191 IS 'Кодовая таблица 002191 - Расчет геопотенциальной высоты';


--
-- Name: COLUMN bufr_code_002191.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002191.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_002191.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_002191.description IS 'Описание';


--
-- Name: bufr_code_002191_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_002191_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_002191_seq OWNER TO postgres;

--
-- Name: bufr_code_004059; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_004059 (
    id bigint DEFAULT nextval(('public.bufr_code_004059_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_004059 OWNER TO postgres;

--
-- Name: TABLE bufr_code_004059; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_004059 IS 'Кодовая таблица 004059 - Сроки наблюдений, использованные для вычисления сообщённых средних значений';


--
-- Name: COLUMN bufr_code_004059.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_004059.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_004059.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_004059.description IS 'Описание';


--
-- Name: bufr_code_004059_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_004059_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_004059_seq OWNER TO postgres;

--
-- Name: bufr_code_004080; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_004080 (
    id bigint DEFAULT nextval(('public.bufr_code_004080_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_004080 OWNER TO postgres;

--
-- Name: TABLE bufr_code_004080; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_004080 IS 'Кодовая таблица 004080 - Период усреднения для следующего значения';


--
-- Name: COLUMN bufr_code_004080.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_004080.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_004080.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_004080.description IS 'Описание';


--
-- Name: bufr_code_004080_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_004080_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_004080_seq OWNER TO postgres;

--
-- Name: bufr_code_008001; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008001 (
    id bigint DEFAULT nextval(('public.bufr_code_008001_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_008001 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008001; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008001 IS 'Кодовая таблица 008001 - Значимость вертикального зондирования';


--
-- Name: COLUMN bufr_code_008001.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008001.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_008001.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008001.description IS 'Описание';


--
-- Name: bufr_code_008001_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008001_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008001_seq OWNER TO postgres;

--
-- Name: bufr_code_008002; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008002 (
    id bigint DEFAULT nextval(('public.bufr_code_008002_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008002 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008002; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008002 IS 'Кодовая таблица 008002 - Вертикальная значимость (приземные наблюдения)';


--
-- Name: COLUMN bufr_code_008002.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008002.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008002.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008002.description IS 'Описание';


--
-- Name: bufr_code_008002_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008002_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008002_seq OWNER TO postgres;

--
-- Name: bufr_code_008003; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008003 (
    id bigint DEFAULT nextval(('public.bufr_code_008003_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008003 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008003; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008003 IS 'Кодовая таблица 008003 - Вертикальная значимость (спутниковые наблюдения)';


--
-- Name: COLUMN bufr_code_008003.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008003.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008003.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008003.description IS 'Описание';


--
-- Name: bufr_code_008003_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008003_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008003_seq OWNER TO postgres;

--
-- Name: bufr_code_008004; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008004 (
    id bigint DEFAULT nextval(('public.bufr_code_008004_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008004 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008004; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008004 IS 'Кодовая таблица 008004 - Фаза полета воздушного судна';


--
-- Name: COLUMN bufr_code_008004.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008004.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008004.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008004.description IS 'Описание';


--
-- Name: bufr_code_008004_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008004_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008004_seq OWNER TO postgres;

--
-- Name: bufr_code_008005; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008005 (
    id bigint DEFAULT nextval(('public.bufr_code_008005_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008005 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008005; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008005 IS 'Кодовая таблица 008005 - Значимость приземного синоптического образования';


--
-- Name: COLUMN bufr_code_008005.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008005.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008005.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008005.description IS 'Описание';


--
-- Name: bufr_code_008005_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008005_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008005_seq OWNER TO postgres;

--
-- Name: bufr_code_008006; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008006 (
    id bigint DEFAULT nextval(('public.bufr_code_008006_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_008006 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008006; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008006 IS 'Кодовая таблица 008006 - Значимость вертикального зондирования озона';


--
-- Name: COLUMN bufr_code_008006.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008006.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_008006.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008006.description IS 'Описание';


--
-- Name: bufr_code_008006_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008006_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008006_seq OWNER TO postgres;

--
-- Name: bufr_code_008007; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008007 (
    id bigint DEFAULT nextval(('public.bufr_code_008007_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008007 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008007; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008007 IS 'Кодовая таблица 008007 - Значимость размера';


--
-- Name: COLUMN bufr_code_008007.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008007.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008007.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008007.description IS 'Описание';


--
-- Name: bufr_code_008007_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008007_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008007_seq OWNER TO postgres;

--
-- Name: bufr_code_008008; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008008 (
    id bigint DEFAULT nextval(('public.bufr_code_008008_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_008008 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008008; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008008 IS 'Кодовая таблица 008008 - Значимость вертикального зондирования радиации';


--
-- Name: COLUMN bufr_code_008008.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008008.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_008008.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008008.description IS 'Описание';


--
-- Name: bufr_code_008008_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008008_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008008_seq OWNER TO postgres;

--
-- Name: bufr_code_008009; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008009 (
    id bigint DEFAULT nextval(('public.bufr_code_008009_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008009 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008009; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008009 IS 'Кодовая таблица 008009 - Подробная фаза полета воздушного судна';


--
-- Name: COLUMN bufr_code_008009.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008009.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008009.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008009.description IS 'Описание';


--
-- Name: bufr_code_008009_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008009_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008009_seq OWNER TO postgres;

--
-- Name: bufr_code_008010; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008010 (
    id bigint DEFAULT nextval(('public.bufr_code_008010_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008010 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008010; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008010 IS 'Кодовая таблица 008010 - Описатель поверхности (для данных о температуре)';


--
-- Name: COLUMN bufr_code_008010.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008010.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008010.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008010.description IS 'Описание';


--
-- Name: bufr_code_008010_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008010_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008010_seq OWNER TO postgres;

--
-- Name: bufr_code_008011; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008011 (
    id bigint DEFAULT nextval(('public.bufr_code_008011_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008011 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008011; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008011 IS 'Кодовая таблица 008011 - Метеорологическая характеристика';


--
-- Name: COLUMN bufr_code_008011.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008011.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008011.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008011.description IS 'Описание';


--
-- Name: bufr_code_008011_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008011_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008011_seq OWNER TO postgres;

--
-- Name: bufr_code_008012; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008012 (
    id bigint DEFAULT nextval(('public.bufr_code_008012_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008012 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008012; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008012 IS 'Кодовая таблица 008012 - Описатель суши/моря';


--
-- Name: COLUMN bufr_code_008012.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008012.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008012.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008012.description IS 'Описание';


--
-- Name: bufr_code_008012_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008012_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008012_seq OWNER TO postgres;

--
-- Name: bufr_code_008013; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008013 (
    id bigint DEFAULT nextval(('public.bufr_code_008013_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008013 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008013; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008013 IS 'Кодовая таблица 008013 - Описатель дня/ночи';


--
-- Name: COLUMN bufr_code_008013.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008013.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008013.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008013.description IS 'Описание';


--
-- Name: bufr_code_008013_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008013_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008013_seq OWNER TO postgres;

--
-- Name: bufr_code_008014; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008014 (
    id bigint DEFAULT nextval(('public.bufr_code_008014_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008014 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008014; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008014 IS 'Кодовая таблица 008014 - Описатель дальности видимости на взлетно-посадочной полосе';


--
-- Name: COLUMN bufr_code_008014.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008014.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008014.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008014.description IS 'Описание';


--
-- Name: bufr_code_008014_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008014_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008014_seq OWNER TO postgres;

--
-- Name: bufr_code_008016; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008016 (
    id bigint DEFAULT nextval(('public.bufr_code_008016_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008016 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008016; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008016 IS 'Кодовая таблица 008016 - Описатель изменения прогноза трендового типа или прогноза по аэродрому';


--
-- Name: COLUMN bufr_code_008016.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008016.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008016.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008016.description IS 'Описание';


--
-- Name: bufr_code_008016_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008016_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008016_seq OWNER TO postgres;

--
-- Name: bufr_code_008017; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008017 (
    id bigint DEFAULT nextval(('public.bufr_code_008017_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008017 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008017; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008017 IS 'Кодовая таблица 008017 - Описатель времени, когда ожидается изменение прогноза';


--
-- Name: COLUMN bufr_code_008017.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008017.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008017.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008017.description IS 'Описание';


--
-- Name: bufr_code_008017_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008017_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008017_seq OWNER TO postgres;

--
-- Name: bufr_code_008018; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008018 (
    id bigint DEFAULT nextval(('public.bufr_code_008018_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_008018 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008018; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008018 IS 'Кодовая таблица 008018 - Тип поверхности суша/лед по наблюдениям SEAWINDS';


--
-- Name: COLUMN bufr_code_008018.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008018.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_008018.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008018.description IS 'Описание';


--
-- Name: bufr_code_008018_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008018_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008018_seq OWNER TO postgres;

--
-- Name: bufr_code_008019; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008019 (
    id bigint DEFAULT nextval(('public.bufr_code_008019_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_008019 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008019; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008019 IS 'Кодовая таблица 008019 - Определитель для следующего указателя центра';


--
-- Name: COLUMN bufr_code_008019.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008019.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_008019.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008019.description IS 'Описание';


--
-- Name: bufr_code_008019_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008019_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008019_seq OWNER TO postgres;

--
-- Name: bufr_code_008021; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008021 (
    id bigint DEFAULT nextval(('public.bufr_code_008021_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008021 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008021; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008021 IS 'Кодовая таблица 008021 - Значимость времени';


--
-- Name: COLUMN bufr_code_008021.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008021.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008021.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008021.description IS 'Описание';


--
-- Name: bufr_code_008021_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008021_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008021_seq OWNER TO postgres;

--
-- Name: bufr_code_008023; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008023 (
    id bigint DEFAULT nextval(('public.bufr_code_008023_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008023 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008023; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008023 IS 'Кодовая таблица 008023 - Данные первого порядка*';


--
-- Name: COLUMN bufr_code_008023.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008023.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008023.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008023.description IS 'Описание';


--
-- Name: bufr_code_008023_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008023_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008023_seq OWNER TO postgres;

--
-- Name: bufr_code_008024; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008024 (
    id bigint DEFAULT nextval(('public.bufr_code_008024_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008024 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008024; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008024 IS 'Кодовая таблица 008024 - Данные о разностях*';


--
-- Name: COLUMN bufr_code_008024.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008024.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008024.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008024.description IS 'Описание';


--
-- Name: bufr_code_008024_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008024_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008024_seq OWNER TO postgres;

--
-- Name: bufr_code_008025; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008025 (
    id bigint DEFAULT nextval(('public.bufr_code_008025_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008025 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008025; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008025 IS 'Кодовая таблица 008025 - Описатель разницы во времени';


--
-- Name: COLUMN bufr_code_008025.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008025.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008025.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008025.description IS 'Описание';


--
-- Name: bufr_code_008025_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008025_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008025_seq OWNER TO postgres;

--
-- Name: bufr_code_008026; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008026 (
    id bigint DEFAULT nextval(('public.bufr_code_008026_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008026 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008026; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008026 IS 'Кодовая таблица 008026 - Значимость матрицы';


--
-- Name: COLUMN bufr_code_008026.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008026.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008026.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008026.description IS 'Описание';


--
-- Name: bufr_code_008026_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008026_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008026_seq OWNER TO postgres;

--
-- Name: bufr_code_008029; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008029 (
    id bigint DEFAULT nextval(('public.bufr_code_008029_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008029 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008029; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008029 IS 'Кодовая таблица 008029 - Тип поверхности';


--
-- Name: COLUMN bufr_code_008029.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008029.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008029.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008029.description IS 'Описание';


--
-- Name: bufr_code_008029_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008029_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008029_seq OWNER TO postgres;

--
-- Name: bufr_code_008033; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008033 (
    id bigint DEFAULT nextval(('public.bufr_code_008033_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008033 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008033; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008033 IS 'Кодовая таблица 008033 - Метод вычисления процента достоверности';


--
-- Name: COLUMN bufr_code_008033.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008033.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008033.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008033.description IS 'Описание';


--
-- Name: bufr_code_008033_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008033_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008033_seq OWNER TO postgres;

--
-- Name: bufr_code_008035; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008035 (
    id bigint DEFAULT nextval(('public.bufr_code_008035_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008035 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008035; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008035 IS 'Кодовая таблица 008035 - Тип проводимого мониторинга';


--
-- Name: COLUMN bufr_code_008035.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008035.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008035.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008035.description IS 'Описание';


--
-- Name: bufr_code_008035_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008035_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008035_seq OWNER TO postgres;

--
-- Name: bufr_code_008036; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008036 (
    id bigint DEFAULT nextval(('public.bufr_code_008036_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008036 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008036; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008036 IS 'Кодовая таблица 008036 - Тип центра или станции, проводящей мониторинг';


--
-- Name: COLUMN bufr_code_008036.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008036.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008036.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008036.description IS 'Описание';


--
-- Name: bufr_code_008036_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008036_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008036_seq OWNER TO postgres;

--
-- Name: bufr_code_008039; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008039 (
    id bigint DEFAULT nextval(('public.bufr_code_008039_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008039 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008039; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008039 IS 'Кодовая таблица 008039 - Значимость времени (авиационный прогноз)';


--
-- Name: COLUMN bufr_code_008039.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008039.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008039.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008039.description IS 'Описание';


--
-- Name: bufr_code_008039_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008039_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008039_seq OWNER TO postgres;

--
-- Name: bufr_code_008040; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008040 (
    id bigint DEFAULT nextval(('public.bufr_code_008040_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008040 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008040; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008040 IS 'Кодовая таблица 008040 - Особые точки по данным радиозондирования';


--
-- Name: COLUMN bufr_code_008040.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008040.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008040.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008040.description IS 'Описание';


--
-- Name: bufr_code_008040_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008040_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008040_seq OWNER TO postgres;

--
-- Name: bufr_code_008041; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008041 (
    id bigint DEFAULT nextval(('public.bufr_code_008041_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008041 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008041; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008041 IS 'Кодовая таблица 008041 - Значимость данных';


--
-- Name: COLUMN bufr_code_008041.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008041.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008041.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008041.description IS 'Описание';


--
-- Name: bufr_code_008041_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008041_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008041_seq OWNER TO postgres;

--
-- Name: bufr_code_008042; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008042 (
    id bigint DEFAULT nextval(('public.bufr_code_008042_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_008042 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008042; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008042 IS 'Кодовая таблица 008042 - Значимость продленного вертикального зондирования';


--
-- Name: COLUMN bufr_code_008042.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008042.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_008042.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008042.description IS 'Описание';


--
-- Name: bufr_code_008042_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008042_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008042_seq OWNER TO postgres;

--
-- Name: bufr_code_008043; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008043 (
    id bigint DEFAULT nextval(('public.bufr_code_008043_seq'::text)::regclass) NOT NULL,
    code integer,
    name text,
    formula text,
    cas_number text
);


ALTER TABLE public.bufr_code_008043 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008043; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008043 IS 'Кодовая таблица 008043 - Тип химических или физических составляющих атмосферы';


--
-- Name: COLUMN bufr_code_008043.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008043.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008043.name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008043.name IS 'Название';


--
-- Name: COLUMN bufr_code_008043.formula; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008043.formula IS 'Формула';


--
-- Name: COLUMN bufr_code_008043.cas_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008043.cas_number IS 'Номер CAS (по необходимости)';


--
-- Name: bufr_code_008043_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008043_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008043_seq OWNER TO postgres;

--
-- Name: bufr_code_008050; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008050 (
    id bigint DEFAULT nextval(('public.bufr_code_008050_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008050 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008050; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008050 IS 'Кодовая таблица 008050 - Определитель ряда отсутствующих значений при расчете статистических данных';


--
-- Name: COLUMN bufr_code_008050.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008050.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008050.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008050.description IS 'Описание';


--
-- Name: bufr_code_008050_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008050_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008050_seq OWNER TO postgres;

--
-- Name: bufr_code_008051; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008051 (
    id bigint DEFAULT nextval(('public.bufr_code_008051_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008051 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008051; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008051 IS 'Кодовая таблица 008051 - Описатель числа отсутствующих значений в расчетах статистики';


--
-- Name: COLUMN bufr_code_008051.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008051.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008051.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008051.description IS 'Описание';


--
-- Name: bufr_code_008051_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008051_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008051_seq OWNER TO postgres;

--
-- Name: bufr_code_008052; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008052 (
    id bigint DEFAULT nextval(('public.bufr_code_008052_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008052 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008052; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008052 IS 'Кодовая таблица 008052 - Условие, для которого далее указывается число дней с явлением';


--
-- Name: COLUMN bufr_code_008052.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008052.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008052.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008052.description IS 'Описание';


--
-- Name: bufr_code_008052_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008052_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008052_seq OWNER TO postgres;

--
-- Name: bufr_code_008053; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008053 (
    id bigint DEFAULT nextval(('public.bufr_code_008053_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008053 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008053; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008053 IS 'Кодовая таблица 008053 - Описатель дня с явлением';


--
-- Name: COLUMN bufr_code_008053.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008053.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008053.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008053.description IS 'Описание';


--
-- Name: bufr_code_008053_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008053_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008053_seq OWNER TO postgres;

--
-- Name: bufr_code_008054; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008054 (
    id bigint DEFAULT nextval(('public.bufr_code_008054_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008054 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008054; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008054 IS 'Кодовая таблица 008054 - Описатель скорости ветра или порывов ветра';


--
-- Name: COLUMN bufr_code_008054.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008054.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008054.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008054.description IS 'Описание';


--
-- Name: bufr_code_008054_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008054_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008054_seq OWNER TO postgres;

--
-- Name: bufr_code_008060; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008060 (
    id bigint DEFAULT nextval(('public.bufr_code_008060_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008060 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008060; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008060 IS 'Кодовая таблица 008060 - Значимость режима сканирования выборки';


--
-- Name: COLUMN bufr_code_008060.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008060.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008060.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008060.description IS 'Описание';


--
-- Name: bufr_code_008060_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008060_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008060_seq OWNER TO postgres;

--
-- Name: bufr_code_008065; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008065 (
    id bigint DEFAULT nextval(('public.bufr_code_008065_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008065 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008065; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008065 IS 'Кодовая таблица 008065 - Указатель солнечных бликов';


--
-- Name: COLUMN bufr_code_008065.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008065.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008065.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008065.description IS 'Описание';


--
-- Name: bufr_code_008065_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008065_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008065_seq OWNER TO postgres;

--
-- Name: bufr_code_008066; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008066 (
    id bigint DEFAULT nextval(('public.bufr_code_008066_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008066 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008066; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008066 IS 'Кодовая таблица 008066 - Указатель полупрозрачности';


--
-- Name: COLUMN bufr_code_008066.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008066.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008066.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008066.description IS 'Описание';


--
-- Name: bufr_code_008066_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008066_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008066_seq OWNER TO postgres;

--
-- Name: bufr_code_008070; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008070 (
    id bigint DEFAULT nextval(('public.bufr_code_008070_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008070 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008070; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008070 IS 'Кодовая таблица 008070 - Описатель продукции TOVS/ATOVS';


--
-- Name: COLUMN bufr_code_008070.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008070.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008070.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008070.description IS 'Описание';


--
-- Name: bufr_code_008070_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008070_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008070_seq OWNER TO postgres;

--
-- Name: bufr_code_008072; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008072 (
    id bigint DEFAULT nextval(('public.bufr_code_008072_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008072 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008072; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008072 IS 'Кодовая таблица 008072 - Тип элемента(ов) изображения';


--
-- Name: COLUMN bufr_code_008072.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008072.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008072.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008072.description IS 'Описание';


--
-- Name: bufr_code_008072_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008072_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008072_seq OWNER TO postgres;

--
-- Name: bufr_code_008074; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008074 (
    id bigint DEFAULT nextval(('public.bufr_code_008074_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008074 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008074; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008074 IS 'Кодовая таблица 008074 - Тип отраженного сигнала альтиметра';


--
-- Name: COLUMN bufr_code_008074.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008074.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008074.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008074.description IS 'Описание';


--
-- Name: bufr_code_008074_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008074_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008074_seq OWNER TO postgres;

--
-- Name: bufr_code_008075; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008075 (
    id bigint DEFAULT nextval(('public.bufr_code_008075_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008075 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008075; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008075 IS 'Кодовая таблица 008075 - Определитель восходящей/нисходящей орбиты';


--
-- Name: COLUMN bufr_code_008075.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008075.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008075.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008075.description IS 'Описание';


--
-- Name: bufr_code_008075_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008075_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008075_seq OWNER TO postgres;

--
-- Name: bufr_code_008076; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008076 (
    id bigint DEFAULT nextval(('public.bufr_code_008076_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008076 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008076; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008076 IS 'Кодовая таблица 008076 - Тип полосы';


--
-- Name: COLUMN bufr_code_008076.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008076.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008076.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008076.description IS 'Описание';


--
-- Name: bufr_code_008076_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008076_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008076_seq OWNER TO postgres;

--
-- Name: bufr_code_008077; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008077 (
    id bigint DEFAULT nextval(('public.bufr_code_008077_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008077 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008077; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008077 IS 'Кодовая таблица 008077 - Тип поверхности, зондируемой радиометром';


--
-- Name: COLUMN bufr_code_008077.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008077.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008077.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008077.description IS 'Описание';


--
-- Name: bufr_code_008077_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008077_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008077_seq OWNER TO postgres;

--
-- Name: bufr_code_008079; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008079 (
    id bigint DEFAULT nextval(('public.bufr_code_008079_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008079 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008079; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008079 IS 'Кодовая таблица 008079 - Статус продукции';


--
-- Name: COLUMN bufr_code_008079.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008079.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008079.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008079.description IS 'Описание';


--
-- Name: bufr_code_008079_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008079_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008079_seq OWNER TO postgres;

--
-- Name: bufr_code_008080; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008080 (
    id bigint DEFAULT nextval(('public.bufr_code_008080_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008080 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008080; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008080 IS 'Кодовая таблица 008080 - Описатель флага качества ГТСПП*';


--
-- Name: COLUMN bufr_code_008080.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008080.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008080.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008080.description IS 'Описание';


--
-- Name: bufr_code_008080_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008080_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008080_seq OWNER TO postgres;

--
-- Name: bufr_code_008081; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008081 (
    id bigint DEFAULT nextval(('public.bufr_code_008081_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008081 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008081; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008081 IS 'Кодовая таблица 008081 - Тип оборудования';


--
-- Name: COLUMN bufr_code_008081.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008081.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008081.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008081.description IS 'Описание';


--
-- Name: bufr_code_008081_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008081_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008081_seq OWNER TO postgres;

--
-- Name: bufr_code_008082; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008082 (
    id bigint DEFAULT nextval(('public.bufr_code_008082_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008082 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008082; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008082 IS 'Кодовая таблица 008082 - Модификация высоты датчика по другому значению';


--
-- Name: COLUMN bufr_code_008082.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008082.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008082.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008082.description IS 'Описание';


--
-- Name: bufr_code_008082_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008082_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008082_seq OWNER TO postgres;

--
-- Name: bufr_code_008083; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008083 (
    id bigint DEFAULT nextval(('public.bufr_code_008083_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008083 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008083; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008083 IS 'Кодовая таблица 008083 - Указатель номинального значения';


--
-- Name: COLUMN bufr_code_008083.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008083.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008083.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008083.description IS 'Описание';


--
-- Name: bufr_code_008083_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008083_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008083_seq OWNER TO postgres;

--
-- Name: bufr_code_008085; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008085 (
    id bigint DEFAULT nextval(('public.bufr_code_008085_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_008085 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008085; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008085 IS 'Кодовая таблица 008085 - Указатель луча';


--
-- Name: COLUMN bufr_code_008085.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008085.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_008085.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008085.description IS 'Описание';


--
-- Name: bufr_code_008085_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008085_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008085_seq OWNER TO postgres;

--
-- Name: bufr_code_008086; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_008086 (
    id bigint DEFAULT nextval(('public.bufr_code_008086_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_008086 OWNER TO postgres;

--
-- Name: TABLE bufr_code_008086; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_008086 IS 'Кодовая таблица 008086 - Вертикальная значимость данных для ЧПП';


--
-- Name: COLUMN bufr_code_008086.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008086.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_008086.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_008086.description IS 'Описание';


--
-- Name: bufr_code_008086_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_008086_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_008086_seq OWNER TO postgres;

--
-- Name: bufr_code_010063; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_010063 (
    id bigint DEFAULT nextval(('public.bufr_code_010063_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_010063 OWNER TO postgres;

--
-- Name: TABLE bufr_code_010063; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_010063 IS 'Кодовая таблица 010063 - Характеристика барической тенденции';


--
-- Name: COLUMN bufr_code_010063.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_010063.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_010063.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_010063.description IS 'Описание';


--
-- Name: bufr_code_010063_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_010063_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_010063_seq OWNER TO postgres;

--
-- Name: bufr_code_010064; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_010064 (
    id bigint DEFAULT nextval(('public.bufr_code_010064_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_010064 OWNER TO postgres;

--
-- Name: TABLE bufr_code_010064; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_010064 IS 'Кодовая таблица 010064 - Крейсерский эшелон SIGMET';


--
-- Name: COLUMN bufr_code_010064.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_010064.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_010064.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_010064.description IS 'Описание';


--
-- Name: bufr_code_010064_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_010064_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_010064_seq OWNER TO postgres;

--
-- Name: bufr_code_011030; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_011030 (
    id bigint DEFAULT nextval(('public.bufr_code_011030_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_011030 OWNER TO postgres;

--
-- Name: TABLE bufr_code_011030; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_011030 IS 'Кодовая таблица 011030 - Повышенная степень турбулентности';


--
-- Name: COLUMN bufr_code_011030.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_011030.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_011030.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_011030.description IS 'Описание';


--
-- Name: bufr_code_011030_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_011030_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_011030_seq OWNER TO postgres;

--
-- Name: bufr_code_011031; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_011031 (
    id bigint DEFAULT nextval(('public.bufr_code_011031_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_011031 OWNER TO postgres;

--
-- Name: TABLE bufr_code_011031; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_011031 IS 'Кодовая таблица 011031 - Степень турбулентности';


--
-- Name: COLUMN bufr_code_011031.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_011031.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_011031.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_011031.description IS 'Описание';


--
-- Name: bufr_code_011031_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_011031_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_011031_seq OWNER TO postgres;

--
-- Name: bufr_code_011037; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_011037 (
    id bigint DEFAULT nextval(('public.bufr_code_011037_seq'::text)::regclass) NOT NULL,
    code integer,
    unknown1 text,
    unknown2 text
);


ALTER TABLE public.bufr_code_011037 OWNER TO postgres;

--
-- Name: TABLE bufr_code_011037; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_011037 IS 'Кодовая таблица 011037 - Индекс турбулентности';


--
-- Name: COLUMN bufr_code_011037.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_011037.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_011037.unknown1; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_011037.unknown1 IS 'Среднее значение интенсивности рассеяния вихрей (ave)(м2/3 .с–1)';


--
-- Name: COLUMN bufr_code_011037.unknown2; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_011037.unknown2 IS 'Пиковое значение интенсивности рассеяния вихрей (peak) (м2/3 .с–1)';


--
-- Name: bufr_code_011037_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_011037_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_011037_seq OWNER TO postgres;

--
-- Name: bufr_code_011038; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_011038 (
    id bigint DEFAULT nextval(('public.bufr_code_011038_seq'::text)::regclass) NOT NULL,
    code integer,
    supervision_time_before text
);


ALTER TABLE public.bufr_code_011038 OWNER TO postgres;

--
-- Name: TABLE bufr_code_011038; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_011038 IS 'Кодовая таблица 011038 - Время наступления пиковой скорости вихревой диссипации';


--
-- Name: COLUMN bufr_code_011038.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_011038.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_011038.supervision_time_before; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_011038.supervision_time_before IS 'Минуты до срока наблюдений (min)';


--
-- Name: bufr_code_011038_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_011038_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_011038_seq OWNER TO postgres;

--
-- Name: bufr_code_011039; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_011039 (
    id bigint DEFAULT nextval(('public.bufr_code_011039_seq'::text)::regclass) NOT NULL,
    code integer,
    supervision_time_before text
);


ALTER TABLE public.bufr_code_011039 OWNER TO postgres;

--
-- Name: TABLE bufr_code_011039; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_011039 IS 'Кодовая таблица 011039 - Расширенное время наступления пиковой скорости вихревой диссипации';


--
-- Name: COLUMN bufr_code_011039.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_011039.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_011039.supervision_time_before; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_011039.supervision_time_before IS 'Минуты до срока наблюдений (min)';


--
-- Name: bufr_code_011039_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_011039_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_011039_seq OWNER TO postgres;

--
-- Name: bufr_code_013038; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_013038 (
    id bigint DEFAULT nextval(('public.bufr_code_013038_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_013038 OWNER TO postgres;

--
-- Name: TABLE bufr_code_013038; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_013038 IS 'Кодовая таблица 013038 - Сверхадиабатический указатель';


--
-- Name: COLUMN bufr_code_013038.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_013038.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_013038.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_013038.description IS 'Описание';


--
-- Name: bufr_code_013038_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_013038_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_013038_seq OWNER TO postgres;

--
-- Name: bufr_code_013039; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_013039 (
    id bigint DEFAULT nextval(('public.bufr_code_013039_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_013039 OWNER TO postgres;

--
-- Name: TABLE bufr_code_013039; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_013039 IS 'Кодовая таблица 013039 - Тип поверхности (лед/снег)';


--
-- Name: COLUMN bufr_code_013039.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_013039.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_013039.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_013039.description IS 'Описание';


--
-- Name: bufr_code_013039_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_013039_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_013039_seq OWNER TO postgres;

--
-- Name: bufr_code_013040; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_013040 (
    id bigint DEFAULT nextval(('public.bufr_code_013040_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_013040 OWNER TO postgres;

--
-- Name: TABLE bufr_code_013040; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_013040 IS 'Кодовая таблица 013040 - Флаг поверхности';


--
-- Name: COLUMN bufr_code_013040.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_013040.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_013040.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_013040.description IS 'Описание';


--
-- Name: bufr_code_013040_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_013040_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_013040_seq OWNER TO postgres;

--
-- Name: bufr_code_013041; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_013041 (
    id bigint DEFAULT nextval(('public.bufr_code_013041_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_013041 OWNER TO postgres;

--
-- Name: TABLE bufr_code_013041; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_013041 IS 'Кодовая таблица 013041 - Категория стабильности Пасквиля — Гиффорда';


--
-- Name: COLUMN bufr_code_013041.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_013041.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_013041.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_013041.description IS 'Описание';


--
-- Name: bufr_code_013041_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_013041_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_013041_seq OWNER TO postgres;

--
-- Name: bufr_code_013051; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_013051 (
    id bigint DEFAULT nextval(('public.bufr_code_013051_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_013051 OWNER TO postgres;

--
-- Name: TABLE bufr_code_013051; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_013051 IS 'Кодовая таблица 013051 - Повторяемость группы, осадки';


--
-- Name: COLUMN bufr_code_013051.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_013051.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_013051.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_013051.description IS 'Описание';


--
-- Name: bufr_code_013051_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_013051_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_013051_seq OWNER TO postgres;

--
-- Name: bufr_code_013056; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_013056 (
    id bigint DEFAULT nextval(('public.bufr_code_013056_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_013056 OWNER TO postgres;

--
-- Name: TABLE bufr_code_013056; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_013056 IS 'Кодовая таблица 013056 - Характер и интенсивность осадков';


--
-- Name: COLUMN bufr_code_013056.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_013056.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_013056.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_013056.description IS 'Описание';


--
-- Name: bufr_code_013056_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_013056_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_013056_seq OWNER TO postgres;

--
-- Name: bufr_code_013057; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_013057 (
    id bigint DEFAULT nextval(('public.bufr_code_013057_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_013057 OWNER TO postgres;

--
-- Name: TABLE bufr_code_013057; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_013057 IS 'Кодовая таблица 013057 - Время начала или окончания осадков';


--
-- Name: COLUMN bufr_code_013057.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_013057.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_013057.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_013057.description IS 'Описание';


--
-- Name: bufr_code_013057_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_013057_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_013057_seq OWNER TO postgres;

--
-- Name: bufr_code_015025; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_015025 (
    id bigint DEFAULT nextval(('public.bufr_code_015025_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_015025 OWNER TO postgres;

--
-- Name: TABLE bufr_code_015025; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_015025 IS 'Кодовая таблица 015025 - Тип загрязняющего вещества';


--
-- Name: COLUMN bufr_code_015025.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_015025.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_015025.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_015025.description IS 'Описание';


--
-- Name: bufr_code_015025_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_015025_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_015025_seq OWNER TO postgres;

--
-- Name: bufr_code_019001; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_019001 (
    id bigint DEFAULT nextval(('public.bufr_code_019001_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_019001 OWNER TO postgres;

--
-- Name: TABLE bufr_code_019001; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_019001 IS 'Кодовая таблица 019001 - Тип синоптической характеристики';


--
-- Name: COLUMN bufr_code_019001.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_019001.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_019001.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_019001.description IS 'Описание';


--
-- Name: bufr_code_019001_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_019001_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_019001_seq OWNER TO postgres;

--
-- Name: bufr_code_019008; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_019008 (
    id bigint DEFAULT nextval(('public.bufr_code_019008_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_019008 OWNER TO postgres;

--
-- Name: TABLE bufr_code_019008; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_019008 IS 'Кодовая таблица 019008 - Вертикальное распространение циркуляции';


--
-- Name: COLUMN bufr_code_019008.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_019008.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_019008.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_019008.description IS 'Описание';


--
-- Name: bufr_code_019008_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_019008_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_019008_seq OWNER TO postgres;

--
-- Name: bufr_code_019010; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_019010 (
    id bigint DEFAULT nextval(('public.bufr_code_019010_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_019010 OWNER TO postgres;

--
-- Name: TABLE bufr_code_019010; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_019010 IS 'Кодовая таблица 019010 - Метод отслеживания центра синоптической характеристики';


--
-- Name: COLUMN bufr_code_019010.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_019010.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_019010.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_019010.description IS 'Описание';


--
-- Name: bufr_code_019010_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_019010_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_019010_seq OWNER TO postgres;

--
-- Name: bufr_code_019100; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_019100 (
    id bigint DEFAULT nextval(('public.bufr_code_019100_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_019100 OWNER TO postgres;

--
-- Name: TABLE bufr_code_019100; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_019100 IS 'Кодовая таблица 019100 - Временной интервал для расчета движения тропического циклона';


--
-- Name: COLUMN bufr_code_019100.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_019100.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_019100.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_019100.description IS 'Описание';


--
-- Name: bufr_code_019100_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_019100_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_019100_seq OWNER TO postgres;

--
-- Name: bufr_code_019101; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_019101 (
    id bigint DEFAULT nextval(('public.bufr_code_019101_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_019101 OWNER TO postgres;

--
-- Name: TABLE bufr_code_019101; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_019101 IS 'Кодовая таблица 019101 - Точность местоположения центра тропического циклона';


--
-- Name: COLUMN bufr_code_019101.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_019101.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_019101.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_019101.description IS 'Описание';


--
-- Name: bufr_code_019101_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_019101_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_019101_seq OWNER TO postgres;

--
-- Name: bufr_code_019102; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_019102 (
    id bigint DEFAULT nextval(('public.bufr_code_019102_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_019102 OWNER TO postgres;

--
-- Name: TABLE bufr_code_019102; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_019102 IS 'Кодовая таблица 019102 - Форма и четкость определения глаза тропического циклона';


--
-- Name: COLUMN bufr_code_019102.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_019102.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_019102.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_019102.description IS 'Описание';


--
-- Name: bufr_code_019102_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_019102_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_019102_seq OWNER TO postgres;

--
-- Name: bufr_code_019103; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_019103 (
    id bigint DEFAULT nextval(('public.bufr_code_019103_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_019103 OWNER TO postgres;

--
-- Name: TABLE bufr_code_019103; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_019103 IS 'Кодовая таблица 019103 - Диаметр большой оси глаза тропического циклона';


--
-- Name: COLUMN bufr_code_019103.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_019103.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_019103.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_019103.description IS 'Описание';


--
-- Name: bufr_code_019103_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_019103_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_019103_seq OWNER TO postgres;

--
-- Name: bufr_code_019104; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_019104 (
    id bigint DEFAULT nextval(('public.bufr_code_019104_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_019104 OWNER TO postgres;

--
-- Name: TABLE bufr_code_019104; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_019104 IS 'Кодовая таблица 019104 - Изменение в характере глаза в течение 30 минут';


--
-- Name: COLUMN bufr_code_019104.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_019104.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_019104.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_019104.description IS 'Описание';


--
-- Name: bufr_code_019104_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_019104_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_019104_seq OWNER TO postgres;

--
-- Name: bufr_code_019105; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_019105 (
    id bigint DEFAULT nextval(('public.bufr_code_019105_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_019105 OWNER TO postgres;

--
-- Name: TABLE bufr_code_019105; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_019105 IS 'Кодовая таблица 019105 - Расстояние между концом спиральной полосы и центром';


--
-- Name: COLUMN bufr_code_019105.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_019105.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_019105.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_019105.description IS 'Описание';


--
-- Name: bufr_code_019105_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_019105_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_019105_seq OWNER TO postgres;

--
-- Name: bufr_code_019107; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_019107 (
    id bigint DEFAULT nextval(('public.bufr_code_019107_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_019107 OWNER TO postgres;

--
-- Name: TABLE bufr_code_019107; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_019107 IS 'Кодовая таблица 019107 - Временной интервал, за который рассчитывалось перемещение тропического циклона';


--
-- Name: COLUMN bufr_code_019107.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_019107.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_019107.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_019107.description IS 'Описание';


--
-- Name: bufr_code_019107_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_019107_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_019107_seq OWNER TO postgres;

--
-- Name: bufr_code_019108; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_019108 (
    id bigint DEFAULT nextval(('public.bufr_code_019108_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_019108 OWNER TO postgres;

--
-- Name: TABLE bufr_code_019108; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_019108 IS 'Кодовая таблица 019108 - Точность географического положения тропического циклона';


--
-- Name: COLUMN bufr_code_019108.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_019108.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_019108.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_019108.description IS 'Описание';


--
-- Name: bufr_code_019108_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_019108_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_019108_seq OWNER TO postgres;

--
-- Name: bufr_code_019109; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_019109 (
    id bigint DEFAULT nextval(('public.bufr_code_019109_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_019109 OWNER TO postgres;

--
-- Name: TABLE bufr_code_019109; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_019109 IS 'Кодовая таблица 019109 - Средний диаметр сплошной облачности тропического циклона';


--
-- Name: COLUMN bufr_code_019109.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_019109.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_019109.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_019109.description IS 'Описание';


--
-- Name: bufr_code_019109_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_019109_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_019109_seq OWNER TO postgres;

--
-- Name: bufr_code_019110; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_019110 (
    id bigint DEFAULT nextval(('public.bufr_code_019110_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_019110 OWNER TO postgres;

--
-- Name: TABLE bufr_code_019110; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_019110 IS 'Кодовая таблица 019110 - Видимое изменение в интенсивности тропического циклона за 24 часа';


--
-- Name: COLUMN bufr_code_019110.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_019110.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_019110.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_019110.description IS 'Описание';


--
-- Name: bufr_code_019110_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_019110_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_019110_seq OWNER TO postgres;

--
-- Name: bufr_code_019113; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_019113 (
    id bigint DEFAULT nextval(('public.bufr_code_019113_seq'::text)::regclass) NOT NULL,
    code integer,
    type text
);


ALTER TABLE public.bufr_code_019113 OWNER TO postgres;

--
-- Name: TABLE bufr_code_019113; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_019113 IS 'Кодовая таблица 019113 - Тип системы облаков номера ТД';


--
-- Name: COLUMN bufr_code_019113.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_019113.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_019113.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_019113.type IS 'Тип';


--
-- Name: bufr_code_019113_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_019113_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_019113_seq OWNER TO postgres;

--
-- Name: bufr_code_019117; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_019117 (
    id bigint DEFAULT nextval(('public.bufr_code_019117_seq'::text)::regclass) NOT NULL,
    code integer,
    type text
);


ALTER TABLE public.bufr_code_019117 OWNER TO postgres;

--
-- Name: TABLE bufr_code_019117; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_019117 IS 'Кодовая таблица 019117 - Тип картины облачности номера ТМ';


--
-- Name: COLUMN bufr_code_019117.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_019117.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_019117.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_019117.type IS 'Тип';


--
-- Name: bufr_code_019117_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_019117_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_019117_seq OWNER TO postgres;

--
-- Name: bufr_code_019119; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_019119 (
    id bigint DEFAULT nextval(('public.bufr_code_019119_seq'::text)::regclass) NOT NULL,
    code integer,
    type text
);


ALTER TABLE public.bufr_code_019119 OWNER TO postgres;

--
-- Name: TABLE bufr_code_019119; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_019119 IS 'Кодовая таблица 019119 - Тип окончательного Т номера';


--
-- Name: COLUMN bufr_code_019119.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_019119.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_019119.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_019119.type IS 'Тип';


--
-- Name: bufr_code_019119_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_019119_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_019119_seq OWNER TO postgres;

--
-- Name: bufr_code_020003; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020003 (
    id bigint DEFAULT nextval(('public.bufr_code_020003_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020003 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020003; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020003 IS 'Кодовая таблица 020003 - Текущая погода';


--
-- Name: COLUMN bufr_code_020003.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020003.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020003.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020003.description IS 'Описание';


--
-- Name: bufr_code_020003_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020003_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020003_seq OWNER TO postgres;

--
-- Name: bufr_code_020004; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020004 (
    id bigint DEFAULT nextval(('public.bufr_code_020004_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020004 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020004; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020004 IS 'Кодовая таблица 020004 - Прошедшая погода (1) и (2)';


--
-- Name: COLUMN bufr_code_020004.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020004.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020004.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020004.description IS 'Описание';


--
-- Name: bufr_code_020004_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020004_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020004_seq OWNER TO postgres;

--
-- Name: bufr_code_020005; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020005 (
    id bigint DEFAULT nextval(('public.bufr_code_020005_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020005 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020005; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020005 IS 'Кодовая таблица 020005 - Прошедшая погода (1) и (2)';


--
-- Name: COLUMN bufr_code_020005.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020005.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020005.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020005.description IS 'Описание';


--
-- Name: bufr_code_020005_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020005_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020005_seq OWNER TO postgres;

--
-- Name: bufr_code_020006; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020006 (
    id bigint DEFAULT nextval(('public.bufr_code_020006_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020006 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020006; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020006 IS 'Кодовая таблица 020006 - Правила полетов';


--
-- Name: COLUMN bufr_code_020006.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020006.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020006.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020006.description IS 'Описание';


--
-- Name: bufr_code_020006_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020006_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020006_seq OWNER TO postgres;

--
-- Name: bufr_code_020008; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020008 (
    id bigint DEFAULT nextval(('public.bufr_code_020008_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020008 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020008; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020008 IS 'Кодовая таблица 020008 - Распределение облачности для авиации';


--
-- Name: COLUMN bufr_code_020008.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020008.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020008.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020008.description IS 'Описание';


--
-- Name: bufr_code_020008_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020008_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020008_seq OWNER TO postgres;

--
-- Name: bufr_code_020009; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020009 (
    id bigint DEFAULT nextval(('public.bufr_code_020009_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020009 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020009; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020009 IS 'Кодовая таблица 020009 - Общий указатель погоды (TAF/METAR)';


--
-- Name: COLUMN bufr_code_020009.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020009.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020009.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020009.description IS 'Описание';


--
-- Name: bufr_code_020009_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020009_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020009_seq OWNER TO postgres;

--
-- Name: bufr_code_020011; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020011 (
    id bigint DEFAULT nextval(('public.bufr_code_020011_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020011 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020011; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020011 IS 'Кодовая таблица 020011 - Количество облаков';


--
-- Name: COLUMN bufr_code_020011.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020011.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020011.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020011.description IS 'Описание';


--
-- Name: bufr_code_020011_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020011_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020011_seq OWNER TO postgres;

--
-- Name: bufr_code_020012; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020012 (
    id bigint DEFAULT nextval(('public.bufr_code_020012_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020012 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020012; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020012 IS 'Кодовая таблица 020012 - Типы облаков';


--
-- Name: COLUMN bufr_code_020012.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020012.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020012.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020012.description IS 'Описание';


--
-- Name: bufr_code_020012_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020012_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020012_seq OWNER TO postgres;

--
-- Name: bufr_code_020017; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020017 (
    id bigint DEFAULT nextval(('public.bufr_code_020017_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020017 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020017; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020017 IS 'Кодовая таблица 020017 - Описание верхней границы облачности';


--
-- Name: COLUMN bufr_code_020017.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020017.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020017.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020017.description IS 'Описание';


--
-- Name: bufr_code_020017_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020017_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020017_seq OWNER TO postgres;

--
-- Name: bufr_code_020018; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020018 (
    id bigint DEFAULT nextval(('public.bufr_code_020018_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020018 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020018; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020018 IS 'Кодовая таблица 020018 - Тенденция дальности видимости на взлетно-посадочной полосе';


--
-- Name: COLUMN bufr_code_020018.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020018.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020018.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020018.description IS 'Описание';


--
-- Name: bufr_code_020018_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020018_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020018_seq OWNER TO postgres;

--
-- Name: bufr_code_020021; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020021 (
    id bigint DEFAULT nextval(('public.bufr_code_020021_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_020021 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020021; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020021 IS 'Кодовая таблица 020021 - Тип осадков';


--
-- Name: COLUMN bufr_code_020021.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020021.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_020021.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020021.description IS 'Описание';


--
-- Name: bufr_code_020021_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020021_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020021_seq OWNER TO postgres;

--
-- Name: bufr_code_020022; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020022 (
    id bigint DEFAULT nextval(('public.bufr_code_020022_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020022 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020022; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020022 IS 'Кодовая таблица 020022 - Характер осадков';


--
-- Name: COLUMN bufr_code_020022.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020022.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020022.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020022.description IS 'Описание';


--
-- Name: bufr_code_020022_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020022_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020022_seq OWNER TO postgres;

--
-- Name: bufr_code_020023; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020023 (
    id bigint DEFAULT nextval(('public.bufr_code_020023_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_020023 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020023; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020023 IS 'Кодовая таблица 020023 - Другие метеорологические явления';


--
-- Name: COLUMN bufr_code_020023.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020023.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_020023.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020023.description IS 'Описание';


--
-- Name: bufr_code_020023_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020023_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020023_seq OWNER TO postgres;

--
-- Name: bufr_code_020024; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020024 (
    id bigint DEFAULT nextval(('public.bufr_code_020024_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020024 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020024; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020024 IS 'Кодовая таблица 020024 - Интенсивность явления';


--
-- Name: COLUMN bufr_code_020024.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020024.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020024.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020024.description IS 'Описание';


--
-- Name: bufr_code_020024_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020024_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020024_seq OWNER TO postgres;

--
-- Name: bufr_code_020025; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020025 (
    id bigint DEFAULT nextval(('public.bufr_code_020025_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_020025 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020025; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020025 IS 'Кодовая таблица 020025 - Явления, ухудшающие видимость';


--
-- Name: COLUMN bufr_code_020025.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020025.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_020025.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020025.description IS 'Описание';


--
-- Name: bufr_code_020025_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020025_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020025_seq OWNER TO postgres;

--
-- Name: bufr_code_020026; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020026 (
    id bigint DEFAULT nextval(('public.bufr_code_020026_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020026 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020026; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020026 IS 'Кодовая таблица 020026 - Характер явления, ухудшающего видимость';


--
-- Name: COLUMN bufr_code_020026.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020026.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020026.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020026.description IS 'Описание';


--
-- Name: bufr_code_020026_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020026_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020026_seq OWNER TO postgres;

--
-- Name: bufr_code_020027; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020027 (
    id bigint DEFAULT nextval(('public.bufr_code_020027_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_020027 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020027; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020027 IS 'Кодовая таблица 020027 - Возникновение явления*';


--
-- Name: COLUMN bufr_code_020027.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020027.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_020027.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020027.description IS 'Описание';


--
-- Name: bufr_code_020027_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020027_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020027_seq OWNER TO postgres;

--
-- Name: bufr_code_020028; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020028 (
    id bigint DEFAULT nextval(('public.bufr_code_020028_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020028 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020028; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020028 IS 'Кодовая таблица 020028 - Ожидаемое изменение в интенсивности';


--
-- Name: COLUMN bufr_code_020028.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020028.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020028.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020028.description IS 'Описание';


--
-- Name: bufr_code_020028_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020028_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020028_seq OWNER TO postgres;

--
-- Name: bufr_code_020029; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020029 (
    id bigint DEFAULT nextval(('public.bufr_code_020029_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020029 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020029; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020029 IS 'Кодовая таблица 020029 - Флаг дождя';


--
-- Name: COLUMN bufr_code_020029.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020029.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020029.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020029.description IS 'Описание';


--
-- Name: bufr_code_020029_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020029_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020029_seq OWNER TO postgres;

--
-- Name: bufr_code_020032; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020032 (
    id bigint DEFAULT nextval(('public.bufr_code_020032_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020032 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020032; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020032 IS 'Кодовая таблица 020032 - Скорость нарастания льда';


--
-- Name: COLUMN bufr_code_020032.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020032.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020032.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020032.description IS 'Описание';


--
-- Name: bufr_code_020032_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020032_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020032_seq OWNER TO postgres;

--
-- Name: bufr_code_020033; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020033 (
    id bigint DEFAULT nextval(('public.bufr_code_020033_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_020033 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020033; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020033 IS 'Кодовая таблица 020033 - Причина нарастания льда';


--
-- Name: COLUMN bufr_code_020033.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020033.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_020033.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020033.description IS 'Описание';


--
-- Name: bufr_code_020033_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020033_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020033_seq OWNER TO postgres;

--
-- Name: bufr_code_020034; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020034 (
    id bigint DEFAULT nextval(('public.bufr_code_020034_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020034 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020034; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020034 IS 'Кодовая таблица 020034 - Сплоченность морского льда';


--
-- Name: COLUMN bufr_code_020034.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020034.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020034.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020034.description IS 'Описание';


--
-- Name: bufr_code_020034_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020034_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020034_seq OWNER TO postgres;

--
-- Name: bufr_code_020035; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020035 (
    id bigint DEFAULT nextval(('public.bufr_code_020035_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020035 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020035; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020035 IS 'Кодовая таблица 020035 - Количество и тип льда';


--
-- Name: COLUMN bufr_code_020035.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020035.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020035.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020035.description IS 'Описание';


--
-- Name: bufr_code_020035_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020035_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020035_seq OWNER TO postgres;

--
-- Name: bufr_code_020036; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020036 (
    id bigint DEFAULT nextval(('public.bufr_code_020036_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020036 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020036; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020036 IS 'Кодовая таблица 020036 - Ледовая обстановка';


--
-- Name: COLUMN bufr_code_020036.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020036.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020036.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020036.description IS 'Описание';


--
-- Name: bufr_code_020036_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020036_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020036_seq OWNER TO postgres;

--
-- Name: bufr_code_020037; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020037 (
    id bigint DEFAULT nextval(('public.bufr_code_020037_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020037 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020037; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020037 IS 'Кодовая таблица 020037 - Стадии развития льда';


--
-- Name: COLUMN bufr_code_020037.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020037.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020037.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020037.description IS 'Описание';


--
-- Name: bufr_code_020037_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020037_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020037_seq OWNER TO postgres;

--
-- Name: bufr_code_020040; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020040 (
    id bigint DEFAULT nextval(('public.bufr_code_020040_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020040 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020040; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020040 IS 'Кодовая таблица 020040 - Эволюция поземка';


--
-- Name: COLUMN bufr_code_020040.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020040.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020040.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020040.description IS 'Описание';


--
-- Name: bufr_code_020040_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020040_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020040_seq OWNER TO postgres;

--
-- Name: bufr_code_020041; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020041 (
    id bigint DEFAULT nextval(('public.bufr_code_020041_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020041 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020041; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020041 IS 'Кодовая таблица 020041 - Обледенение фюзеляжа';


--
-- Name: COLUMN bufr_code_020041.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020041.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020041.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020041.description IS 'Описание';


--
-- Name: bufr_code_020041_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020041_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020041_seq OWNER TO postgres;

--
-- Name: bufr_code_020042; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020042 (
    id bigint DEFAULT nextval(('public.bufr_code_020042_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020042 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020042; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020042 IS 'Кодовая таблица 020042 - Наличие обледенения фюзеляжа';


--
-- Name: COLUMN bufr_code_020042.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020042.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020042.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020042.description IS 'Описание';


--
-- Name: bufr_code_020042_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020042_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020042_seq OWNER TO postgres;

--
-- Name: bufr_code_020045; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020045 (
    id bigint DEFAULT nextval(('public.bufr_code_020045_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020045 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020045; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020045 IS 'Кодовая таблица 020045 - Условия переохлажденных крупных капель (SLD)';


--
-- Name: COLUMN bufr_code_020045.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020045.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020045.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020045.description IS 'Описание';


--
-- Name: bufr_code_020045_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020045_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020045_seq OWNER TO postgres;

--
-- Name: bufr_code_020048; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020048 (
    id bigint DEFAULT nextval(('public.bufr_code_020048_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020048 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020048; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020048 IS 'Кодовая таблица 020048 - Эволюция характеристики';


--
-- Name: COLUMN bufr_code_020048.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020048.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020048.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020048.description IS 'Описание';


--
-- Name: bufr_code_020048_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020048_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020048_seq OWNER TO postgres;

--
-- Name: bufr_code_020050; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020050 (
    id bigint DEFAULT nextval(('public.bufr_code_020050_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020050 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020050; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020050 IS 'Кодовая таблица 020050 - Индекс облачности';


--
-- Name: COLUMN bufr_code_020050.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020050.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020050.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020050.description IS 'Описание';


--
-- Name: bufr_code_020050_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020050_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020050_seq OWNER TO postgres;

--
-- Name: bufr_code_020055; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020055 (
    id bigint DEFAULT nextval(('public.bufr_code_020055_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020055 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020055; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020055 IS 'Кодовая таблица 020055 - Состояние неба в тропиках';


--
-- Name: COLUMN bufr_code_020055.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020055.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020055.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020055.description IS 'Описание';


--
-- Name: bufr_code_020055_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020055_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020055_seq OWNER TO postgres;

--
-- Name: bufr_code_020056; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020056 (
    id bigint DEFAULT nextval(('public.bufr_code_020056_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020056 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020056; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020056 IS 'Кодовая таблица 020056 - Фазовое состояние воды в облаке';


--
-- Name: COLUMN bufr_code_020056.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020056.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020056.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020056.description IS 'Описание';


--
-- Name: bufr_code_020056_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020056_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020056_seq OWNER TO postgres;

--
-- Name: bufr_code_020062; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020062 (
    id bigint DEFAULT nextval(('public.bufr_code_020062_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020062 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020062; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020062 IS 'Кодовая таблица 020062 - Состояние поверхности почвы (со снегом или без снега)';


--
-- Name: COLUMN bufr_code_020062.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020062.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020062.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020062.description IS 'Описание';


--
-- Name: bufr_code_020062_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020062_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020062_seq OWNER TO postgres;

--
-- Name: bufr_code_020063; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020063 (
    id bigint DEFAULT nextval(('public.bufr_code_020063_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020063 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020063; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020063 IS 'Кодовая таблица 020063 - Особые явления';


--
-- Name: COLUMN bufr_code_020063.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020063.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020063.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020063.description IS 'Описание';


--
-- Name: bufr_code_020063_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020063_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020063_seq OWNER TO postgres;

--
-- Name: bufr_code_020071; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020071 (
    id bigint DEFAULT nextval(('public.bufr_code_020071_seq'::text)::regclass) NOT NULL,
    code integer,
    position_accuracy text,
    repeat_speed text
);


ALTER TABLE public.bufr_code_020071 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020071; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020071 IS 'Кодовая таблица 020071 - Точность местоположения и скорость атмосфериков';


--
-- Name: COLUMN bufr_code_020071.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020071.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020071.position_accuracy; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020071.position_accuracy IS 'Точность местоположения (расчетная ошибка)';


--
-- Name: COLUMN bufr_code_020071.repeat_speed; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020071.repeat_speed IS 'Скорость повторения';


--
-- Name: bufr_code_020071_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020071_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020071_seq OWNER TO postgres;

--
-- Name: bufr_code_020085; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020085 (
    id bigint DEFAULT nextval(('public.bufr_code_020085_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020085 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020085; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020085 IS 'Кодовая таблица 020085 - Общее состояние взлетно-посадочной полосы';


--
-- Name: COLUMN bufr_code_020085.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020085.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020085.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020085.description IS 'Описание';


--
-- Name: bufr_code_020085_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020085_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020085_seq OWNER TO postgres;

--
-- Name: bufr_code_020086; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020086 (
    id bigint DEFAULT nextval(('public.bufr_code_020086_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020086 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020086; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020086 IS 'Кодовая таблица 020086 - Отложения на взлетно-посадочной полосе';


--
-- Name: COLUMN bufr_code_020086.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020086.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020086.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020086.description IS 'Описание';


--
-- Name: bufr_code_020086_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020086_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020086_seq OWNER TO postgres;

--
-- Name: bufr_code_020087; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020087 (
    id bigint DEFAULT nextval(('public.bufr_code_020087_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020087 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020087; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020087 IS 'Кодовая таблица 020087 - Загрязнение взлетно-посадочной полосы';


--
-- Name: COLUMN bufr_code_020087.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020087.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020087.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020087.description IS 'Описание';


--
-- Name: bufr_code_020087_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020087_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020087_seq OWNER TO postgres;

--
-- Name: bufr_code_020089; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020089 (
    id bigint DEFAULT nextval(('public.bufr_code_020089_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020089 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020089; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020089 IS 'Кодовая таблица 020089 - Коэффициент трения на взлетно-посадочной полосе';


--
-- Name: COLUMN bufr_code_020089.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020089.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020089.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020089.description IS 'Описание';


--
-- Name: bufr_code_020089_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020089_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020089_seq OWNER TO postgres;

--
-- Name: bufr_code_020090; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020090 (
    id bigint DEFAULT nextval(('public.bufr_code_020090_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020090 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020090; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020090 IS 'Кодовая таблица 020090 - Особые облака';


--
-- Name: COLUMN bufr_code_020090.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020090.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020090.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020090.description IS 'Описание';


--
-- Name: bufr_code_020090_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020090_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020090_seq OWNER TO postgres;

--
-- Name: bufr_code_020101; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020101 (
    id bigint DEFAULT nextval(('public.bufr_code_020101_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020101 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020101; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020101 IS 'Кодовая таблица 020101 - Название саранчи (или ее разновидности)';


--
-- Name: COLUMN bufr_code_020101.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020101.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020101.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020101.description IS 'Описание';


--
-- Name: bufr_code_020101_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020101_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020101_seq OWNER TO postgres;

--
-- Name: bufr_code_020102; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020102 (
    id bigint DEFAULT nextval(('public.bufr_code_020102_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020102 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020102; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020102 IS 'Кодовая таблица 020102 - Цвет (зрелость) саранчи';


--
-- Name: COLUMN bufr_code_020102.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020102.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020102.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020102.description IS 'Описание';


--
-- Name: bufr_code_020102_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020102_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020102_seq OWNER TO postgres;

--
-- Name: bufr_code_020103; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020103 (
    id bigint DEFAULT nextval(('public.bufr_code_020103_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020103 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020103; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020103 IS 'Кодовая таблица 020103 - Стадия развития саранчи';


--
-- Name: COLUMN bufr_code_020103.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020103.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020103.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020103.description IS 'Описание';


--
-- Name: bufr_code_020103_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020103_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020103_seq OWNER TO postgres;

--
-- Name: bufr_code_020104; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020104 (
    id bigint DEFAULT nextval(('public.bufr_code_020104_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020104 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020104; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020104 IS 'Кодовая таблица 020104 - Состояние формирования стаи или кулиги саранчи';


--
-- Name: COLUMN bufr_code_020104.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020104.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020104.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020104.description IS 'Описание';


--
-- Name: bufr_code_020104_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020104_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020104_seq OWNER TO postgres;

--
-- Name: bufr_code_020105; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020105 (
    id bigint DEFAULT nextval(('public.bufr_code_020105_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020105 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020105; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020105 IS 'Кодовая таблица 020105 - Размер стаи или кулиги саранчи и время прохождения стаи';


--
-- Name: COLUMN bufr_code_020105.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020105.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020105.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020105.description IS 'Описание';


--
-- Name: bufr_code_020105_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020105_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020105_seq OWNER TO postgres;

--
-- Name: bufr_code_020106; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020106 (
    id bigint DEFAULT nextval(('public.bufr_code_020106_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020106 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020106; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020106 IS 'Кодовая таблица 020106 - Плотность популяции саранчи';


--
-- Name: COLUMN bufr_code_020106.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020106.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020106.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020106.description IS 'Описание';


--
-- Name: bufr_code_020106_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020106_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020106_seq OWNER TO postgres;

--
-- Name: bufr_code_020107; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020107 (
    id bigint DEFAULT nextval(('public.bufr_code_020107_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020107 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020107; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020107 IS 'Кодовая таблица 020107 - Направления движения стаи саранчи';


--
-- Name: COLUMN bufr_code_020107.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020107.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020107.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020107.description IS 'Описание';


--
-- Name: bufr_code_020107_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020107_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020107_seq OWNER TO postgres;

--
-- Name: bufr_code_020108; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020108 (
    id bigint DEFAULT nextval(('public.bufr_code_020108_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020108 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020108; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020108 IS 'Кодовая таблица 020108 - Протяженность растительного покрова';


--
-- Name: COLUMN bufr_code_020108.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020108.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020108.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020108.description IS 'Описание';


--
-- Name: bufr_code_020108_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020108_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020108_seq OWNER TO postgres;

--
-- Name: bufr_code_020119; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020119 (
    id bigint DEFAULT nextval(('public.bufr_code_020119_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020119 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020119; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020119 IS 'Кодовая таблица 020119 - Полярность разряда молнии';


--
-- Name: COLUMN bufr_code_020119.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020119.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020119.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020119.description IS 'Описание';


--
-- Name: bufr_code_020119_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020119_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020119_seq OWNER TO postgres;

--
-- Name: bufr_code_020124; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020124 (
    id bigint DEFAULT nextval(('public.bufr_code_020124_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020124 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020124; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020124 IS 'Кодовая таблица 020124 - Разряд или вспышка молнии';


--
-- Name: COLUMN bufr_code_020124.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020124.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020124.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020124.description IS 'Описание';


--
-- Name: bufr_code_020124_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020124_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020124_seq OWNER TO postgres;

--
-- Name: bufr_code_020136; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_020136 (
    id bigint DEFAULT nextval(('public.bufr_code_020136_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_020136 OWNER TO postgres;

--
-- Name: TABLE bufr_code_020136; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_020136 IS 'Кодовая таблица 020136 - Дополнительный тип облачности';


--
-- Name: COLUMN bufr_code_020136.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020136.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_020136.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_020136.description IS 'Описание';


--
-- Name: bufr_code_020136_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_020136_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_020136_seq OWNER TO postgres;

--
-- Name: bufr_code_021022; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_021022 (
    id bigint DEFAULT nextval(('public.bufr_code_021022_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_021022 OWNER TO postgres;

--
-- Name: TABLE bufr_code_021022; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_021022 IS 'Кодовая таблица 021022 - Описатель изменения прогноза трендового типа или прогноза по аэродрому';


--
-- Name: COLUMN bufr_code_021022.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_021022.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_021022.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_021022.description IS 'Описание';


--
-- Name: bufr_code_021022_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_021022_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_021022_seq OWNER TO postgres;

--
-- Name: bufr_code_021066; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_021066 (
    id bigint DEFAULT nextval(('public.bufr_code_021066_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_021066 OWNER TO postgres;

--
-- Name: TABLE bufr_code_021066; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_021066 IS 'Кодовая таблица 021066 - Данные о достоверности продукции волнового рефлектометра';


--
-- Name: COLUMN bufr_code_021066.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_021066.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_021066.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_021066.description IS 'Описание';


--
-- Name: bufr_code_021066_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_021066_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_021066_seq OWNER TO postgres;

--
-- Name: bufr_code_021067; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_021067 (
    id bigint DEFAULT nextval(('public.bufr_code_021067_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_021067 OWNER TO postgres;

--
-- Name: TABLE bufr_code_021067; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_021067 IS 'Кодовая таблица 021067 - Данные о достоверности продукции ветра';


--
-- Name: COLUMN bufr_code_021067.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_021067.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_021067.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_021067.description IS 'Описание';


--
-- Name: bufr_code_021067_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_021067_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_021067_seq OWNER TO postgres;

--
-- Name: bufr_code_021068; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_021068 (
    id bigint DEFAULT nextval(('public.bufr_code_021068_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_021068 OWNER TO postgres;

--
-- Name: TABLE bufr_code_021068; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_021068 IS 'Кодовая таблица 021068 - Данные о достоверности продукции радиолокационного альтиметра';


--
-- Name: COLUMN bufr_code_021068.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_021068.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_021068.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_021068.description IS 'Описание';


--
-- Name: bufr_code_021068_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_021068_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_021068_seq OWNER TO postgres;

--
-- Name: bufr_code_021069; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_021069 (
    id bigint DEFAULT nextval(('public.bufr_code_021069_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_021069 OWNER TO postgres;

--
-- Name: TABLE bufr_code_021069; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_021069 IS 'Кодовая таблица 021069 - Данные о достоверности продукции ТПМ';


--
-- Name: COLUMN bufr_code_021069.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_021069.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_021069.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_021069.description IS 'Описание';


--
-- Name: bufr_code_021069_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_021069_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_021069_seq OWNER TO postgres;

--
-- Name: bufr_code_021070; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_021070 (
    id bigint DEFAULT nextval(('public.bufr_code_021070_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    value text
);


ALTER TABLE public.bufr_code_021070 OWNER TO postgres;

--
-- Name: TABLE bufr_code_021070; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_021070 IS 'Кодовая таблица 021070 - Данные о достоверности продукции по ТПМ (SADIST-2)';


--
-- Name: COLUMN bufr_code_021070.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_021070.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_021070.value; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_021070.value IS 'Значение, когда установлен';


--
-- Name: bufr_code_021070_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_021070_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_021070_seq OWNER TO postgres;

--
-- Name: bufr_code_021072; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_021072 (
    id bigint DEFAULT nextval(('public.bufr_code_021072_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_021072 OWNER TO postgres;

--
-- Name: TABLE bufr_code_021072; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_021072 IS 'Кодовая таблица 021072 - Статус калибровки альтиметра на спутнике';


--
-- Name: COLUMN bufr_code_021072.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_021072.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_021072.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_021072.description IS 'Описание';


--
-- Name: bufr_code_021072_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_021072_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_021072_seq OWNER TO postgres;

--
-- Name: bufr_code_021073; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_021073 (
    id bigint DEFAULT nextval(('public.bufr_code_021073_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_021073 OWNER TO postgres;

--
-- Name: TABLE bufr_code_021073; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_021073 IS 'Кодовая таблица 021073 - Режим спутникового альтиметра';


--
-- Name: COLUMN bufr_code_021073.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_021073.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_021073.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_021073.description IS 'Описание';


--
-- Name: bufr_code_021073_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_021073_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_021073_seq OWNER TO postgres;

--
-- Name: bufr_code_021076; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_021076 (
    id bigint DEFAULT nextval(('public.bufr_code_021076_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_021076 OWNER TO postgres;

--
-- Name: TABLE bufr_code_021076; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_021076 IS 'Кодовая таблица 021076 - Представление интенсивностей';


--
-- Name: COLUMN bufr_code_021076.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_021076.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_021076.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_021076.description IS 'Описание';


--
-- Name: bufr_code_021076_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_021076_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_021076_seq OWNER TO postgres;

--
-- Name: bufr_code_021109; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_021109 (
    id bigint DEFAULT nextval(('public.bufr_code_021109_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_021109 OWNER TO postgres;

--
-- Name: TABLE bufr_code_021109; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_021109 IS 'Кодовая таблица 021109 - Качество ячейки векторов ветра по измерениям SEAWINDS';


--
-- Name: COLUMN bufr_code_021109.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_021109.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_021109.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_021109.description IS 'Описание';


--
-- Name: bufr_code_021109_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_021109_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_021109_seq OWNER TO postgres;

--
-- Name: bufr_code_021115; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_021115 (
    id bigint DEFAULT nextval(('public.bufr_code_021115_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_021115 OWNER TO postgres;

--
-- Name: TABLE bufr_code_021115; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_021115 IS 'Кодовая таблица 021115 - Качество параметра сигма-0 по измерениям SEAWINDS';


--
-- Name: COLUMN bufr_code_021115.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_021115.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_021115.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_021115.description IS 'Описание';


--
-- Name: bufr_code_021115_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_021115_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_021115_seq OWNER TO postgres;

--
-- Name: bufr_code_021116; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_021116 (
    id bigint DEFAULT nextval(('public.bufr_code_021116_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_021116 OWNER TO postgres;

--
-- Name: TABLE bufr_code_021116; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_021116 IS 'Кодовая таблица 021116 - Режим параметра сигма-0 по измерениям SEAWINDS';


--
-- Name: COLUMN bufr_code_021116.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_021116.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_021116.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_021116.description IS 'Описание';


--
-- Name: bufr_code_021116_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_021116_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_021116_seq OWNER TO postgres;

--
-- Name: bufr_code_021119; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_021119 (
    id bigint DEFAULT nextval(('public.bufr_code_021119_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_021119 OWNER TO postgres;

--
-- Name: TABLE bufr_code_021119; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_021119 IS 'Кодовая таблица 021119 - Функция геофизической модели ветрового скаттерометра';


--
-- Name: COLUMN bufr_code_021119.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_021119.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_021119.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_021119.description IS 'Описание';


--
-- Name: bufr_code_021119_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_021119_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_021119_seq OWNER TO postgres;

--
-- Name: bufr_code_021144; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_021144 (
    id bigint DEFAULT nextval(('public.bufr_code_021144_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_021144 OWNER TO postgres;

--
-- Name: TABLE bufr_code_021144; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_021144 IS 'Кодовая таблица 021144 - Флаг дождя при работе альтиметра';


--
-- Name: COLUMN bufr_code_021144.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_021144.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_021144.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_021144.description IS 'Описание';


--
-- Name: bufr_code_021144_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_021144_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_021144_seq OWNER TO postgres;

--
-- Name: bufr_code_021150; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_021150 (
    id bigint DEFAULT nextval(('public.bufr_code_021150_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_021150 OWNER TO postgres;

--
-- Name: TABLE bufr_code_021150; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_021150 IS 'Кодовая таблица 021150 - Совместное положение луча';


--
-- Name: COLUMN bufr_code_021150.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_021150.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_021150.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_021150.description IS 'Описание';


--
-- Name: bufr_code_021150_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_021150_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_021150_seq OWNER TO postgres;

--
-- Name: bufr_code_021155; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_021155 (
    id bigint DEFAULT nextval(('public.bufr_code_021155_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_021155 OWNER TO postgres;

--
-- Name: TABLE bufr_code_021155; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_021155 IS 'Кодовая таблица 021155 - Качество ячейки векторов ветра';


--
-- Name: COLUMN bufr_code_021155.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_021155.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_021155.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_021155.description IS 'Описание';


--
-- Name: bufr_code_021155_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_021155_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_021155_seq OWNER TO postgres;

--
-- Name: bufr_code_021158; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_021158 (
    id bigint DEFAULT nextval(('public.bufr_code_021158_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_021158 OWNER TO postgres;

--
-- Name: TABLE bufr_code_021158; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_021158 IS 'Кодовая таблица 021158 - Оценка качества Kр ASCAT';


--
-- Name: COLUMN bufr_code_021158.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_021158.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_021158.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_021158.description IS 'Описание';


--
-- Name: bufr_code_021158_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_021158_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_021158_seq OWNER TO postgres;

--
-- Name: bufr_code_021159; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_021159 (
    id bigint DEFAULT nextval(('public.bufr_code_021159_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_021159 OWNER TO postgres;

--
-- Name: TABLE bufr_code_021159; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_021159 IS 'Кодовая таблица 021159 - Используемость параметра сигма-0 АSCAT';


--
-- Name: COLUMN bufr_code_021159.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_021159.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_021159.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_021159.description IS 'Описание';


--
-- Name: bufr_code_021159_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_021159_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_021159_seq OWNER TO postgres;

--
-- Name: bufr_code_021169; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_021169 (
    id bigint DEFAULT nextval(('public.bufr_code_021169_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_021169 OWNER TO postgres;

--
-- Name: TABLE bufr_code_021169; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_021169 IS 'Кодовая таблица 021169 - Указатель наличия льда';


--
-- Name: COLUMN bufr_code_021169.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_021169.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_021169.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_021169.description IS 'Описание';


--
-- Name: bufr_code_021169_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_021169_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_021169_seq OWNER TO postgres;

--
-- Name: bufr_code_022056; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_022056 (
    id bigint DEFAULT nextval(('public.bufr_code_022056_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_022056 OWNER TO postgres;

--
-- Name: TABLE bufr_code_022056; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_022056 IS 'Кодовая таблица 022056 - Направление профиля';


--
-- Name: COLUMN bufr_code_022056.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_022056.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_022056.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_022056.description IS 'Описание';


--
-- Name: bufr_code_022056_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_022056_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_022056_seq OWNER TO postgres;

--
-- Name: bufr_code_022060; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_022060 (
    id bigint DEFAULT nextval(('public.bufr_code_022060_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_022060 OWNER TO postgres;

--
-- Name: TABLE bufr_code_022060; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_022060 IS 'Кодовая таблица 022060 - Состояние плавучего якоря дрейфующего буя Лагранжа';


--
-- Name: COLUMN bufr_code_022060.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_022060.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_022060.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_022060.description IS 'Описание';


--
-- Name: bufr_code_022060_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_022060_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_022060_seq OWNER TO postgres;

--
-- Name: bufr_code_022061; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_022061 (
    id bigint DEFAULT nextval(('public.bufr_code_022061_seq'::text)::regclass) NOT NULL,
    code integer,
    description text,
    wave_height_min text,
    wave_height_max text
);


ALTER TABLE public.bufr_code_022061 OWNER TO postgres;

--
-- Name: TABLE bufr_code_022061; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_022061 IS 'Кодовая таблица 022061 - Состояние моря';


--
-- Name: COLUMN bufr_code_022061.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_022061.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_022061.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_022061.description IS 'Описание';


--
-- Name: COLUMN bufr_code_022061.wave_height_min; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_022061.wave_height_min IS 'Высота волны в метрах, мин.';


--
-- Name: COLUMN bufr_code_022061.wave_height_max; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_022061.wave_height_max IS 'Высота волны в метрах, макс.';


--
-- Name: bufr_code_022061_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_022061_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_022061_seq OWNER TO postgres;

--
-- Name: bufr_code_022120; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_022120 (
    id bigint DEFAULT nextval(('public.bufr_code_022120_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_022120 OWNER TO postgres;

--
-- Name: TABLE bufr_code_022120; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_022120 IS 'Кодовая таблица 022120 - Автоматизированный контроль уровня воды станцией наблюдения за приливами';


--
-- Name: COLUMN bufr_code_022120.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_022120.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_022120.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_022120.description IS 'Описание';


--
-- Name: bufr_code_022120_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_022120_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_022120_seq OWNER TO postgres;

--
-- Name: bufr_code_022121; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_022121 (
    id bigint DEFAULT nextval(('public.bufr_code_022121_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_022121 OWNER TO postgres;

--
-- Name: TABLE bufr_code_022121; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_022121 IS 'Кодовая таблица 022121 - Ручной контроль уровня воды станцией наблюдения за приливами';


--
-- Name: COLUMN bufr_code_022121.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_022121.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_022121.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_022121.description IS 'Описание';


--
-- Name: bufr_code_022121_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_022121_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_022121_seq OWNER TO postgres;

--
-- Name: bufr_code_022122; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_022122 (
    id bigint DEFAULT nextval(('public.bufr_code_022122_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_022122 OWNER TO postgres;

--
-- Name: TABLE bufr_code_022122; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_022122 IS 'Кодовая таблица 022122 - Автоматизированный контроль метеорологических данных станцией наблюдения за приливами';


--
-- Name: COLUMN bufr_code_022122.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_022122.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_022122.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_022122.description IS 'Описание';


--
-- Name: bufr_code_022122_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_022122_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_022122_seq OWNER TO postgres;

--
-- Name: bufr_code_022123; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_022123 (
    id bigint DEFAULT nextval(('public.bufr_code_022123_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_022123 OWNER TO postgres;

--
-- Name: TABLE bufr_code_022123; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_022123 IS 'Кодовая таблица 022123 - Ручной контроль метеорологических данных станцией наблюдения за приливами';


--
-- Name: COLUMN bufr_code_022123.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_022123.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_022123.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_022123.description IS 'Описание';


--
-- Name: bufr_code_022123_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_022123_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_022123_seq OWNER TO postgres;

--
-- Name: bufr_code_022178; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_022178 (
    id bigint DEFAULT nextval(('public.bufr_code_022178_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_022178 OWNER TO postgres;

--
-- Name: TABLE bufr_code_022178; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_022178 IS 'Кодовая таблица 022178 - Тип устройства для спуска ОБТ/ОПТГ';


--
-- Name: COLUMN bufr_code_022178.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_022178.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_022178.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_022178.description IS 'Описание';


--
-- Name: bufr_code_022178_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_022178_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_022178_seq OWNER TO postgres;

--
-- Name: bufr_code_023001; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_023001 (
    id bigint DEFAULT nextval(('public.bufr_code_023001_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_023001 OWNER TO postgres;

--
-- Name: TABLE bufr_code_023001; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_023001 IS 'Кодовая таблица 023001 - Оперативное оповещение об аварии — применимая статья Конвенции';


--
-- Name: COLUMN bufr_code_023001.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_023001.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_023001.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_023001.description IS 'Описание';


--
-- Name: bufr_code_023001_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_023001_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_023001_seq OWNER TO postgres;

--
-- Name: bufr_code_023002; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_023002 (
    id bigint DEFAULT nextval(('public.bufr_code_023002_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_023002 OWNER TO postgres;

--
-- Name: TABLE bufr_code_023002; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_023002 IS 'Кодовая таблица 023002 - Деятельность или установка, связанные с происшествием';


--
-- Name: COLUMN bufr_code_023002.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_023002.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_023002.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_023002.description IS 'Описание';


--
-- Name: bufr_code_023002_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_023002_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_023002_seq OWNER TO postgres;

--
-- Name: bufr_code_023003; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_023003 (
    id bigint DEFAULT nextval(('public.bufr_code_023003_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_023003 OWNER TO postgres;

--
-- Name: TABLE bufr_code_023003; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_023003 IS 'Кодовая таблица 023003 - Тип выброса';


--
-- Name: COLUMN bufr_code_023003.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_023003.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_023003.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_023003.description IS 'Описание';


--
-- Name: bufr_code_023003_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_023003_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_023003_seq OWNER TO postgres;

--
-- Name: bufr_code_023004; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_023004 (
    id bigint DEFAULT nextval(('public.bufr_code_023004_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_023004 OWNER TO postgres;

--
-- Name: TABLE bufr_code_023004; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_023004 IS 'Кодовая таблица 023004 - Контрмеры, принятые близ границы';


--
-- Name: COLUMN bufr_code_023004.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_023004.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_023004.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_023004.description IS 'Описание';


--
-- Name: bufr_code_023004_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_023004_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_023004_seq OWNER TO postgres;

--
-- Name: bufr_code_023005; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_023005 (
    id bigint DEFAULT nextval(('public.bufr_code_023005_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_023005 OWNER TO postgres;

--
-- Name: TABLE bufr_code_023005; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_023005 IS 'Кодовая таблица 023005 - Причина происшествия';


--
-- Name: COLUMN bufr_code_023005.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_023005.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_023005.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_023005.description IS 'Описание';


--
-- Name: bufr_code_023005_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_023005_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_023005_seq OWNER TO postgres;

--
-- Name: bufr_code_023006; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_023006 (
    id bigint DEFAULT nextval(('public.bufr_code_023006_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_023006 OWNER TO postgres;

--
-- Name: TABLE bufr_code_023006; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_023006 IS 'Кодовая таблица 023006 - Ситуация, связанная с происшествием';


--
-- Name: COLUMN bufr_code_023006.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_023006.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_023006.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_023006.description IS 'Описание';


--
-- Name: bufr_code_023006_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_023006_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_023006_seq OWNER TO postgres;

--
-- Name: bufr_code_023007; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_023007 (
    id bigint DEFAULT nextval(('public.bufr_code_023007_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_023007 OWNER TO postgres;

--
-- Name: TABLE bufr_code_023007; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_023007 IS 'Кодовая таблица 023007 - Характеристика выброса';


--
-- Name: COLUMN bufr_code_023007.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_023007.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_023007.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_023007.description IS 'Описание';


--
-- Name: bufr_code_023007_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_023007_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_023007_seq OWNER TO postgres;

--
-- Name: bufr_code_023008; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_023008 (
    id bigint DEFAULT nextval(('public.bufr_code_023008_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_023008 OWNER TO postgres;

--
-- Name: TABLE bufr_code_023008; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_023008 IS 'Кодовая таблица 023008 - Состояние текущего или ожидаемого выброса';


--
-- Name: COLUMN bufr_code_023008.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_023008.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_023008.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_023008.description IS 'Описание';


--
-- Name: bufr_code_023008_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_023008_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_023008_seq OWNER TO postgres;

--
-- Name: bufr_code_023009; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_023009 (
    id bigint DEFAULT nextval(('public.bufr_code_023009_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_023009 OWNER TO postgres;

--
-- Name: TABLE bufr_code_023009; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_023009 IS 'Кодовая таблица 023009 - Состояние текущего или ожидаемого выброса';


--
-- Name: COLUMN bufr_code_023009.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_023009.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_023009.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_023009.description IS 'Описание';


--
-- Name: bufr_code_023009_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_023009_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_023009_seq OWNER TO postgres;

--
-- Name: bufr_code_023016; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_023016 (
    id bigint DEFAULT nextval(('public.bufr_code_023016_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_023016 OWNER TO postgres;

--
-- Name: TABLE bufr_code_023016; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_023016 IS 'Кодовая таблица 023016 - Возможность значительного химико-токсического воздействия на здоровье';


--
-- Name: COLUMN bufr_code_023016.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_023016.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_023016.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_023016.description IS 'Описание';


--
-- Name: bufr_code_023016_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_023016_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_023016_seq OWNER TO postgres;

--
-- Name: bufr_code_023018; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_023018 (
    id bigint DEFAULT nextval(('public.bufr_code_023018_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_023018 OWNER TO postgres;

--
-- Name: TABLE bufr_code_023018; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_023018 IS 'Кодовая таблица 023018 - Поведение выброса во времени';


--
-- Name: COLUMN bufr_code_023018.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_023018.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_023018.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_023018.description IS 'Описание';


--
-- Name: bufr_code_023018_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_023018_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_023018_seq OWNER TO postgres;

--
-- Name: bufr_code_023031; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_023031 (
    id bigint DEFAULT nextval(('public.bufr_code_023031_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_023031 OWNER TO postgres;

--
-- Name: TABLE bufr_code_023031; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_023031 IS 'Кодовая таблица 023031 - Возможность взаимодействия шлейфа с осадками, выпавшими в стране происхождения аварии';


--
-- Name: COLUMN bufr_code_023031.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_023031.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_023031.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_023031.description IS 'Описание';


--
-- Name: bufr_code_023031_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_023031_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_023031_seq OWNER TO postgres;

--
-- Name: bufr_code_023032; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_023032 (
    id bigint DEFAULT nextval(('public.bufr_code_023032_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_023032 OWNER TO postgres;

--
-- Name: TABLE bufr_code_023032; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_023032 IS 'Кодовая таблица 023032 - Воздействие на шлейф изменения в направлении и/или флаге скорости ветра';


--
-- Name: COLUMN bufr_code_023032.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_023032.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_023032.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_023032.description IS 'Описание';


--
-- Name: bufr_code_023032_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_023032_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_023032_seq OWNER TO postgres;

--
-- Name: bufr_code_024003; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_024003 (
    id bigint DEFAULT nextval(('public.bufr_code_024003_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_024003 OWNER TO postgres;

--
-- Name: TABLE bufr_code_024003; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_024003 IS 'Кодовая таблица 024003 - Состав выброса';


--
-- Name: COLUMN bufr_code_024003.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_024003.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_024003.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_024003.description IS 'Описание';


--
-- Name: bufr_code_024003_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_024003_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_024003_seq OWNER TO postgres;

--
-- Name: bufr_code_025004; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025004 (
    id bigint DEFAULT nextval(('public.bufr_code_025004_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_025004 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025004; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025004 IS 'Кодовая таблица 025004 - Обработка отраженного сигнала';


--
-- Name: COLUMN bufr_code_025004.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025004.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_025004.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025004.description IS 'Описание';


--
-- Name: bufr_code_025004_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025004_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025004_seq OWNER TO postgres;

--
-- Name: bufr_code_025005; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025005 (
    id bigint DEFAULT nextval(('public.bufr_code_025005_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_025005 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025005; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025005 IS 'Кодовая таблица 025005 - Интегрирование отраженного сигнала';


--
-- Name: COLUMN bufr_code_025005.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025005.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_025005.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025005.description IS 'Описание';


--
-- Name: bufr_code_025005_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025005_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025005_seq OWNER TO postgres;

--
-- Name: bufr_code_025006; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025006 (
    id bigint DEFAULT nextval(('public.bufr_code_025006_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_025006 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025006; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025006 IS 'Кодовая таблица 025006 - Конверсия Z в R';


--
-- Name: COLUMN bufr_code_025006.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025006.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_025006.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025006.description IS 'Описание';


--
-- Name: bufr_code_025006_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025006_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025006_seq OWNER TO postgres;

--
-- Name: bufr_code_025009; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025009 (
    id bigint DEFAULT nextval(('public.bufr_code_025009_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_025009 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025009; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025009 IS 'Кодовая таблица 025009 - Метод калибровки';


--
-- Name: COLUMN bufr_code_025009.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025009.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_025009.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025009.description IS 'Описание';


--
-- Name: bufr_code_025009_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025009_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025009_seq OWNER TO postgres;

--
-- Name: bufr_code_025010; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025010 (
    id bigint DEFAULT nextval(('public.bufr_code_025010_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_025010 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025010; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025010 IS 'Кодовая таблица 025010 - Подавление мешающих отражений';


--
-- Name: COLUMN bufr_code_025010.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025010.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_025010.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025010.description IS 'Описание';


--
-- Name: bufr_code_025010_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025010_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025010_seq OWNER TO postgres;

--
-- Name: bufr_code_025011; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025011 (
    id bigint DEFAULT nextval(('public.bufr_code_025011_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_025011 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025011; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025011 IS 'Кодовая таблица 025011 - Коррекция помех от земной поверхности (защита)';


--
-- Name: COLUMN bufr_code_025011.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025011.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_025011.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025011.description IS 'Описание';


--
-- Name: bufr_code_025011_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025011_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025011_seq OWNER TO postgres;

--
-- Name: bufr_code_025012; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025012 (
    id bigint DEFAULT nextval(('public.bufr_code_025012_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_025012 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025012; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025012 IS 'Кодовая таблица 025012 - Коррекция затухания с увеличением дальности';


--
-- Name: COLUMN bufr_code_025012.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025012.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_025012.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025012.description IS 'Описание';


--
-- Name: bufr_code_025012_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025012_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025012_seq OWNER TO postgres;

--
-- Name: bufr_code_025013; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025013 (
    id bigint DEFAULT nextval(('public.bufr_code_025013_seq'::text)::regclass) NOT NULL,
    unknown0 text,
    unknown1 text
);


ALTER TABLE public.bufr_code_025013 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025013; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025013 IS 'Кодовая таблица 025013 - Коррекция яркой полосы';


--
-- Name: COLUMN bufr_code_025013.unknown0; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025013.unknown0 IS 'Номер';


--
-- Name: COLUMN bufr_code_025013.unknown1; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025013.unknown1 IS 'бита';


--
-- Name: bufr_code_025013_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025013_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025013_seq OWNER TO postgres;

--
-- Name: bufr_code_025015; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025015 (
    id bigint DEFAULT nextval(('public.bufr_code_025015_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_025015 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025015; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025015 IS 'Кодовая таблица 025015 - Коррекция затухания на обтекателе';


--
-- Name: COLUMN bufr_code_025015.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025015.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_025015.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025015.description IS 'Описание';


--
-- Name: bufr_code_025015_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025015_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025015_seq OWNER TO postgres;

--
-- Name: bufr_code_025017; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025017 (
    id bigint DEFAULT nextval(('public.bufr_code_025017_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_025017 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025017; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025017 IS 'Кодовая таблица 025017 - Коррекция затухания в осадках';


--
-- Name: COLUMN bufr_code_025017.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025017.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_025017.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025017.description IS 'Описание';


--
-- Name: bufr_code_025017_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025017_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025017_seq OWNER TO postgres;

--
-- Name: bufr_code_025020; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025020 (
    id bigint DEFAULT nextval(('public.bufr_code_025020_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_025020 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025020; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025020 IS 'Кодовая таблица 025020 - Оценка средней скорости';


--
-- Name: COLUMN bufr_code_025020.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025020.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_025020.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025020.description IS 'Описание';


--
-- Name: bufr_code_025020_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025020_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025020_seq OWNER TO postgres;

--
-- Name: bufr_code_025021; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025021 (
    id bigint DEFAULT nextval(('public.bufr_code_025021_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_025021 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025021; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025021 IS 'Кодовая таблица 025021 - Расширение расчета ветра';


--
-- Name: COLUMN bufr_code_025021.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025021.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_025021.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025021.description IS 'Описание';


--
-- Name: bufr_code_025021_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025021_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025021_seq OWNER TO postgres;

--
-- Name: bufr_code_025022; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025022 (
    id bigint DEFAULT nextval(('public.bufr_code_025022_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_025022 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025022; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025022 IS 'Кодовая таблица 025022 - Флаг неприемлемости ТПМВРГ*';


--
-- Name: COLUMN bufr_code_025022.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025022.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_025022.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025022.description IS 'Описание';


--
-- Name: bufr_code_025022_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025022_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025022_seq OWNER TO postgres;

--
-- Name: bufr_code_025023; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025023 (
    id bigint DEFAULT nextval(('public.bufr_code_025023_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_025023 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025023; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025023 IS 'Кодовая таблица 025023 - Флаг достоверности ТПМВРГ';


--
-- Name: COLUMN bufr_code_025023.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025023.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_025023.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025023.description IS 'Описание';


--
-- Name: bufr_code_025023_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025023_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025023_seq OWNER TO postgres;

--
-- Name: bufr_code_025024; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025024 (
    id bigint DEFAULT nextval(('public.bufr_code_025024_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_025024 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025024; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025024 IS 'Кодовая таблица 025024 - Качество данных ТПМВРГ';


--
-- Name: COLUMN bufr_code_025024.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025024.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_025024.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025024.description IS 'Описание';


--
-- Name: bufr_code_025024_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025024_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025024_seq OWNER TO postgres;

--
-- Name: bufr_code_025029; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025029 (
    id bigint DEFAULT nextval(('public.bufr_code_025029_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_025029 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025029; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025029 IS 'Кодовая таблица 025029 - Метод калибровки';


--
-- Name: COLUMN bufr_code_025029.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025029.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_025029.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025029.description IS 'Описание';


--
-- Name: bufr_code_025029_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025029_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025029_seq OWNER TO postgres;

--
-- Name: bufr_code_025030; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025030 (
    id bigint DEFAULT nextval(('public.bufr_code_025030_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_025030 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025030; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025030 IS 'Кодовая таблица 025030 - Использование скользящей средней температуры поверхности моря';


--
-- Name: COLUMN bufr_code_025030.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025030.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_025030.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025030.description IS 'Описание';


--
-- Name: bufr_code_025030_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025030_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025030_seq OWNER TO postgres;

--
-- Name: bufr_code_025031; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025031 (
    id bigint DEFAULT nextval(('public.bufr_code_025031_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_025031 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025031; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025031 IS 'Кодовая таблица 025031 - Метод прореживания вертикальных профилей, полученных с помощью ЧПП';


--
-- Name: COLUMN bufr_code_025031.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025031.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_025031.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025031.description IS 'Описание';


--
-- Name: bufr_code_025031_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025031_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025031_seq OWNER TO postgres;

--
-- Name: bufr_code_025032; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025032 (
    id bigint DEFAULT nextval(('public.bufr_code_025032_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_025032 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025032; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025032 IS 'Кодовая таблица 025032 - Информация о режиме, в котором используется профилометр ветра';


--
-- Name: COLUMN bufr_code_025032.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025032.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_025032.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025032.description IS 'Описание';


--
-- Name: bufr_code_025032_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025032_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025032_seq OWNER TO postgres;

--
-- Name: bufr_code_025033; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025033 (
    id bigint DEFAULT nextval(('public.bufr_code_025033_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_025033 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025033; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025033 IS 'Кодовая таблица 025033 - Информация о поддиапазоне применения профилометра ветра';


--
-- Name: COLUMN bufr_code_025033.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025033.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_025033.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025033.description IS 'Описание';


--
-- Name: bufr_code_025033_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025033_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025033_seq OWNER TO postgres;

--
-- Name: bufr_code_025034; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025034 (
    id bigint DEFAULT nextval(('public.bufr_code_025034_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    value text
);


ALTER TABLE public.bufr_code_025034 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025034; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025034 IS 'Кодовая таблица 025034 - Результаты контроля качества данных профилометра ветра';


--
-- Name: COLUMN bufr_code_025034.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025034.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_025034.value; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025034.value IS 'Значение';


--
-- Name: bufr_code_025034_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025034_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025034_seq OWNER TO postgres;

--
-- Name: bufr_code_025035; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025035 (
    id bigint DEFAULT nextval(('public.bufr_code_025035_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_025035 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025035; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025035 IS 'Кодовая таблица 025035 - Метод обнаружения атмосфериков';


--
-- Name: COLUMN bufr_code_025035.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025035.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_025035.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025035.description IS 'Описание';


--
-- Name: bufr_code_025035_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025035_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025035_seq OWNER TO postgres;

--
-- Name: bufr_code_025036; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025036 (
    id bigint DEFAULT nextval(('public.bufr_code_025036_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_025036 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025036; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025036 IS 'Кодовая таблица 025036 - Метод обнаружения атмосфериков';


--
-- Name: COLUMN bufr_code_025036.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025036.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_025036.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025036.description IS 'Описание';


--
-- Name: bufr_code_025036_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025036_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025036_seq OWNER TO postgres;

--
-- Name: bufr_code_025040; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025040 (
    id bigint DEFAULT nextval(('public.bufr_code_025040_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_025040 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025040; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025040 IS 'Кодовая таблица 025040 - Получение продукции о ветре по измерениям CO2';


--
-- Name: COLUMN bufr_code_025040.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025040.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_025040.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025040.description IS 'Описание';


--
-- Name: bufr_code_025040_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025040_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025040_seq OWNER TO postgres;

--
-- Name: bufr_code_025041; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025041 (
    id bigint DEFAULT nextval(('public.bufr_code_025041_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_025041 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025041; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025041 IS 'Кодовая таблица 025041 - Метод передачи сводок о направлении движения подвижной платформы';


--
-- Name: COLUMN bufr_code_025041.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025041.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_025041.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025041.description IS 'Описание';


--
-- Name: bufr_code_025041_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025041_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025041_seq OWNER TO postgres;

--
-- Name: bufr_code_025042; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025042 (
    id bigint DEFAULT nextval(('public.bufr_code_025042_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_025042 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025042; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025042 IS 'Кодовая таблица 025042 - Метод передачи сводок о скорости движения подвижной платформы';


--
-- Name: COLUMN bufr_code_025042.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025042.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_025042.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025042.description IS 'Описание';


--
-- Name: bufr_code_025042_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025042_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025042_seq OWNER TO postgres;

--
-- Name: bufr_code_025045; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025045 (
    id bigint DEFAULT nextval(('public.bufr_code_025045_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_025045 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025045; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025045 IS 'Кодовая таблица 025045 - Комбинация каналов HIRS';


--
-- Name: COLUMN bufr_code_025045.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025045.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_025045.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025045.description IS 'Описание';


--
-- Name: bufr_code_025045_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025045_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025045_seq OWNER TO postgres;

--
-- Name: bufr_code_025046; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025046 (
    id bigint DEFAULT nextval(('public.bufr_code_025046_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_025046 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025046; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025046 IS 'Кодовая таблица 025046 - Комбинация каналов MSU';


--
-- Name: COLUMN bufr_code_025046.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025046.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_025046.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025046.description IS 'Описание';


--
-- Name: bufr_code_025046_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025046_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025046_seq OWNER TO postgres;

--
-- Name: bufr_code_025047; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025047 (
    id bigint DEFAULT nextval(('public.bufr_code_025047_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_025047 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025047; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025047 IS 'Кодовая таблица 025047 - Комбинация каналов SSU';


--
-- Name: COLUMN bufr_code_025047.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025047.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_025047.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025047.description IS 'Описание';


--
-- Name: bufr_code_025047_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025047_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025047_seq OWNER TO postgres;

--
-- Name: bufr_code_025048; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025048 (
    id bigint DEFAULT nextval(('public.bufr_code_025048_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_025048 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025048; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025048 IS 'Кодовая таблица 025048 - Комбинация каналов AMSU-A';


--
-- Name: COLUMN bufr_code_025048.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025048.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_025048.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025048.description IS 'Описание';


--
-- Name: bufr_code_025048_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025048_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025048_seq OWNER TO postgres;

--
-- Name: bufr_code_025049; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025049 (
    id bigint DEFAULT nextval(('public.bufr_code_025049_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_025049 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025049; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025049 IS 'Кодовая таблица 025049 - Комбинация каналов AMSU-B';


--
-- Name: COLUMN bufr_code_025049.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025049.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_025049.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025049.description IS 'Описание';


--
-- Name: bufr_code_025049_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025049_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025049_seq OWNER TO postgres;

--
-- Name: bufr_code_025051; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025051 (
    id bigint DEFAULT nextval(('public.bufr_code_025051_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_025051 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025051; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025051 IS 'Кодовая таблица 025051 - Комбинация каналов AVHRR';


--
-- Name: COLUMN bufr_code_025051.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025051.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_025051.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025051.description IS 'Описание';


--
-- Name: bufr_code_025051_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025051_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025051_seq OWNER TO postgres;

--
-- Name: bufr_code_025053; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025053 (
    id bigint DEFAULT nextval(('public.bufr_code_025053_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_025053 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025053; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025053 IS 'Кодовая таблица 025053 - Качество наблюдений';


--
-- Name: COLUMN bufr_code_025053.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025053.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_025053.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025053.description IS 'Описание';


--
-- Name: bufr_code_025053_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025053_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025053_seq OWNER TO postgres;

--
-- Name: bufr_code_025063; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025063 (
    id bigint DEFAULT nextval(('public.bufr_code_025063_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_025063 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025063; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025063 IS 'Кодовая таблица 025063 - Указатель центрального процессора или системы';


--
-- Name: COLUMN bufr_code_025063.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025063.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_025063.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025063.description IS 'Описание';


--
-- Name: bufr_code_025063_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025063_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025063_seq OWNER TO postgres;

--
-- Name: bufr_code_025069; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025069 (
    id bigint DEFAULT nextval(('public.bufr_code_025069_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_025069 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025069; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025069 IS 'Кодовая таблица 025069 - Поправки давления на высоту';


--
-- Name: COLUMN bufr_code_025069.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025069.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_025069.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025069.description IS 'Описание';


--
-- Name: bufr_code_025069_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025069_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025069_seq OWNER TO postgres;

--
-- Name: bufr_code_025086; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025086 (
    id bigint DEFAULT nextval(('public.bufr_code_025086_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_025086 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025086; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025086 IS 'Кодовая таблица 025086 - Указатель корректировки глубины';


--
-- Name: COLUMN bufr_code_025086.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025086.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_025086.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025086.description IS 'Описание';


--
-- Name: bufr_code_025086_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025086_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025086_seq OWNER TO postgres;

--
-- Name: bufr_code_025090; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025090 (
    id bigint DEFAULT nextval(('public.bufr_code_025090_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_025090 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025090; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025090 IS 'Кодовая таблица 025090 - Флаг характеристики орбиты';


--
-- Name: COLUMN bufr_code_025090.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025090.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_025090.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025090.description IS 'Описание';


--
-- Name: bufr_code_025090_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025090_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025090_seq OWNER TO postgres;

--
-- Name: bufr_code_025093; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025093 (
    id bigint DEFAULT nextval(('public.bufr_code_025093_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_025093 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025093; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025093 IS 'Кодовая таблица 025093 - Корректировка расчета данных РАСC*';


--
-- Name: COLUMN bufr_code_025093.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025093.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_025093.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025093.description IS 'Описание';


--
-- Name: bufr_code_025093_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025093_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025093_seq OWNER TO postgres;

--
-- Name: bufr_code_025095; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025095 (
    id bigint DEFAULT nextval(('public.bufr_code_025095_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_025095 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025095; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025095 IS 'Кодовая таблица 025095 - Флаг состояния высотомера';


--
-- Name: COLUMN bufr_code_025095.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025095.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_025095.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025095.description IS 'Описание';


--
-- Name: bufr_code_025095_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025095_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025095_seq OWNER TO postgres;

--
-- Name: bufr_code_025096; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025096 (
    id bigint DEFAULT nextval(('public.bufr_code_025096_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_025096 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025096; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025096 IS 'Кодовая таблица 025096 - Флаг состояния радиометра';


--
-- Name: COLUMN bufr_code_025096.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025096.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_025096.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025096.description IS 'Описание';


--
-- Name: bufr_code_025096_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025096_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025096_seq OWNER TO postgres;

--
-- Name: bufr_code_025097; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025097 (
    id bigint DEFAULT nextval(('public.bufr_code_025097_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_025097 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025097; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025097 IS 'Кодовая таблица 025097 - Трехмерная оценка ошибки орбиты навигатора';


--
-- Name: COLUMN bufr_code_025097.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025097.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_025097.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025097.description IS 'Описание';


--
-- Name: bufr_code_025097_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025097_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025097_seq OWNER TO postgres;

--
-- Name: bufr_code_025098; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025098 (
    id bigint DEFAULT nextval(('public.bufr_code_025098_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_025098 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025098; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025098 IS 'Кодовая таблица 025098 - Флаг качества данных альтиметра';


--
-- Name: COLUMN bufr_code_025098.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025098.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_025098.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025098.description IS 'Описание';


--
-- Name: bufr_code_025098_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025098_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025098_seq OWNER TO postgres;

--
-- Name: bufr_code_025099; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025099 (
    id bigint DEFAULT nextval(('public.bufr_code_025099_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_025099 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025099; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025099 IS 'Кодовая таблица 025099 - Флаг качества коррекции альтиметра';


--
-- Name: COLUMN bufr_code_025099.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025099.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_025099.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025099.description IS 'Описание';


--
-- Name: bufr_code_025099_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025099_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025099_seq OWNER TO postgres;

--
-- Name: bufr_code_025110; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025110 (
    id bigint DEFAULT nextval(('public.bufr_code_025110_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_025110 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025110; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025110 IS 'Кодовая таблица 025110 - Краткая сводка об обработке изображения';


--
-- Name: COLUMN bufr_code_025110.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025110.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_025110.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025110.description IS 'Описание';


--
-- Name: bufr_code_025110_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025110_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025110_seq OWNER TO postgres;

--
-- Name: bufr_code_025120; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025120 (
    id bigint DEFAULT nextval(('public.bufr_code_025120_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_025120 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025120; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025120 IS 'Кодовая таблица 025120 - Флаги обработки RA2-L2';


--
-- Name: COLUMN bufr_code_025120.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025120.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_025120.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025120.description IS 'Описание';


--
-- Name: bufr_code_025120_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025120_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025120_seq OWNER TO postgres;

--
-- Name: bufr_code_025122; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025122 (
    id bigint DEFAULT nextval(('public.bufr_code_025122_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_025122 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025122; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025122 IS 'Кодовая таблица 025122 - Аппаратная конфигурация RF*';


--
-- Name: COLUMN bufr_code_025122.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025122.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_025122.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025122.description IS 'Описание';


--
-- Name: bufr_code_025122_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025122_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025122_seq OWNER TO postgres;

--
-- Name: bufr_code_025123; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025123 (
    id bigint DEFAULT nextval(('public.bufr_code_025123_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_025123 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025123; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025123 IS 'Кодовая таблица 025123 - Аппаратная конфигурация НРА*';


--
-- Name: COLUMN bufr_code_025123.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025123.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_025123.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025123.description IS 'Описание';


--
-- Name: bufr_code_025123_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025123_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025123_seq OWNER TO postgres;

--
-- Name: bufr_code_025124; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025124 (
    id bigint DEFAULT nextval(('public.bufr_code_025124_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_025124 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025124; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025124 IS 'Кодовая таблица 025124 - Флаги обработки MWR* – L2';


--
-- Name: COLUMN bufr_code_025124.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025124.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_025124.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025124.description IS 'Описание';


--
-- Name: bufr_code_025124_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025124_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025124_seq OWNER TO postgres;

--
-- Name: bufr_code_025150; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025150 (
    id bigint DEFAULT nextval(('public.bufr_code_025150_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_025150 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025150; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025150 IS 'Кодовая таблица 025150 - Метод анализа интенсивности тропического циклона с использованием спутниковых данных';


--
-- Name: COLUMN bufr_code_025150.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025150.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_025150.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025150.description IS 'Описание';


--
-- Name: bufr_code_025150_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025150_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025150_seq OWNER TO postgres;

--
-- Name: bufr_code_025174; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025174 (
    id bigint DEFAULT nextval(('public.bufr_code_025174_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_025174 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025174; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025174 IS 'Кодовая таблица 025174 - Флаг информации о СМОС*';


--
-- Name: COLUMN bufr_code_025174.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025174.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_025174.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025174.description IS 'Описание';


--
-- Name: bufr_code_025174_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025174_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025174_seq OWNER TO postgres;

--
-- Name: bufr_code_025181; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025181 (
    id bigint DEFAULT nextval(('public.bufr_code_025181_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_025181 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025181; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025181 IS 'Кодовая таблица 025181 - Флаг обработки данных L2';


--
-- Name: COLUMN bufr_code_025181.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025181.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_025181.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025181.description IS 'Описание';


--
-- Name: bufr_code_025181_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025181_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025181_seq OWNER TO postgres;

--
-- Name: bufr_code_025182; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025182 (
    id bigint DEFAULT nextval(('public.bufr_code_025182_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_025182 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025182; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025182 IS 'Кодовая таблица 025182 - Флаг обработки данных L1';


--
-- Name: COLUMN bufr_code_025182.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025182.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_025182.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025182.description IS 'Описание';


--
-- Name: bufr_code_025182_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025182_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025182_seq OWNER TO postgres;

--
-- Name: bufr_code_025184; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_025184 (
    id bigint DEFAULT nextval(('public.bufr_code_025184_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_025184 OWNER TO postgres;

--
-- Name: TABLE bufr_code_025184; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_025184 IS 'Кодовая таблица 025184 - Статус продукции L2';


--
-- Name: COLUMN bufr_code_025184.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025184.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_025184.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_025184.description IS 'Описание';


--
-- Name: bufr_code_025184_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_025184_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_025184_seq OWNER TO postgres;

--
-- Name: bufr_code_026010; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_026010 (
    id bigint DEFAULT nextval(('public.bufr_code_026010_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_026010 OWNER TO postgres;

--
-- Name: TABLE bufr_code_026010; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_026010 IS 'Кодовая таблица 026010 - Включенные часы';


--
-- Name: COLUMN bufr_code_026010.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_026010.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_026010.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_026010.description IS 'Описание';


--
-- Name: bufr_code_026010_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_026010_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_026010_seq OWNER TO postgres;

--
-- Name: bufr_code_029001; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_029001 (
    id bigint DEFAULT nextval(('public.bufr_code_029001_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_029001 OWNER TO postgres;

--
-- Name: TABLE bufr_code_029001; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_029001 IS 'Кодовая таблица 029001 - Тип проекции';


--
-- Name: COLUMN bufr_code_029001.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_029001.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_029001.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_029001.description IS 'Описание';


--
-- Name: bufr_code_029001_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_029001_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_029001_seq OWNER TO postgres;

--
-- Name: bufr_code_029002; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_029002 (
    id bigint DEFAULT nextval(('public.bufr_code_029002_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_029002 OWNER TO postgres;

--
-- Name: TABLE bufr_code_029002; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_029002 IS 'Кодовая таблица 029002 - Тип сетки координат';


--
-- Name: COLUMN bufr_code_029002.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_029002.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_029002.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_029002.description IS 'Описание';


--
-- Name: bufr_code_029002_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_029002_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_029002_seq OWNER TO postgres;

--
-- Name: bufr_code_030031; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_030031 (
    id bigint DEFAULT nextval(('public.bufr_code_030031_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_030031 OWNER TO postgres;

--
-- Name: TABLE bufr_code_030031; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_030031 IS 'Кодовая таблица 030031 - Тип изображения';


--
-- Name: COLUMN bufr_code_030031.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_030031.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_030031.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_030031.description IS 'Описание';


--
-- Name: bufr_code_030031_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_030031_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_030031_seq OWNER TO postgres;

--
-- Name: bufr_code_030032; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_030032 (
    id bigint DEFAULT nextval(('public.bufr_code_030032_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_030032 OWNER TO postgres;

--
-- Name: TABLE bufr_code_030032; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_030032 IS 'Кодовая таблица 030032 - Комбинация с другими данными';


--
-- Name: COLUMN bufr_code_030032.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_030032.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_030032.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_030032.description IS 'Описание';


--
-- Name: bufr_code_030032_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_030032_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_030032_seq OWNER TO postgres;

--
-- Name: bufr_code_031021; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_031021 (
    id bigint DEFAULT nextval(('public.bufr_code_031021_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_031021 OWNER TO postgres;

--
-- Name: TABLE bufr_code_031021; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_031021 IS 'Кодовая таблица 031021 - Значимость ассоциированного поля';


--
-- Name: COLUMN bufr_code_031021.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_031021.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_031021.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_031021.description IS 'Описание';


--
-- Name: bufr_code_031021_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_031021_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_031021_seq OWNER TO postgres;

--
-- Name: bufr_code_031031; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_031031 (
    id bigint DEFAULT nextval(('public.bufr_code_031031_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    value text,
    description text
);


ALTER TABLE public.bufr_code_031031 OWNER TO postgres;

--
-- Name: TABLE bufr_code_031031; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_031031 IS 'Кодовая таблица 031031 - Указатель наличия данных';


--
-- Name: COLUMN bufr_code_031031.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_031031.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_031031.value; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_031031.value IS 'Значение';


--
-- Name: COLUMN bufr_code_031031.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_031031.description IS 'Описание';


--
-- Name: bufr_code_031031_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_031031_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_031031_seq OWNER TO postgres;

--
-- Name: bufr_code_033002; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033002 (
    id bigint DEFAULT nextval(('public.bufr_code_033002_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_033002 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033002; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033002 IS 'Кодовая таблица 033002 - Информация о качестве';


--
-- Name: COLUMN bufr_code_033002.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033002.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_033002.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033002.description IS 'Описание';


--
-- Name: bufr_code_033002_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033002_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033002_seq OWNER TO postgres;

--
-- Name: bufr_code_033003; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033003 (
    id bigint DEFAULT nextval(('public.bufr_code_033003_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_033003 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033003; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033003 IS 'Кодовая таблица 033003 - Информация о качестве';


--
-- Name: COLUMN bufr_code_033003.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033003.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_033003.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033003.description IS 'Описание';


--
-- Name: bufr_code_033003_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033003_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033003_seq OWNER TO postgres;

--
-- Name: bufr_code_033005; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033005 (
    id bigint DEFAULT nextval(('public.bufr_code_033005_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_033005 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033005; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033005 IS 'Кодовая таблица 033005 - Информация о качестве (данные АМС)';


--
-- Name: COLUMN bufr_code_033005.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033005.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_033005.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033005.description IS 'Описание';


--
-- Name: bufr_code_033005_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033005_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033005_seq OWNER TO postgres;

--
-- Name: bufr_code_033006; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033006 (
    id bigint DEFAULT nextval(('public.bufr_code_033006_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_033006 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033006; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033006 IS 'Кодовая таблица 033006 - Информация о состоянии внутренних измерений (АМС)';


--
-- Name: COLUMN bufr_code_033006.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033006.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_033006.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033006.description IS 'Описание';


--
-- Name: bufr_code_033006_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033006_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033006_seq OWNER TO postgres;

--
-- Name: bufr_code_033015; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033015 (
    id bigint DEFAULT nextval(('public.bufr_code_033015_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_033015 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033015; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033015 IS 'Кодовая таблица 033015 - Указатель проверки качества данных';


--
-- Name: COLUMN bufr_code_033015.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033015.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_033015.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033015.description IS 'Описание';


--
-- Name: bufr_code_033015_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033015_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033015_seq OWNER TO postgres;

--
-- Name: bufr_code_033020; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033020 (
    id bigint DEFAULT nextval(('public.bufr_code_033020_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_033020 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033020; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033020 IS 'Кодовая таблица 033020 - Указание контроля качества значения последующей величины';


--
-- Name: COLUMN bufr_code_033020.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033020.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_033020.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033020.description IS 'Описание';


--
-- Name: bufr_code_033020_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033020_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033020_seq OWNER TO postgres;

--
-- Name: bufr_code_033021; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033021 (
    id bigint DEFAULT nextval(('public.bufr_code_033021_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_033021 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033021; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033021 IS 'Кодовая таблица 033021 - Качество последующей величины';


--
-- Name: COLUMN bufr_code_033021.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033021.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_033021.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033021.description IS 'Описание';


--
-- Name: bufr_code_033021_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033021_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033021_seq OWNER TO postgres;

--
-- Name: bufr_code_033022; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033022 (
    id bigint DEFAULT nextval(('public.bufr_code_033022_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_033022 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033022; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033022 IS 'Кодовая таблица 033022 - Качество передачи спутником данных с буев';


--
-- Name: COLUMN bufr_code_033022.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033022.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_033022.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033022.description IS 'Описание';


--
-- Name: bufr_code_033022_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033022_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033022_seq OWNER TO postgres;

--
-- Name: bufr_code_033023; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033023 (
    id bigint DEFAULT nextval(('public.bufr_code_033023_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_033023 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033023; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033023 IS 'Кодовая таблица 033023 - Качество местоположения буя';


--
-- Name: COLUMN bufr_code_033023.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033023.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_033023.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033023.description IS 'Описание';


--
-- Name: bufr_code_033023_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033023_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033023_seq OWNER TO postgres;

--
-- Name: bufr_code_033024; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033024 (
    id bigint DEFAULT nextval(('public.bufr_code_033024_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_033024 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033024; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033024 IS 'Кодовая таблица 033024 - Отметка качества превышения станции (для подвижных станций)';


--
-- Name: COLUMN bufr_code_033024.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033024.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_033024.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033024.description IS 'Описание';


--
-- Name: bufr_code_033024_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033024_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033024_seq OWNER TO postgres;

--
-- Name: bufr_code_033025; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033025 (
    id bigint DEFAULT nextval(('public.bufr_code_033025_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_033025 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033025; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033025 IS 'Кодовая таблица 033025 - Указатель интерполированных значений ACARS';


--
-- Name: COLUMN bufr_code_033025.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033025.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_033025.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033025.description IS 'Описание';


--
-- Name: bufr_code_033025_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033025_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033025_seq OWNER TO postgres;

--
-- Name: bufr_code_033026; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033026 (
    id bigint DEFAULT nextval(('public.bufr_code_033026_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_033026 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033026; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033026 IS 'Кодовая таблица 033026 - Качество данных о влажности';


--
-- Name: COLUMN bufr_code_033026.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033026.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_033026.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033026.description IS 'Описание';


--
-- Name: bufr_code_033026_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033026_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033026_seq OWNER TO postgres;

--
-- Name: bufr_code_033027; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033027 (
    id bigint DEFAULT nextval(('public.bufr_code_033027_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_033027 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033027; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033027 IS 'Кодовая таблица 033027 - Класс качества местоположения (длина радиуса с достоверностью в 66 %)';


--
-- Name: COLUMN bufr_code_033027.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033027.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_033027.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033027.description IS 'Описание';


--
-- Name: bufr_code_033027_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033027_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033027_seq OWNER TO postgres;

--
-- Name: bufr_code_033028; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033028 (
    id bigint DEFAULT nextval(('public.bufr_code_033028_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_033028 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033028; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033028 IS 'Кодовая таблица 033028 - Общее качество моментального снимка';


--
-- Name: COLUMN bufr_code_033028.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033028.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_033028.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033028.description IS 'Описание';


--
-- Name: bufr_code_033028_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033028_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033028_seq OWNER TO postgres;

--
-- Name: bufr_code_033030; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033030 (
    id bigint DEFAULT nextval(('public.bufr_code_033030_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_033030 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033030; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033030 IS 'Кодовая таблица 033030 - Флаги статуса сканирующей строки ATOVS';


--
-- Name: COLUMN bufr_code_033030.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033030.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_033030.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033030.description IS 'Описание';


--
-- Name: bufr_code_033030_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033030_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033030_seq OWNER TO postgres;

--
-- Name: bufr_code_033031; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033031 (
    id bigint DEFAULT nextval(('public.bufr_code_033031_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_033031 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033031; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033031 IS 'Кодовая таблица 033031 - Флаги качества сканирующей строки ATOVS';


--
-- Name: COLUMN bufr_code_033031.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033031.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_033031.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033031.description IS 'Описание';


--
-- Name: bufr_code_033031_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033031_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033031_seq OWNER TO postgres;

--
-- Name: bufr_code_033032; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033032 (
    id bigint DEFAULT nextval(('public.bufr_code_033032_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_033032 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033032; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033032 IS 'Кодовая таблица 033032 - Флаги качества каналов ATOVS';


--
-- Name: COLUMN bufr_code_033032.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033032.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_033032.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033032.description IS 'Описание';


--
-- Name: bufr_code_033032_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033032_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033032_seq OWNER TO postgres;

--
-- Name: bufr_code_033033; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033033 (
    id bigint DEFAULT nextval(('public.bufr_code_033033_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_033033 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033033; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033033 IS 'Кодовая таблица 033033 - Флаги качества поля зрения ATOVS';


--
-- Name: COLUMN bufr_code_033033.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033033.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_033033.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033033.description IS 'Описание';


--
-- Name: bufr_code_033033_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033033_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033033_seq OWNER TO postgres;

--
-- Name: bufr_code_033035; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033035 (
    id bigint DEFAULT nextval(('public.bufr_code_033035_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_033035 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033035; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033035 IS 'Кодовая таблица 033035 - Ручной/автоматический контроль качества';


--
-- Name: COLUMN bufr_code_033035.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033035.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_033035.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033035.description IS 'Описание';


--
-- Name: bufr_code_033035_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033035_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033035_seq OWNER TO postgres;

--
-- Name: bufr_code_033037; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033037 (
    id bigint DEFAULT nextval(('public.bufr_code_033037_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_033037 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033037; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033037 IS 'Кодовая таблица 033037 - Коэффициент корреляции ветра';


--
-- Name: COLUMN bufr_code_033037.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033037.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_033037.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033037.description IS 'Описание';


--
-- Name: bufr_code_033037_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033037_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033037_seq OWNER TO postgres;

--
-- Name: bufr_code_033038; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033038 (
    id bigint DEFAULT nextval(('public.bufr_code_033038_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_033038 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033038; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033038 IS 'Кодовая таблица 033038 - Флаги качества для данных наземных ГНСС*';


--
-- Name: COLUMN bufr_code_033038.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033038.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_033038.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033038.description IS 'Описание';


--
-- Name: bufr_code_033038_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033038_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033038_seq OWNER TO postgres;

--
-- Name: bufr_code_033039; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033039 (
    id bigint DEFAULT nextval(('public.bufr_code_033039_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_033039 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033039; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033039 IS 'Кодовая таблица 033039 - Флаги качества для данных о радиозатмении';


--
-- Name: COLUMN bufr_code_033039.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033039.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_033039.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033039.description IS 'Описание';


--
-- Name: bufr_code_033039_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033039_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033039_seq OWNER TO postgres;

--
-- Name: bufr_code_033041; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033041 (
    id bigint DEFAULT nextval(('public.bufr_code_033041_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_033041 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033041; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033041 IS 'Кодовая таблица 033041 - Атрибут следующего значения';


--
-- Name: COLUMN bufr_code_033041.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033041.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_033041.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033041.description IS 'Описание';


--
-- Name: bufr_code_033041_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033041_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033041_seq OWNER TO postgres;

--
-- Name: bufr_code_033042; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033042 (
    id bigint DEFAULT nextval(('public.bufr_code_033042_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_033042 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033042; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033042 IS 'Кодовая таблица 033042 - Тип предела, представленный последующим значением';


--
-- Name: COLUMN bufr_code_033042.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033042.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_033042.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033042.description IS 'Описание';


--
-- Name: bufr_code_033042_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033042_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033042_seq OWNER TO postgres;

--
-- Name: bufr_code_033043; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033043 (
    id bigint DEFAULT nextval(('public.bufr_code_033043_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_033043 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033043; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033043 IS 'Кодовая таблица 033043 - Достоверность AST (средняя температура поверхности)';


--
-- Name: COLUMN bufr_code_033043.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033043.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_033043.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033043.description IS 'Описание';


--
-- Name: bufr_code_033043_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033043_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033043_seq OWNER TO postgres;

--
-- Name: bufr_code_033044; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033044 (
    id bigint DEFAULT nextval(('public.bufr_code_033044_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_033044 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033044; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033044 IS 'Кодовая таблица 033044 - Информация о качестве данных ASAR (усовершенствованный радиолокатор с синтезированной апертурой)';


--
-- Name: COLUMN bufr_code_033044.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033044.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_033044.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033044.description IS 'Описание';


--
-- Name: bufr_code_033044_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033044_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033044_seq OWNER TO postgres;

--
-- Name: bufr_code_033047; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033047 (
    id bigint DEFAULT nextval(('public.bufr_code_033047_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_033047 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033047; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033047 IS 'Кодовая таблица 033047 - Данные о достоверности измерений';


--
-- Name: COLUMN bufr_code_033047.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033047.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_033047.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033047.description IS 'Описание';


--
-- Name: bufr_code_033047_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033047_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033047_seq OWNER TO postgres;

--
-- Name: bufr_code_033048; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033048 (
    id bigint DEFAULT nextval(('public.bufr_code_033048_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_033048 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033048; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033048 IS 'Кодовая таблица 033048 - Мера достоверности инверсии РСА*';


--
-- Name: COLUMN bufr_code_033048.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033048.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_033048.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033048.description IS 'Описание';


--
-- Name: bufr_code_033048_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033048_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033048_seq OWNER TO postgres;

--
-- Name: bufr_code_033049; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033049 (
    id bigint DEFAULT nextval(('public.bufr_code_033049_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_033049 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033049; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033049 IS 'Кодовая таблица 033049 - Мера достоверности восстановленного значения ветра';


--
-- Name: COLUMN bufr_code_033049.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033049.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_033049.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033049.description IS 'Описание';


--
-- Name: bufr_code_033049_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033049_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033049_seq OWNER TO postgres;

--
-- Name: bufr_code_033050; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033050 (
    id bigint DEFAULT nextval(('public.bufr_code_033050_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_033050 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033050; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033050 IS 'Кодовая таблица 033050 - Общий флаг качества ГТСПП';


--
-- Name: COLUMN bufr_code_033050.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033050.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_033050.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033050.description IS 'Описание';


--
-- Name: bufr_code_033050_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033050_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033050_seq OWNER TO postgres;

--
-- Name: bufr_code_033052; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033052 (
    id bigint DEFAULT nextval(('public.bufr_code_033052_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_033052 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033052; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033052 IS 'Кодовая таблица 033052 - Качество вторичного прослеживания океана в полосе частот S';


--
-- Name: COLUMN bufr_code_033052.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033052.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_033052.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033052.description IS 'Описание';


--
-- Name: bufr_code_033052_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033052_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033052_seq OWNER TO postgres;

--
-- Name: bufr_code_033053; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033053 (
    id bigint DEFAULT nextval(('public.bufr_code_033053_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_033053 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033053; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033053 IS 'Кодовая таблица 033053 - Качество вторичного прослеживания океана в полосе частот Ku';


--
-- Name: COLUMN bufr_code_033053.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033053.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_033053.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033053.description IS 'Описание';


--
-- Name: bufr_code_033053_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033053_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033053_seq OWNER TO postgres;

--
-- Name: bufr_code_033060; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033060 (
    id bigint DEFAULT nextval(('public.bufr_code_033060_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_033060 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033060; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033060 IS 'Кодовая таблица 033060 - GqisFlagQual — индивидуальный флаг качества системы IASI';


--
-- Name: COLUMN bufr_code_033060.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033060.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_033060.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033060.description IS 'Описание';


--
-- Name: bufr_code_033060_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033060_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033060_seq OWNER TO postgres;

--
-- Name: bufr_code_033070; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033070 (
    id bigint DEFAULT nextval(('public.bufr_code_033070_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_033070 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033070; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033070 IS 'Кодовая таблица 033070 - Качество измерений общего содержания озона';


--
-- Name: COLUMN bufr_code_033070.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033070.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_033070.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033070.description IS 'Описание';


--
-- Name: bufr_code_033070_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033070_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033070_seq OWNER TO postgres;

--
-- Name: bufr_code_033071; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033071 (
    id bigint DEFAULT nextval(('public.bufr_code_033071_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_033071 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033071; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033071 IS 'Кодовая таблица 033071 - Качество измерений профиля озона';


--
-- Name: COLUMN bufr_code_033071.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033071.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_033071.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033071.description IS 'Описание';


--
-- Name: bufr_code_033071_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033071_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033071_seq OWNER TO postgres;

--
-- Name: bufr_code_033072; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033072 (
    id bigint DEFAULT nextval(('public.bufr_code_033072_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_033072 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033072; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033072 IS 'Кодовая таблица 033072 - Ошибка в измерении озона';


--
-- Name: COLUMN bufr_code_033072.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033072.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_033072.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033072.description IS 'Описание';


--
-- Name: bufr_code_033072_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033072_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033072_seq OWNER TO postgres;

--
-- Name: bufr_code_033075; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033075 (
    id bigint DEFAULT nextval(('public.bufr_code_033075_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_033075 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033075; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033075 IS 'Кодовая таблица 033075 - Флаги качества на уровне сканирования';


--
-- Name: COLUMN bufr_code_033075.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033075.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_033075.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033075.description IS 'Описание';


--
-- Name: bufr_code_033075_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033075_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033075_seq OWNER TO postgres;

--
-- Name: bufr_code_033076; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033076 (
    id bigint DEFAULT nextval(('public.bufr_code_033076_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_033076 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033076; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033076 IS 'Кодовая таблица 033076 - Флаги качества калибровки';


--
-- Name: COLUMN bufr_code_033076.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033076.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_033076.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033076.description IS 'Описание';


--
-- Name: bufr_code_033076_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033076_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033076_seq OWNER TO postgres;

--
-- Name: bufr_code_033077; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033077 (
    id bigint DEFAULT nextval(('public.bufr_code_033077_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_033077 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033077; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033077 IS 'Кодовая таблица 033077 - Флаги качества поля зрения';


--
-- Name: COLUMN bufr_code_033077.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033077.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_033077.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033077.description IS 'Описание';


--
-- Name: bufr_code_033077_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033077_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033077_seq OWNER TO postgres;

--
-- Name: bufr_code_033078; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033078 (
    id bigint DEFAULT nextval(('public.bufr_code_033078_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_033078 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033078; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033078 IS 'Кодовая таблица 033078 - Качество геоположения';


--
-- Name: COLUMN bufr_code_033078.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033078.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_033078.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033078.description IS 'Описание';


--
-- Name: bufr_code_033078_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033078_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033078_seq OWNER TO postgres;

--
-- Name: bufr_code_033079; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033079 (
    id bigint DEFAULT nextval(('public.bufr_code_033079_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_033079 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033079; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033079 IS 'Кодовая таблица 033079 - Флаги качества на уровне гранул';


--
-- Name: COLUMN bufr_code_033079.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033079.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_033079.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033079.description IS 'Описание';


--
-- Name: bufr_code_033079_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033079_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033079_seq OWNER TO postgres;

--
-- Name: bufr_code_033080; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033080 (
    id bigint DEFAULT nextval(('public.bufr_code_033080_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_033080 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033080; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033080 IS 'Кодовая таблица 033080 - Флаги качества на уровне сканирования';


--
-- Name: COLUMN bufr_code_033080.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033080.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_033080.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033080.description IS 'Описание';


--
-- Name: bufr_code_033080_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033080_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033080_seq OWNER TO postgres;

--
-- Name: bufr_code_033081; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033081 (
    id bigint DEFAULT nextval(('public.bufr_code_033081_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_033081 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033081; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033081 IS 'Кодовая таблица 033081 - Флаги качества данных канала';


--
-- Name: COLUMN bufr_code_033081.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033081.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_033081.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033081.description IS 'Описание';


--
-- Name: bufr_code_033081_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033081_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033081_seq OWNER TO postgres;

--
-- Name: bufr_code_033082; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033082 (
    id bigint DEFAULT nextval(('public.bufr_code_033082_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_033082 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033082; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033082 IS 'Кодовая таблица 033082 - Флаги качества геоположения';


--
-- Name: COLUMN bufr_code_033082.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033082.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_033082.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033082.description IS 'Описание';


--
-- Name: bufr_code_033082_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033082_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033082_seq OWNER TO postgres;

--
-- Name: bufr_code_033083; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033083 (
    id bigint DEFAULT nextval(('public.bufr_code_033083_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_033083 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033083; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033083 IS 'Кодовая таблица 033083 - Флаги качества данных по излучению';


--
-- Name: COLUMN bufr_code_033083.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033083.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_033083.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033083.description IS 'Описание';


--
-- Name: bufr_code_033083_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033083_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033083_seq OWNER TO postgres;

--
-- Name: bufr_code_033084; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033084 (
    id bigint DEFAULT nextval(('public.bufr_code_033084_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_033084 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033084; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033084 IS 'Кодовая таблица 033084 - Флаг качества уровня элемента изображения';


--
-- Name: COLUMN bufr_code_033084.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033084.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_033084.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033084.description IS 'Описание';


--
-- Name: bufr_code_033084_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033084_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033084_seq OWNER TO postgres;

--
-- Name: bufr_code_033086; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_033086 (
    id bigint DEFAULT nextval(('public.bufr_code_033086_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_033086 OWNER TO postgres;

--
-- Name: TABLE bufr_code_033086; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_033086 IS 'Кодовая таблица 033086 - Качество воспроизведения на уровне элемента изображения';


--
-- Name: COLUMN bufr_code_033086.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033086.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_033086.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_033086.description IS 'Описание';


--
-- Name: bufr_code_033086_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_033086_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_033086_seq OWNER TO postgres;

--
-- Name: bufr_code_035000; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_035000 (
    id bigint DEFAULT nextval(('public.bufr_code_035000_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_035000 OWNER TO postgres;

--
-- Name: TABLE bufr_code_035000; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_035000 IS 'Кодовая таблица 035000 - FM и номер регионального кода';


--
-- Name: COLUMN bufr_code_035000.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_035000.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_035000.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_035000.description IS 'Описание';


--
-- Name: bufr_code_035000_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_035000_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_035000_seq OWNER TO postgres;

--
-- Name: bufr_code_035001; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_035001 (
    id bigint DEFAULT nextval(('public.bufr_code_035001_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_035001 OWNER TO postgres;

--
-- Name: TABLE bufr_code_035001; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_035001 IS 'Кодовая таблица 035001 - Временной период для мониторинга';


--
-- Name: COLUMN bufr_code_035001.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_035001.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_035001.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_035001.description IS 'Описание';


--
-- Name: bufr_code_035001_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_035001_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_035001_seq OWNER TO postgres;

--
-- Name: bufr_code_035030; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_035030 (
    id bigint DEFAULT nextval(('public.bufr_code_035030_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_035030 OWNER TO postgres;

--
-- Name: TABLE bufr_code_035030; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_035030 IS 'Кодовая таблица 035030 - Несоответствия в поступлении ожидаемых данных';


--
-- Name: COLUMN bufr_code_035030.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_035030.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_035030.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_035030.description IS 'Описание';


--
-- Name: bufr_code_035030_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_035030_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_035030_seq OWNER TO postgres;

--
-- Name: bufr_code_035031; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_035031 (
    id bigint DEFAULT nextval(('public.bufr_code_035031_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_035031 OWNER TO postgres;

--
-- Name: TABLE bufr_code_035031; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_035031 IS 'Кодовая таблица 035031 - Показатель оценки результатов мониторинга';


--
-- Name: COLUMN bufr_code_035031.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_035031.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_035031.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_035031.description IS 'Описание';


--
-- Name: bufr_code_035031_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_035031_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_035031_seq OWNER TO postgres;

--
-- Name: bufr_code_035032; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_035032 (
    id bigint DEFAULT nextval(('public.bufr_code_035032_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_035032 OWNER TO postgres;

--
-- Name: TABLE bufr_code_035032; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_035032 IS 'Кодовая таблица 035032 - Причина отсутствия данных';


--
-- Name: COLUMN bufr_code_035032.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_035032.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_035032.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_035032.description IS 'Описание';


--
-- Name: bufr_code_035032_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_035032_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_035032_seq OWNER TO postgres;

--
-- Name: bufr_code_035033; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_035033 (
    id bigint DEFAULT nextval(('public.bufr_code_035033_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_035033 OWNER TO postgres;

--
-- Name: TABLE bufr_code_035033; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_035033 IS 'Кодовая таблица 035033 - Недостатки в наблюдениях и сборе данных';


--
-- Name: COLUMN bufr_code_035033.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_035033.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_035033.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_035033.description IS 'Описание';


--
-- Name: bufr_code_035033_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_035033_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_035033_seq OWNER TO postgres;

--
-- Name: bufr_code_035034; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_035034 (
    id bigint DEFAULT nextval(('public.bufr_code_035034_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_035034 OWNER TO postgres;

--
-- Name: TABLE bufr_code_035034; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_035034 IS 'Кодовая таблица 035034 - Статистические тенденции в отношении наличия данных (в течение периода(ов) обзора)';


--
-- Name: COLUMN bufr_code_035034.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_035034.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_035034.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_035034.description IS 'Описание';


--
-- Name: bufr_code_035034_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_035034_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_035034_seq OWNER TO postgres;

--
-- Name: bufr_code_035035; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_035035 (
    id bigint DEFAULT nextval(('public.bufr_code_035035_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_035035 OWNER TO postgres;

--
-- Name: TABLE bufr_code_035035; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_035035 IS 'Кодовая таблица 035035 - Причина прекращения полета';


--
-- Name: COLUMN bufr_code_035035.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_035035.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_035035.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_035035.description IS 'Описание';


--
-- Name: bufr_code_035035_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_035035_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_035035_seq OWNER TO postgres;

--
-- Name: bufr_code_040005; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_040005 (
    id bigint DEFAULT nextval(('public.bufr_code_040005_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_040005 OWNER TO postgres;

--
-- Name: TABLE bufr_code_040005; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_040005 IS 'Кодовая таблица 040005 - Флаг коррекции влажности почвы';


--
-- Name: COLUMN bufr_code_040005.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_040005.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_040005.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_040005.description IS 'Описание';


--
-- Name: bufr_code_040005_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_040005_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_040005_seq OWNER TO postgres;

--
-- Name: bufr_code_040006; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_040006 (
    id bigint DEFAULT nextval(('public.bufr_code_040006_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_040006 OWNER TO postgres;

--
-- Name: TABLE bufr_code_040006; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_040006 IS 'Кодовая таблица 040006 - Флаг обработки влажности почвы';


--
-- Name: COLUMN bufr_code_040006.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_040006.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_040006.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_040006.description IS 'Описание';


--
-- Name: bufr_code_040006_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_040006_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_040006_seq OWNER TO postgres;

--
-- Name: bufr_code_040011; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_040011 (
    id bigint DEFAULT nextval(('public.bufr_code_040011_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_040011 OWNER TO postgres;

--
-- Name: TABLE bufr_code_040011; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_040011 IS 'Кодовая таблица 040011 - Флаг интерполяции';


--
-- Name: COLUMN bufr_code_040011.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_040011.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_040011.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_040011.description IS 'Описание';


--
-- Name: bufr_code_040011_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_040011_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_040011_seq OWNER TO postgres;

--
-- Name: bufr_code_040012; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_040012 (
    id bigint DEFAULT nextval(('public.bufr_code_040012_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_040012 OWNER TO postgres;

--
-- Name: TABLE bufr_code_040012; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_040012 IS 'Кодовая таблица 040012 - Флаг качества данных радиометра';


--
-- Name: COLUMN bufr_code_040012.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_040012.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_040012.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_040012.description IS 'Описание';


--
-- Name: bufr_code_040012_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_040012_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_040012_seq OWNER TO postgres;

--
-- Name: bufr_code_040013; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_040013 (
    id bigint DEFAULT nextval(('public.bufr_code_040013_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_040013 OWNER TO postgres;

--
-- Name: TABLE bufr_code_040013; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_040013 IS 'Кодовая таблица 040013 - Флаг интерпретации яркостной температуры, измеренной с помощью радиометра';


--
-- Name: COLUMN bufr_code_040013.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_040013.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_040013.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_040013.description IS 'Описание';


--
-- Name: bufr_code_040013_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_040013_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_040013_seq OWNER TO postgres;

--
-- Name: bufr_code_040020; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_040020 (
    id bigint DEFAULT nextval(('public.bufr_code_040020_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_040020 OWNER TO postgres;

--
-- Name: TABLE bufr_code_040020; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_040020 IS 'Кодовая таблица 040020 - GqisFlagQualDetailed — Флаг качества для системы';


--
-- Name: COLUMN bufr_code_040020.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_040020.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_040020.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_040020.description IS 'Описание';


--
-- Name: bufr_code_040020_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_040020_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_040020_seq OWNER TO postgres;

--
-- Name: bufr_code_040023; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_040023 (
    id bigint DEFAULT nextval(('public.bufr_code_040023_seq'::text)::regclass) NOT NULL,
    bit_number integer,
    description text
);


ALTER TABLE public.bufr_code_040023 OWNER TO postgres;

--
-- Name: TABLE bufr_code_040023; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_040023 IS 'Кодовая таблица 040023 - Вспомогательные флаги состояния альтиметра';


--
-- Name: COLUMN bufr_code_040023.bit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_040023.bit_number IS 'Номер бита';


--
-- Name: COLUMN bufr_code_040023.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_040023.description IS 'Описание';


--
-- Name: bufr_code_040023_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_040023_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_040023_seq OWNER TO postgres;

--
-- Name: bufr_code_040024; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_040024 (
    id bigint DEFAULT nextval(('public.bufr_code_040024_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_040024 OWNER TO postgres;

--
-- Name: TABLE bufr_code_040024; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_040024 IS 'Кодовая таблица 040024 - Наличие метеорологической карты';


--
-- Name: COLUMN bufr_code_040024.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_040024.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_040024.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_040024.description IS 'Описание';


--
-- Name: bufr_code_040024_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_040024_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_040024_seq OWNER TO postgres;

--
-- Name: bufr_code_040025; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_code_040025 (
    id bigint DEFAULT nextval(('public.bufr_code_040025_seq'::text)::regclass) NOT NULL,
    code integer,
    description text
);


ALTER TABLE public.bufr_code_040025 OWNER TO postgres;

--
-- Name: TABLE bufr_code_040025; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_code_040025 IS 'Кодовая таблица 040025 - Флаг интерполяции для среднего значения величины суточного прилива';


--
-- Name: COLUMN bufr_code_040025.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_040025.code IS 'Кодовая цифра';


--
-- Name: COLUMN bufr_code_040025.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_code_040025.description IS 'Описание';


--
-- Name: bufr_code_040025_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_code_040025_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_code_040025_seq OWNER TO postgres;

--
-- Name: bufr_codes; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bufr_codes (
    id bigint DEFAULT nextval(('public.bufr_codes_seq'::text)::regclass) NOT NULL,
    table_name text,
    description text,
    table_code text
);


ALTER TABLE public.bufr_codes OWNER TO postgres;

--
-- Name: TABLE bufr_codes; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bufr_codes IS 'Список всех кодовых таблиц bufr - названия с расшифровкой';


--
-- Name: COLUMN bufr_codes.table_name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_codes.table_name IS 'Название таблицы в БД';


--
-- Name: COLUMN bufr_codes.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_codes.description IS 'Текстовое описание (название таблицы)';


--
-- Name: COLUMN bufr_codes.table_code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bufr_codes.table_code IS 'Шестизначный код таблицы';


--
-- Name: bufr_codes_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE bufr_codes_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bufr_codes_seq OWNER TO postgres;

--
-- Data for Name: bufr_code_001003; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_001003 (id, code, description) FROM stdin;
1	0	Антарктика
2	1	Регион I
3	2	Регион II
4	3	Регион III
5	4	Регион IV
6	5	Регион V
7	6	Регион VI
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_001003_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_001003_seq', 8, true);


--
-- Data for Name: bufr_code_001024; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_001024 (id, code, description) FROM stdin;
1	0	Отсутствие данных о скорости ветра
2	1	Данные AMSR-E
3	2	Данные TMI
4	3	ЧПП: ЕЦСПП
5	4	ЧПП: Метеобюро СК
6	5	ЧПП: НЦПОС
7	6	Справочная климатология
8	7	Скаттерометр на борту ЕРС
9	8	Зарезервировано для дальнейшего использования
10	9	Зарезервировано для дальнейшего использования
11	10	Зарезервировано для дальнейшего использования
12	11	Зарезервировано для дальнейшего использования
13	12	Зарезервировано для дальнейшего использования
14	13	Зарезервировано для дальнейшего использования
15	14	Зарезервировано для дальнейшего использования
16	15	Зарезервировано для дальнейшего использования
17	16	Зарезервировано для дальнейшего использования
18	17	Зарезервировано для дальнейшего использования
19	18	Зарезервировано для дальнейшего использования
20	19	Зарезервировано для дальнейшего использования
21	20	Зарезервировано для дальнейшего использования
22	21	Зарезервировано для дальнейшего использования
23	22	Зарезервировано для дальнейшего использования
24	23	Зарезервировано для дальнейшего использования
25	24	Зарезервировано для дальнейшего использования
26	25	Зарезервировано для дальнейшего использования
27	26	Зарезервировано для дальнейшего использования
28	27	Зарезервировано для дальнейшего использования
29	28	Зарезервировано для дальнейшего использования
30	29	Зарезервировано для дальнейшего использования
31	30	Зарезервировано для дальнейшего использования
32	31	Отсутствующее значение
\.


--
-- Name: bufr_code_001024_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_001024_seq', 32, true);


--
-- Data for Name: bufr_code_001028; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_001028 (id, code, description) FROM stdin;
1	0	Отсутствие данных об ОПА
2	1	НЕСДИС
3	2	НАВОКЕАНО
4	3	НААПС
5	4	MERIS
6	5	AATSR
7	6	Зарезервировано для дальнейшего использования
8	7	Зарезервировано для дальнейшего использования
9	8	Зарезервировано для дальнейшего использования
10	9	Зарезервировано для дальнейшего использования
11	10	Зарезервировано для дальнейшего использования
12	11	Зарезервировано для дальнейшего использования
13	12	Зарезервировано для дальнейшего использования
14	13	Зарезервировано для дальнейшего использования
15	14	Зарезервировано для дальнейшего использования
16	15	Зарезервировано для дальнейшего использования
17	16	Зарезервировано для дальнейшего использования
18	17	Зарезервировано для дальнейшего использования
19	18	Зарезервировано для дальнейшего использования
20	19	Зарезервировано для дальнейшего использования
21	20	Зарезервировано для дальнейшего использования
22	21	Зарезервировано для дальнейшего использования
23	22	Зарезервировано для дальнейшего использования
24	23	Зарезервировано для дальнейшего использования
25	24	Зарезервировано для дальнейшего использования
26	25	Зарезервировано для дальнейшего использования
27	26	Зарезервировано для дальнейшего использования
28	27	Зарезервировано для дальнейшего использования
29	28	Зарезервировано для дальнейшего использования
30	29	Зарезервировано для дальнейшего использования
31	30	Зарезервировано для дальнейшего использования
32	31	Отсутствующее значение
\.


--
-- Name: bufr_code_001028_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_001028_seq', 32, true);


--
-- Data for Name: bufr_code_001029; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_001029 (id, code, description) FROM stdin;
1	0	Отсутствие данных о ПСИ
2	1	SEVIRI на борту МВП
3	2	ГОЕС Восток
4	3	ГОЕС Запад
5	4	ЕЦСПП**
6	5	НЦПОС
7	6	Метеобюро СК
8	7	Зарезервировано для дальнейшего использования
9	8	Зарезервировано для дальнейшего использования
10	9	Зарезервировано для дальнейшего использования
11	10	Зарезервировано для дальнейшего использования
12	11	Зарезервировано для дальнейшего использования
13	12	Зарезервировано для дальнейшего использования
14	13	Зарезервировано для дальнейшего использования
15	14	Зарезервировано для дальнейшего использования
16	15	Зарезервировано для дальнейшего использования
17	16	Зарезервировано для дальнейшего использования
18	17	Зарезервировано для дальнейшего использования
19	18	Зарезервировано для дальнейшего использования
20	19	Зарезервировано для дальнейшего использования
21	20	Зарезервировано для дальнейшего использования
22	21	Зарезервировано для дальнейшего использования
23	22	Зарезервировано для дальнейшего использования
24	23	Зарезервировано для дальнейшего использования
25	24	Зарезервировано для дальнейшего использования
26	25	Зарезервировано для дальнейшего использования
27	26	Зарезервировано для дальнейшего использования
28	27	Зарезервировано для дальнейшего использования
29	28	Зарезервировано для дальнейшего использования
30	29	Зарезервировано для дальнейшего использования
31	30	Зарезервировано для дальнейшего использования
32	31	Отсутствующее значение
\.


--
-- Name: bufr_code_001029_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_001029_seq', 32, true);


--
-- Data for Name: bufr_code_001036; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_001036 (id, code, description) FROM stdin;
1	36001	Австралия, Бюро метеорологии (АБМ)
2	36002	Австралия, Совместный австралийский фонд для систем наблюдения за океаном (JAFOOS)
3	36003	Австралия, Организация по научным и промышленным исследованиям для стран Содружества (КСИРО)
4	124001	Канада, Служба данных по морской окружающей среде (МЕДС)
5	124002	Канада, Институт океанологии (IOS)
6	156001	Китай, Государственное управление по океанам
7	156002	Китай, Второй институт океанографии, Государственное управление по океанам
8	156003	Китай, Институт технологий, связанных с океаном
9	250001	Франция, Научно-исследовательский институт для целей развития (IRD)
10	250002	Франция, Французский научно-исследовательский институт по изучению морей (IFREMER)
11	276001	Германия, Федеральное морское и гидрографическое агентство (BSH)
12	276002	Германия, Институт морских исследований Кильского университета
13	356001	Индия, Национальный институт океанографии (NIO)
14	356002	Индия, Национальный институт технологий, связанных с океаном (NIOТ)
15	356003	Индия, Национальный центр службы информации об океане
16	392001	Япония, Японское метеорологическое агентство (ЯМА)
17	392002	Япония, Передовая система наблюдений и исследований глобальных изменений
18	392003	Япония, Японский морской научно-технологический центр (JAMSTEC)
19	410001	Республика Корея, Сеульский национальный университет
20	410002	Республика Корея, Корейский институт научных исследований и освоения океана (KORDI)
21	410003	Республика Корея, Метеорологический научно-исследовательский институт
22	540001	Новая Каледония, Научно-исследовательский институт для целей развития (IRD)
23	554001	Новая Зеландия, Национальный научно-исследовательский институт гидросферы и атмосферы (NIWA)
24	643001	Россия, Государственный океанографический институт Росгидромета
25	643002	Россия, Федеральная служба по гидрометеорологии и мониторингу окружающей среды
26	724001	Испания, Испанский институт океанографии
27	826001	Соединенное Королевство, Гидрографическое бюро
28	826002	Соединенное Королевство, Океанографический центр в Саутгемптоне (SOC)
29	8840001	США, Атлантическая океанографическая и метеорологическая лаборатории НУОА (AOML)
30	840002	США, Тихоокеанские лаборатории НУОА по морской окружающей среде (PMEL)
31	840003	США, Институт океанографии Скриппса (SIO)
32	840004	США, Океанографический институт в Вудс Холле (WHOI)
33	840005	США, Вашингтонский университет
34	840006	США, Военно-морское океанографическое бюро
35	1048575	Отсутствующее значение
\.


--
-- Name: bufr_code_001036_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_001036_seq', 35, true);


--
-- Data for Name: bufr_code_001038; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_001038 (id, code, description) FROM stdin;
1	0	Отсутствие набора данных по морскому льду
2	1	SSM/I Cavalieri НЦДСЛ* и др. (1992 г.)
3	2	AMSR-E
4	3	ЕЦСПП
5	4	Маска облачности ЦКМ** (Франция), используемая Medspiration
6	5	ОСИ-САФ*** ЕВМЕТСАТ
7	6	Зарезервировано для дальнейшего использования
8	7	Зарезервировано для дальнейшего использования
9	8	Зарезервировано для дальнейшего использования
10	9	Зарезервировано для дальнейшего использования
11	10	Зарезервировано для дальнейшего использования
12	11	Зарезервировано для дальнейшего использования
13	12	Зарезервировано для дальнейшего использования
14	13	Зарезервировано для дальнейшего использования
15	14	Зарезервировано для дальнейшего использования
16	15	Зарезервировано для дальнейшего использования
17	16	Зарезервировано для дальнейшего использования
18	17	Зарезервировано для дальнейшего использования
19	18	Зарезервировано для дальнейшего использования
20	19	Зарезервировано для дальнейшего использования
21	20	Зарезервировано для дальнейшего использования
22	21	Зарезервировано для дальнейшего использования
23	22	Зарезервировано для дальнейшего использования
24	23	Зарезервировано для дальнейшего использования
25	24	Зарезервировано для дальнейшего использования
26	25	Зарезервировано для дальнейшего использования
27	26	Зарезервировано для дальнейшего использования
28	27	Зарезервировано для дальнейшего использования
29	28	Зарезервировано для дальнейшего использования
30	29	Зарезервировано для дальнейшего использования
31	30	Зарезервировано для дальнейшего использования
32	31	Отсутствующее значение
\.


--
-- Name: bufr_code_001038_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_001038_seq', 32, true);


--
-- Data for Name: bufr_code_001052; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_001052 (id, code, description) FROM stdin;
1	0	Основной
2	1	Дополнительный
3	2	Зарезервировано
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_001052_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_001052_seq', 4, true);


--
-- Data for Name: bufr_code_001090; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_001090 (id, code, description) FROM stdin;
1	0	Прогнозирование с усредненной задержкой (LAF)
2	1	Метод корректировки развития
3	2	Сингулярные векторы
4	3	Циклы множественного анализа
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Зарезервировано
33	32	Зарезервировано
34	33	Зарезервировано
35	34	Зарезервировано
36	35	Зарезервировано
37	36	Зарезервировано
38	37	Зарезервировано
39	38	Зарезервировано
40	39	Зарезервировано
41	40	Зарезервировано
42	41	Зарезервировано
43	42	Зарезервировано
44	43	Зарезервировано
45	44	Зарезервировано
46	45	Зарезервировано
47	46	Зарезервировано
48	47	Зарезервировано
49	48	Зарезервировано
50	49	Зарезервировано
51	50	Зарезервировано
52	51	Зарезервировано
53	52	Зарезервировано
54	53	Зарезервировано
55	54	Зарезервировано
56	55	Зарезервировано
57	56	Зарезервировано
58	57	Зарезервировано
59	58	Зарезервировано
60	59	Зарезервировано
61	60	Зарезервировано
62	61	Зарезервировано
63	62	Зарезервировано
64	63	Зарезервировано
65	64	Зарезервировано
66	65	Зарезервировано
67	66	Зарезервировано
68	67	Зарезервировано
69	68	Зарезервировано
70	69	Зарезервировано
71	70	Зарезервировано
72	71	Зарезервировано
73	72	Зарезервировано
74	73	Зарезервировано
75	74	Зарезервировано
76	75	Зарезервировано
77	76	Зарезервировано
78	77	Зарезервировано
79	78	Зарезервировано
80	79	Зарезервировано
81	80	Зарезервировано
82	81	Зарезервировано
83	82	Зарезервировано
84	83	Зарезервировано
85	84	Зарезервировано
86	85	Зарезервировано
87	86	Зарезервировано
88	87	Зарезервировано
89	88	Зарезервировано
90	89	Зарезервировано
91	90	Зарезервировано
92	91	Зарезервировано
93	92	Зарезервировано
94	93	Зарезервировано
95	94	Зарезервировано
96	95	Зарезервировано
97	96	Зарезервировано
98	97	Зарезервировано
99	98	Зарезервировано
100	99	Зарезервировано
101	100	Зарезервировано
102	101	Зарезервировано
103	102	Зарезервировано
104	103	Зарезервировано
105	104	Зарезервировано
106	105	Зарезервировано
107	106	Зарезервировано
108	107	Зарезервировано
109	108	Зарезервировано
110	109	Зарезервировано
111	110	Зарезервировано
112	111	Зарезервировано
113	112	Зарезервировано
114	113	Зарезервировано
115	114	Зарезервировано
116	115	Зарезервировано
117	116	Зарезервировано
118	117	Зарезервировано
119	118	Зарезервировано
120	119	Зарезервировано
121	120	Зарезервировано
122	121	Зарезервировано
123	122	Зарезервировано
124	123	Зарезервировано
125	124	Зарезервировано
126	125	Зарезервировано
127	126	Зарезервировано
128	127	Зарезервировано
129	128	Зарезервировано
130	129	Зарезервировано
131	130	Зарезервировано
132	131	Зарезервировано
133	132	Зарезервировано
134	133	Зарезервировано
135	134	Зарезервировано
136	135	Зарезервировано
137	136	Зарезервировано
138	137	Зарезервировано
139	138	Зарезервировано
140	139	Зарезервировано
141	140	Зарезервировано
142	141	Зарезервировано
143	142	Зарезервировано
144	143	Зарезервировано
145	144	Зарезервировано
146	145	Зарезервировано
147	146	Зарезервировано
148	147	Зарезервировано
149	148	Зарезервировано
150	149	Зарезервировано
151	150	Зарезервировано
152	151	Зарезервировано
153	152	Зарезервировано
154	153	Зарезервировано
155	154	Зарезервировано
156	155	Зарезервировано
157	156	Зарезервировано
158	157	Зарезервировано
159	158	Зарезервировано
160	159	Зарезервировано
161	160	Зарезервировано
162	161	Зарезервировано
163	162	Зарезервировано
164	163	Зарезервировано
165	164	Зарезервировано
166	165	Зарезервировано
167	166	Зарезервировано
168	167	Зарезервировано
169	168	Зарезервировано
170	169	Зарезервировано
171	170	Зарезервировано
172	171	Зарезервировано
173	172	Зарезервировано
174	173	Зарезервировано
175	174	Зарезервировано
176	175	Зарезервировано
177	176	Зарезервировано
178	177	Зарезервировано
179	178	Зарезервировано
180	179	Зарезервировано
181	180	Зарезервировано
182	181	Зарезервировано
183	182	Зарезервировано
184	183	Зарезервировано
185	184	Зарезервировано
186	185	Зарезервировано
187	186	Зарезервировано
188	187	Зарезервировано
189	188	Зарезервировано
190	189	Зарезервировано
191	190	Зарезервировано
192	191	Зарезервировано
193	192	Зарезервировано для местного использования
194	193	Зарезервировано для местного использования
195	194	Зарезервировано для местного использования
196	195	Зарезервировано для местного использования
197	196	Зарезервировано для местного использования
198	197	Зарезервировано для местного использования
199	198	Зарезервировано для местного использования
200	199	Зарезервировано для местного использования
201	200	Зарезервировано для местного использования
202	201	Зарезервировано для местного использования
203	202	Зарезервировано для местного использования
204	203	Зарезервировано для местного использования
205	204	Зарезервировано для местного использования
206	205	Зарезервировано для местного использования
207	206	Зарезервировано для местного использования
208	207	Зарезервировано для местного использования
209	208	Зарезервировано для местного использования
210	209	Зарезервировано для местного использования
211	210	Зарезервировано для местного использования
212	211	Зарезервировано для местного использования
213	212	Зарезервировано для местного использования
214	213	Зарезервировано для местного использования
215	214	Зарезервировано для местного использования
216	215	Зарезервировано для местного использования
217	216	Зарезервировано для местного использования
218	217	Зарезервировано для местного использования
219	218	Зарезервировано для местного использования
220	219	Зарезервировано для местного использования
221	220	Зарезервировано для местного использования
222	221	Зарезервировано для местного использования
223	222	Зарезервировано для местного использования
224	223	Зарезервировано для местного использования
225	224	Зарезервировано для местного использования
226	225	Зарезервировано для местного использования
227	226	Зарезервировано для местного использования
228	227	Зарезервировано для местного использования
229	228	Зарезервировано для местного использования
230	229	Зарезервировано для местного использования
231	230	Зарезервировано для местного использования
232	231	Зарезервировано для местного использования
233	232	Зарезервировано для местного использования
234	233	Зарезервировано для местного использования
235	234	Зарезервировано для местного использования
236	235	Зарезервировано для местного использования
237	236	Зарезервировано для местного использования
238	237	Зарезервировано для местного использования
239	238	Зарезервировано для местного использования
240	239	Зарезервировано для местного использования
241	240	Зарезервировано для местного использования
242	241	Зарезервировано для местного использования
243	242	Зарезервировано для местного использования
244	243	Зарезервировано для местного использования
245	244	Зарезервировано для местного использования
246	245	Зарезервировано для местного использования
247	246	Зарезервировано для местного использования
248	247	Зарезервировано для местного использования
249	248	Зарезервировано для местного использования
250	249	Зарезервировано для местного использования
251	250	Зарезервировано для местного использования
252	251	Зарезервировано для местного использования
253	252	Зарезервировано для местного использования
254	253	Зарезервировано для местного использования
255	254	Зарезервировано для местного использования
256	255	Отсутствующее значение
\.


--
-- Name: bufr_code_001090_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_001090_seq', 256, true);


--
-- Data for Name: bufr_code_001092; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_001092 (id, code, description) FROM stdin;
1	0	Контрольный прогноз без возмущения с высоким разрешением
2	1	Контрольный прогноз без возмущения с низким разрешением
3	2	Прогноз с негативным возмущением
4	3	Прогноз с позитивным возмущением
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Зарезервировано
33	32	Зарезервировано
34	33	Зарезервировано
35	34	Зарезервировано
36	35	Зарезервировано
37	36	Зарезервировано
38	37	Зарезервировано
39	38	Зарезервировано
40	39	Зарезервировано
41	40	Зарезервировано
42	41	Зарезервировано
43	42	Зарезервировано
44	43	Зарезервировано
45	44	Зарезервировано
46	45	Зарезервировано
47	46	Зарезервировано
48	47	Зарезервировано
49	48	Зарезервировано
50	49	Зарезервировано
51	50	Зарезервировано
52	51	Зарезервировано
53	52	Зарезервировано
54	53	Зарезервировано
55	54	Зарезервировано
56	55	Зарезервировано
57	56	Зарезервировано
58	57	Зарезервировано
59	58	Зарезервировано
60	59	Зарезервировано
61	60	Зарезервировано
62	61	Зарезервировано
63	62	Зарезервировано
64	63	Зарезервировано
65	64	Зарезервировано
66	65	Зарезервировано
67	66	Зарезервировано
68	67	Зарезервировано
69	68	Зарезервировано
70	69	Зарезервировано
71	70	Зарезервировано
72	71	Зарезервировано
73	72	Зарезервировано
74	73	Зарезервировано
75	74	Зарезервировано
76	75	Зарезервировано
77	76	Зарезервировано
78	77	Зарезервировано
79	78	Зарезервировано
80	79	Зарезервировано
81	80	Зарезервировано
82	81	Зарезервировано
83	82	Зарезервировано
84	83	Зарезервировано
85	84	Зарезервировано
86	85	Зарезервировано
87	86	Зарезервировано
88	87	Зарезервировано
89	88	Зарезервировано
90	89	Зарезервировано
91	90	Зарезервировано
92	91	Зарезервировано
93	92	Зарезервировано
94	93	Зарезервировано
95	94	Зарезервировано
96	95	Зарезервировано
97	96	Зарезервировано
98	97	Зарезервировано
99	98	Зарезервировано
100	99	Зарезервировано
101	100	Зарезервировано
102	101	Зарезервировано
103	102	Зарезервировано
104	103	Зарезервировано
105	104	Зарезервировано
106	105	Зарезервировано
107	106	Зарезервировано
108	107	Зарезервировано
109	108	Зарезервировано
110	109	Зарезервировано
111	110	Зарезервировано
112	111	Зарезервировано
113	112	Зарезервировано
114	113	Зарезервировано
115	114	Зарезервировано
116	115	Зарезервировано
117	116	Зарезервировано
118	117	Зарезервировано
119	118	Зарезервировано
120	119	Зарезервировано
121	120	Зарезервировано
122	121	Зарезервировано
123	122	Зарезервировано
124	123	Зарезервировано
125	124	Зарезервировано
126	125	Зарезервировано
127	126	Зарезервировано
128	127	Зарезервировано
129	128	Зарезервировано
130	129	Зарезервировано
131	130	Зарезервировано
132	131	Зарезервировано
133	132	Зарезервировано
134	133	Зарезервировано
135	134	Зарезервировано
136	135	Зарезервировано
137	136	Зарезервировано
138	137	Зарезервировано
139	138	Зарезервировано
140	139	Зарезервировано
141	140	Зарезервировано
142	141	Зарезервировано
143	142	Зарезервировано
144	143	Зарезервировано
145	144	Зарезервировано
146	145	Зарезервировано
147	146	Зарезервировано
148	147	Зарезервировано
149	148	Зарезервировано
150	149	Зарезервировано
151	150	Зарезервировано
152	151	Зарезервировано
153	152	Зарезервировано
154	153	Зарезервировано
155	154	Зарезервировано
156	155	Зарезервировано
157	156	Зарезервировано
158	157	Зарезервировано
159	158	Зарезервировано
160	159	Зарезервировано
161	160	Зарезервировано
162	161	Зарезервировано
163	162	Зарезервировано
164	163	Зарезервировано
165	164	Зарезервировано
166	165	Зарезервировано
167	166	Зарезервировано
168	167	Зарезервировано
169	168	Зарезервировано
170	169	Зарезервировано
171	170	Зарезервировано
172	171	Зарезервировано
173	172	Зарезервировано
174	173	Зарезервировано
175	174	Зарезервировано
176	175	Зарезервировано
177	176	Зарезервировано
178	177	Зарезервировано
179	178	Зарезервировано
180	179	Зарезервировано
181	180	Зарезервировано
182	181	Зарезервировано
183	182	Зарезервировано
184	183	Зарезервировано
185	184	Зарезервировано
186	185	Зарезервировано
187	186	Зарезервировано
188	187	Зарезервировано
189	188	Зарезервировано
190	189	Зарезервировано
191	190	Зарезервировано
192	191	Зарезервировано
193	192	Зарезервировано для местного использования
194	193	Зарезервировано для местного использования
195	194	Зарезервировано для местного использования
196	195	Зарезервировано для местного использования
197	196	Зарезервировано для местного использования
198	197	Зарезервировано для местного использования
199	198	Зарезервировано для местного использования
200	199	Зарезервировано для местного использования
201	200	Зарезервировано для местного использования
202	201	Зарезервировано для местного использования
203	202	Зарезервировано для местного использования
204	203	Зарезервировано для местного использования
205	204	Зарезервировано для местного использования
206	205	Зарезервировано для местного использования
207	206	Зарезервировано для местного использования
208	207	Зарезервировано для местного использования
209	208	Зарезервировано для местного использования
210	209	Зарезервировано для местного использования
211	210	Зарезервировано для местного использования
212	211	Зарезервировано для местного использования
213	212	Зарезервировано для местного использования
214	213	Зарезервировано для местного использования
215	214	Зарезервировано для местного использования
216	215	Зарезервировано для местного использования
217	216	Зарезервировано для местного использования
218	217	Зарезервировано для местного использования
219	218	Зарезервировано для местного использования
220	219	Зарезервировано для местного использования
221	220	Зарезервировано для местного использования
222	221	Зарезервировано для местного использования
223	222	Зарезервировано для местного использования
224	223	Зарезервировано для местного использования
225	224	Зарезервировано для местного использования
226	225	Зарезервировано для местного использования
227	226	Зарезервировано для местного использования
228	227	Зарезервировано для местного использования
229	228	Зарезервировано для местного использования
230	229	Зарезервировано для местного использования
231	230	Зарезервировано для местного использования
232	231	Зарезервировано для местного использования
233	232	Зарезервировано для местного использования
234	233	Зарезервировано для местного использования
235	234	Зарезервировано для местного использования
236	235	Зарезервировано для местного использования
237	236	Зарезервировано для местного использования
238	237	Зарезервировано для местного использования
239	238	Зарезервировано для местного использования
240	239	Зарезервировано для местного использования
241	240	Зарезервировано для местного использования
242	241	Зарезервировано для местного использования
243	242	Зарезервировано для местного использования
244	243	Зарезервировано для местного использования
245	244	Зарезервировано для местного использования
246	245	Зарезервировано для местного использования
247	246	Зарезервировано для местного использования
248	247	Зарезервировано для местного использования
249	248	Зарезервировано для местного использования
250	249	Зарезервировано для местного использования
251	250	Зарезервировано для местного использования
252	251	Зарезервировано для местного использования
253	252	Зарезервировано для местного использования
254	253	Зарезервировано для местного использования
255	254	Зарезервировано для местного использования
256	255	Отсутствующее значение
\.


--
-- Name: bufr_code_001092_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_001092_seq', 256, true);


--
-- Data for Name: bufr_code_001101; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_001101 (id, code, description) FROM stdin;
1	0	Зарезервировано
2	1	Зарезервировано
3	2	Зарезервировано
4	3	Зарезервировано
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Зарезервировано
33	32	Зарезервировано
34	33	Зарезервировано
35	34	Зарезервировано
36	35	Зарезервировано
37	36	Зарезервировано
38	37	Зарезервировано
39	38	Зарезервировано
40	39	Зарезервировано
41	40	Зарезервировано
42	41	Зарезервировано
43	42	Зарезервировано
44	43	Зарезервировано
45	44	Зарезервировано
46	45	Зарезервировано
47	46	Зарезервировано
48	47	Зарезервировано
49	48	Зарезервировано
50	49	Зарезервировано
51	50	Зарезервировано
52	51	Зарезервировано
53	52	Зарезервировано
54	53	Зарезервировано
55	54	Зарезервировано
56	55	Зарезервировано
57	56	Зарезервировано
58	57	Зарезервировано
59	58	Зарезервировано
60	59	Зарезервировано
61	60	Зарезервировано
62	61	Зарезервировано
63	62	Зарезервировано
64	63	Зарезервировано
65	64	Зарезервировано
66	65	Зарезервировано
67	66	Зарезервировано
68	67	Зарезервировано
69	68	Зарезервировано
70	69	Зарезервировано
71	70	Зарезервировано
72	71	Зарезервировано
73	72	Зарезервировано
74	73	Зарезервировано
75	74	Зарезервировано
76	75	Зарезервировано
77	76	Зарезервировано
78	77	Зарезервировано
79	78	Зарезервировано
80	79	Зарезервировано
81	80	Зарезервировано
82	81	Зарезервировано
83	82	Зарезервировано
84	83	Зарезервировано
85	84	Зарезервировано
86	85	Зарезервировано
87	86	Зарезервировано
88	87	Зарезервировано
89	88	Зарезервировано
90	89	Зарезервировано
91	90	Зарезервировано
92	91	Зарезервировано
93	92	Зарезервировано
94	93	Зарезервировано
95	94	Зарезервировано
96	95	Зарезервировано
97	96	Зарезервировано
98	97	Зарезервировано
99	98	Зарезервировано
100	99	Зарезервировано
101	100	Алжир
102	101	Ангола
103	102	Бенин
104	103	Ботсвана
105	104	Буркина-Фасо
106	105	Бурунди
107	106	Камерун
108	107	Кабо-Верде
109	108	Центральноафриканская Республика
110	109	Чад
111	110	Коморские Острова
112	111	Конго
113	112	Кот-д’Ивуар
114	113	Демократическая Республика Конго
115	114	Джибути
116	115	Египет
117	116	Эритрея
118	117	Эфиопия
119	118	Франция (РА I)
120	119	Габон
121	120	Гамбия
122	121	Гана
123	122	Гвинея
124	123	Гвинея-Бисау
125	124	Кения
126	125	Лесото
127	126	Либерия
128	127	Ливия
129	128	Мадагаскар
130	129	Малави
131	130	Мали
132	131	Мавритания
133	132	Маврикий
134	133	Марокко
135	134	Мозамбик
136	135	Намибия
137	136	Нигер
138	137	Нигерия
139	138	Португалия (РА I)
140	139	Руанда
141	140	Сан-Томе и Принсипи
142	141	Сенегал
143	142	Сейшельские Острова
144	143	Сьерра-Леоне
145	144	Сомали
146	145	Южная Африка
147	146	Испания (РА I)
148	147	Судан
149	148	Свазиленд
150	149	Того
151	150	Тунис
152	151	Уганда
153	152	Соединенное Королевство Великобритании и Северной Ирландии (РА I)
154	153	Объединенная Республика Танзания
155	154	Замбия
156	155	Зимбабве
157	156	Зарезервировано для Региона I (Африка)
158	157	Зарезервировано для Региона I (Африка)
159	158	Зарезервировано для Региона I (Африка)
160	159	Зарезервировано для Региона I (Африка)
161	160	Зарезервировано для Региона I (Африка)
162	161	Зарезервировано для Региона I (Африка)
163	162	Зарезервировано для Региона I (Африка)
164	163	Зарезервировано для Региона I (Африка)
165	164	Зарезервировано для Региона I (Африка)
166	165	Зарезервировано для Региона I (Африка)
167	166	Зарезервировано для Региона I (Африка)
168	167	Зарезервировано для Региона I (Африка)
169	168	Зарезервировано для Региона I (Африка)
170	169	Зарезервировано для Региона I (Африка)
171	170	Зарезервировано для Региона I (Африка)
172	171	Зарезервировано для Региона I (Африка)
173	172	Зарезервировано для Региона I (Африка)
174	173	Зарезервировано для Региона I (Африка)
175	174	Зарезервировано для Региона I (Африка)
176	175	Зарезервировано для Региона I (Африка)
177	176	Зарезервировано для Региона I (Африка)
178	177	Зарезервировано для Региона I (Африка)
179	178	Зарезервировано для Региона I (Африка)
180	179	Зарезервировано для Региона I (Африка)
181	180	Зарезервировано для Региона I (Африка)
182	181	Зарезервировано для Региона I (Африка)
183	182	Зарезервировано для Региона I (Африка)
184	183	Зарезервировано для Региона I (Африка)
185	184	Зарезервировано для Региона I (Африка)
186	185	Зарезервировано для Региона I (Африка)
187	186	Зарезервировано для Региона I (Африка)
188	187	Зарезервировано для Региона I (Африка)
189	188	Зарезервировано для Региона I (Африка)
190	189	Зарезервировано для Региона I (Африка)
191	190	Зарезервировано для Региона I (Африка)
192	191	Зарезервировано для Региона I (Африка)
193	192	Зарезервировано для Региона I (Африка)
194	193	Зарезервировано для Региона I (Африка)
195	194	Зарезервировано для Региона I (Африка)
196	195	Зарезервировано для Региона I (Африка)
197	196	Зарезервировано для Региона I (Африка)
198	197	Зарезервировано для Региона I (Африка)
199	198	Зарезервировано для Региона I (Африка)
200	199	Зарезервировано для Региона I (Африка)
201	200	Афганистан
202	201	Бахрейн
203	202	Бангладеш
204	203	Бутан
205	204	Камбоджа
206	205	Китай
207	206	Корейская Народно-Демократическая Республика
208	207	Гонконг, Китай
209	208	Индия
210	209	Иран, Исламская Республика
211	210	Ирак
212	211	Япония
213	212	Казахстан
214	213	Кувейт
215	214	Кыргызстан
216	215	Лаосская Народно-Демократическая Республика
217	216	Макао, Китай
218	217	Мальдивские Острова
219	218	Монголия
220	219	Мьянма
221	220	Непал
222	221	Оман
223	222	Пакистан
224	223	Катар
225	224	Республика Корея
226	225	Йемен
227	226	Российская Федерация (РА II)
228	227	Саудовская Аравия
229	228	Шри-Ланка
230	229	Таджикистан
231	230	Таиланд
232	231	Туркменистан
233	232	Объединенные Арабские Эмираты
234	233	Узбекистан
235	234	Вьетнам
236	235	Зарезервировано для Региона II (Азия)
237	236	Зарезервировано для Региона II (Азия)
238	237	Зарезервировано для Региона II (Азия)
239	238	Зарезервировано для Региона II (Азия)
240	239	Зарезервировано для Региона II (Азия)
241	240	Зарезервировано для Региона II (Азия)
242	241	Зарезервировано для Региона II (Азия)
243	242	Зарезервировано для Региона II (Азия)
244	243	Зарезервировано для Региона II (Азия)
245	244	Зарезервировано для Региона II (Азия)
246	245	Зарезервировано для Региона II (Азия)
247	246	Зарезервировано для Региона II (Азия)
248	247	Зарезервировано для Региона II (Азия)
249	248	Зарезервировано для Региона II (Азия)
250	249	Зарезервировано для Региона II (Азия)
251	250	Зарезервировано для Региона II (Азия)
252	251	Зарезервировано для Региона II (Азия)
253	252	Зарезервировано для Региона II (Азия)
254	253	Зарезервировано для Региона II (Азия)
255	254	Зарезервировано для Региона II (Азия)
256	255	Зарезервировано для Региона II (Азия)
257	256	Зарезервировано для Региона II (Азия)
258	257	Зарезервировано для Региона II (Азия)
259	258	Зарезервировано для Региона II (Азия)
260	259	Зарезервировано для Региона II (Азия)
261	260	Зарезервировано для Региона II (Азия)
262	261	Зарезервировано для Региона II (Азия)
263	262	Зарезервировано для Региона II (Азия)
264	263	Зарезервировано для Региона II (Азия)
265	264	Зарезервировано для Региона II (Азия)
266	265	Зарезервировано для Региона II (Азия)
267	266	Зарезервировано для Региона II (Азия)
268	267	Зарезервировано для Региона II (Азия)
269	268	Зарезервировано для Региона II (Азия)
270	269	Зарезервировано для Региона II (Азия)
271	270	Зарезервировано для Региона II (Азия)
272	271	Зарезервировано для Региона II (Азия)
273	272	Зарезервировано для Региона II (Азия)
274	273	Зарезервировано для Региона II (Азия)
275	274	Зарезервировано для Региона II (Азия)
276	275	Зарезервировано для Региона II (Азия)
277	276	Зарезервировано для Региона II (Азия)
278	277	Зарезервировано для Региона II (Азия)
279	278	Зарезервировано для Региона II (Азия)
280	279	Зарезервировано для Региона II (Азия)
281	280	Зарезервировано для Региона II (Азия)
282	281	Зарезервировано для Региона II (Азия)
283	282	Зарезервировано для Региона II (Азия)
284	283	Зарезервировано для Региона II (Азия)
285	284	Зарезервировано для Региона II (Азия)
286	285	Зарезервировано для Региона II (Азия)
287	286	Зарезервировано для Региона II (Азия)
288	287	Зарезервировано для Региона II (Азия)
289	288	Зарезервировано для Региона II (Азия)
290	289	Зарезервировано для Региона II (Азия)
291	290	Зарезервировано для Региона II (Азия)
292	291	Зарезервировано для Региона II (Азия)
293	292	Зарезервировано для Региона II (Азия)
294	293	Зарезервировано для Региона II (Азия)
295	294	Зарезервировано для Региона II (Азия)
296	295	Зарезервировано для Региона II (Азия)
297	296	Зарезервировано для Региона II (Азия)
298	297	Зарезервировано для Региона II (Азия)
299	298	Зарезервировано для Региона II (Азия)
300	299	Зарезервировано для Региона II (Азия)
301	300	Аргентина
302	301	Боливия (Многонациональное Государство)
303	302	Бразилия
304	303	Чили
305	304	Колумбия
306	305	Эквадор
307	306	Франция (РА III)
308	307	Гайана
309	308	Парагвай
310	309	Перу
311	310	Суринам
312	311	Уругвай
313	312	Венесуэла (Боливарианская Республика)
314	313	Зарезервировано для Региона III (Южная Америка)
315	314	Зарезервировано для Региона III (Южная Америка)
316	315	Зарезервировано для Региона III (Южная Америка)
317	316	Зарезервировано для Региона III (Южная Америка)
318	317	Зарезервировано для Региона III (Южная Америка)
319	318	Зарезервировано для Региона III (Южная Америка)
320	319	Зарезервировано для Региона III (Южная Америка)
321	320	Зарезервировано для Региона III (Южная Америка)
322	321	Зарезервировано для Региона III (Южная Америка)
323	322	Зарезервировано для Региона III (Южная Америка)
324	323	Зарезервировано для Региона III (Южная Америка)
325	324	Зарезервировано для Региона III (Южная Америка)
326	325	Зарезервировано для Региона III (Южная Америка)
327	326	Зарезервировано для Региона III (Южная Америка)
328	327	Зарезервировано для Региона III (Южная Америка)
329	328	Зарезервировано для Региона III (Южная Америка)
330	329	Зарезервировано для Региона III (Южная Америка)
331	330	Зарезервировано для Региона III (Южная Америка)
332	331	Зарезервировано для Региона III (Южная Америка)
333	332	Зарезервировано для Региона III (Южная Америка)
334	333	Зарезервировано для Региона III (Южная Америка)
335	334	Зарезервировано для Региона III (Южная Америка)
336	335	Зарезервировано для Региона III (Южная Америка)
337	336	Зарезервировано для Региона III (Южная Америка)
338	337	Зарезервировано для Региона III (Южная Америка)
339	338	Зарезервировано для Региона III (Южная Америка)
340	339	Зарезервировано для Региона III (Южная Америка)
341	340	Зарезервировано для Региона III (Южная Америка)
342	341	Зарезервировано для Региона III (Южная Америка)
343	342	Зарезервировано для Региона III (Южная Америка)
344	343	Зарезервировано для Региона III (Южная Америка)
345	344	Зарезервировано для Региона III (Южная Америка)
346	345	Зарезервировано для Региона III (Южная Америка)
347	346	Зарезервировано для Региона III (Южная Америка)
348	347	Зарезервировано для Региона III (Южная Америка)
349	348	Зарезервировано для Региона III (Южная Америка)
350	349	Зарезервировано для Региона III (Южная Америка)
351	350	Зарезервировано для Региона III (Южная Америка)
352	351	Зарезервировано для Региона III (Южная Америка)
353	352	Зарезервировано для Региона III (Южная Америка)
354	353	Зарезервировано для Региона III (Южная Америка)
355	354	Зарезервировано для Региона III (Южная Америка)
356	355	Зарезервировано для Региона III (Южная Америка)
357	356	Зарезервировано для Региона III (Южная Америка)
358	357	Зарезервировано для Региона III (Южная Америка)
359	358	Зарезервировано для Региона III (Южная Америка)
360	359	Зарезервировано для Региона III (Южная Америка)
361	360	Зарезервировано для Региона III (Южная Америка)
362	361	Зарезервировано для Региона III (Южная Америка)
363	362	Зарезервировано для Региона III (Южная Америка)
364	363	Зарезервировано для Региона III (Южная Америка)
365	364	Зарезервировано для Региона III (Южная Америка)
753	752	Зарезервировано
366	365	Зарезервировано для Региона III (Южная Америка)
367	366	Зарезервировано для Региона III (Южная Америка)
368	367	Зарезервировано для Региона III (Южная Америка)
369	368	Зарезервировано для Региона III (Южная Америка)
370	369	Зарезервировано для Региона III (Южная Америка)
371	370	Зарезервировано для Региона III (Южная Америка)
372	371	Зарезервировано для Региона III (Южная Америка)
373	372	Зарезервировано для Региона III (Южная Америка)
374	373	Зарезервировано для Региона III (Южная Америка)
375	374	Зарезервировано для Региона III (Южная Америка)
376	375	Зарезервировано для Региона III (Южная Америка)
377	376	Зарезервировано для Региона III (Южная Америка)
378	377	Зарезервировано для Региона III (Южная Америка)
379	378	Зарезервировано для Региона III (Южная Америка)
380	379	Зарезервировано для Региона III (Южная Америка)
381	380	Зарезервировано для Региона III (Южная Америка)
382	381	Зарезервировано для Региона III (Южная Америка)
383	382	Зарезервировано для Региона III (Южная Америка)
384	383	Зарезервировано для Региона III (Южная Америка)
385	384	Зарезервировано для Региона III (Южная Америка)
386	385	Зарезервировано для Региона III (Южная Америка)
387	386	Зарезервировано для Региона III (Южная Америка)
388	387	Зарезервировано для Региона III (Южная Америка)
389	388	Зарезервировано для Региона III (Южная Америка)
390	389	Зарезервировано для Региона III (Южная Америка)
391	390	Зарезервировано для Региона III (Южная Америка)
392	391	Зарезервировано для Региона III (Южная Америка)
393	392	Зарезервировано для Региона III (Южная Америка)
394	393	Зарезервировано для Региона III (Южная Америка)
395	394	Зарезервировано для Региона III (Южная Америка)
396	395	Зарезервировано для Региона III (Южная Америка)
397	396	Зарезервировано для Региона III (Южная Америка)
398	397	Зарезервировано для Региона III (Южная Америка)
399	398	Зарезервировано для Региона III (Южная Америка)
400	399	Зарезервировано для Региона III (Южная Америка)
401	400	Антигуа и Барбуда
402	401	Багамские Острова
403	402	Барбадос
404	403	Белиз
405	404	Британские Карибские Территории
406	405	Канада
407	406	Колумбия
408	407	Коста-Рика
409	408	Куба
410	409	Доминика
411	410	Доминиканская Республика
412	411	Сальвадор
413	412	Франция (РА IV)
414	413	Гватемала
415	414	Гаити
416	415	Гондурас
417	416	Ямайка
418	417	Мексика
419	418	Кюрасао и Синт-Мартен
420	419	Никарагуа
421	420	Панама
422	421	Сент-Люсия
423	422	Тринидад и Тобаго
424	423	Соединенное Королевство Великобритании и Северной Ирландии (РА IV)
425	424	Соединенные Штаты Америки (РА IV)
503	502	Острова Кука
426	425	Венесуэла (Боливарианская Республика)
427	426	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
428	427	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
429	428	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
430	429	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
431	430	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
432	431	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
433	432	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
434	433	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
435	434	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
436	435	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
437	436	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
438	437	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
439	438	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
440	439	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
441	440	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
442	441	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
443	442	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
444	443	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
445	444	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
446	445	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
447	446	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
448	447	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
449	448	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
450	449	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
451	450	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
452	451	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
453	452	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
454	453	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
455	454	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
456	455	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
457	456	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
458	457	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
459	458	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
460	459	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
461	460	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
462	461	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
463	462	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
464	463	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
465	464	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
466	465	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
467	466	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
468	467	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
469	468	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
470	469	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
471	470	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
472	471	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
754	753	Зарезервировано
473	472	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
474	473	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
475	474	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
476	475	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
477	476	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
478	477	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
479	478	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
480	479	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
481	480	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
482	481	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
483	482	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
484	483	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
485	484	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
486	485	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
487	486	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
488	487	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
489	488	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
490	489	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
491	490	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
492	491	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
493	492	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
494	493	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
495	494	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
496	495	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
497	496	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
498	497	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
499	498	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
500	499	Зарезервировано для Региона IV (Северная Америка, Центральная Америка и Карибский бассейн)
501	500	Австралия
502	501	Бруней-Даруссалам
504	503	Фиджи
505	504	Французская Полинезия
506	505	Индонезия
507	506	Кирибати
508	507	Малайзия
509	508	Микронезия, Федеративные Штаты
510	509	Новая Каледония
511	510	Новая Зеландия
512	511	Ниуэ
513	512	Папуа–Новая Гвинея
514	513	Филиппины
515	514	Самоа
516	515	Сингапур
517	516	Соломоновы Острова
518	517	Тонга
519	518	Соединенное Королевство Великобритании и Северной Ирландии (РА V)
520	519	Соединенные Штаты Америки (РА V)
521	520	Вануату
522	521	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
523	522	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
524	523	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
525	524	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
660	659	Зарезервировано для Региона VI (Европа)
526	525	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
527	526	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
528	527	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
529	528	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
530	529	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
531	530	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
532	531	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
533	532	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
534	533	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
535	534	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
536	535	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
537	536	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
538	537	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
539	538	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
540	539	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
541	540	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
542	541	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
543	542	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
544	543	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
545	544	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
546	545	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
547	546	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
548	547	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
549	548	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
550	549	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
551	550	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
552	551	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
553	552	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
554	553	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
555	554	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
556	555	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
557	556	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
558	557	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
559	558	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
560	559	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
561	560	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
562	561	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
563	562	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
564	563	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
565	564	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
566	565	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
567	566	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
568	567	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
569	568	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
570	569	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
571	570	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
572	571	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
573	572	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
574	573	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
575	574	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
576	575	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
577	576	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
578	577	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
579	578	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
580	579	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
581	580	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
582	581	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
583	582	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
584	583	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
585	584	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
586	585	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
587	586	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
588	587	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
589	588	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
590	589	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
591	590	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
592	591	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
593	592	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
594	593	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
595	594	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
596	595	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
597	596	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
598	597	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
599	598	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
600	599	Зарезервировано для Региона V (Юго-западная часть Тихого океана)
601	600	Албания
602	601	Армения
603	602	Австрия
604	603	Азербайджан
605	604	Беларусь
606	605	Бельгия
607	606	Босния и Герцеговина
608	607	Болгария
609	608	Хорватия
610	609	Кипр
611	610	Чешская Республика
612	611	Дания
613	612	Эстония
614	613	Финляндия
615	614	Франция (РА VI)
616	615	Грузия
617	616	Германия
618	617	Греция
619	618	Венгрия
620	619	Исландия
621	620	Ирландия
622	621	Израиль
623	622	Италия
624	623	Иордания
625	624	Казахстан
626	625	Латвия
627	626	Ливан
628	627	Литва
629	628	Люксембург
630	629	Мальта
631	630	Монако
632	631	Черногория
633	632	Нидерланды
634	633	Норвегия
635	634	Польша
636	635	Португалия (РА VI)
637	636	Республика Молдова
638	637	Румыния
639	638	Российская Федерация (РА VI)
640	639	Сербия
641	640	Словакия
642	641	Словения
643	642	Испания (РА VI)
644	643	Швеция
645	644	Швейцария
646	645	Сирийская Арабская Республика
647	646	Бывшая югославская Республика Македония
648	647	Турция
649	648	Украина
650	649	Соединенное Королевство Великобритании и Северной Ирландии (РА VI)
651	650	Зарезервировано для Региона VI (Европа)
652	651	Зарезервировано для Региона VI (Европа)
653	652	Зарезервировано для Региона VI (Европа)
654	653	Зарезервировано для Региона VI (Европа)
655	654	Зарезервировано для Региона VI (Европа)
656	655	Зарезервировано для Региона VI (Европа)
657	656	Зарезервировано для Региона VI (Европа)
658	657	Зарезервировано для Региона VI (Европа)
659	658	Зарезервировано для Региона VI (Европа)
752	751	Зарезервировано
661	660	Зарезервировано для Региона VI (Европа)
662	661	Зарезервировано для Региона VI (Европа)
663	662	Зарезервировано для Региона VI (Европа)
664	663	Зарезервировано для Региона VI (Европа)
665	664	Зарезервировано для Региона VI (Европа)
666	665	Зарезервировано для Региона VI (Европа)
667	666	Зарезервировано для Региона VI (Европа)
668	667	Зарезервировано для Региона VI (Европа)
669	668	Зарезервировано для Региона VI (Европа)
670	669	Зарезервировано для Региона VI (Европа)
671	670	Зарезервировано для Региона VI (Европа)
672	671	Зарезервировано для Региона VI (Европа)
673	672	Зарезервировано для Региона VI (Европа)
674	673	Зарезервировано для Региона VI (Европа)
675	674	Зарезервировано для Региона VI (Европа)
676	675	Зарезервировано для Региона VI (Европа)
677	676	Зарезервировано для Региона VI (Европа)
678	677	Зарезервировано для Региона VI (Европа)
679	678	Зарезервировано для Региона VI (Европа)
680	679	Зарезервировано для Региона VI (Европа)
681	680	Зарезервировано для Региона VI (Европа)
682	681	Зарезервировано для Региона VI (Европа)
683	682	Зарезервировано для Региона VI (Европа)
684	683	Зарезервировано для Региона VI (Европа)
685	684	Зарезервировано для Региона VI (Европа)
686	685	Зарезервировано для Региона VI (Европа)
687	686	Зарезервировано для Региона VI (Европа)
688	687	Зарезервировано для Региона VI (Европа)
689	688	Зарезервировано для Региона VI (Европа)
690	689	Зарезервировано для Региона VI (Европа)
691	690	Зарезервировано для Региона VI (Европа)
692	691	Зарезервировано для Региона VI (Европа)
693	692	Зарезервировано для Региона VI (Европа)
694	693	Зарезервировано для Региона VI (Европа)
695	694	Зарезервировано для Региона VI (Европа)
696	695	Зарезервировано для Региона VI (Европа)
697	696	Зарезервировано для Региона VI (Европа)
698	697	Зарезервировано для Региона VI (Европа)
699	698	Зарезервировано для Региона VI (Европа)
700	699	Зарезервировано для Региона VI (Европа)
701	700	Зарезервировано
702	701	Зарезервировано
703	702	Зарезервировано
704	703	Зарезервировано
705	704	Зарезервировано
706	705	Зарезервировано
707	706	Зарезервировано
708	707	Зарезервировано
709	708	Зарезервировано
710	709	Зарезервировано
711	710	Зарезервировано
712	711	Зарезервировано
713	712	Зарезервировано
714	713	Зарезервировано
715	714	Зарезервировано
716	715	Зарезервировано
717	716	Зарезервировано
718	717	Зарезервировано
719	718	Зарезервировано
720	719	Зарезервировано
721	720	Зарезервировано
722	721	Зарезервировано
723	722	Зарезервировано
724	723	Зарезервировано
725	724	Зарезервировано
726	725	Зарезервировано
727	726	Зарезервировано
728	727	Зарезервировано
729	728	Зарезервировано
730	729	Зарезервировано
731	730	Зарезервировано
732	731	Зарезервировано
733	732	Зарезервировано
734	733	Зарезервировано
735	734	Зарезервировано
736	735	Зарезервировано
737	736	Зарезервировано
738	737	Зарезервировано
739	738	Зарезервировано
740	739	Зарезервировано
741	740	Зарезервировано
742	741	Зарезервировано
743	742	Зарезервировано
744	743	Зарезервировано
745	744	Зарезервировано
746	745	Зарезервировано
747	746	Зарезервировано
748	747	Зарезервировано
749	748	Зарезервировано
750	749	Зарезервировано
751	750	Зарезервировано
755	754	Зарезервировано
756	755	Зарезервировано
757	756	Зарезервировано
758	757	Зарезервировано
759	758	Зарезервировано
760	759	Зарезервировано
761	760	Зарезервировано
762	761	Зарезервировано
763	762	Зарезервировано
764	763	Зарезервировано
765	764	Зарезервировано
766	765	Зарезервировано
767	766	Зарезервировано
768	767	Зарезервировано
769	768	Зарезервировано
770	769	Зарезервировано
771	770	Зарезервировано
772	771	Зарезервировано
773	772	Зарезервировано
774	773	Зарезервировано
775	774	Зарезервировано
776	775	Зарезервировано
777	776	Зарезервировано
778	777	Зарезервировано
779	778	Зарезервировано
780	779	Зарезервировано
781	780	Зарезервировано
782	781	Зарезервировано
783	782	Зарезервировано
784	783	Зарезервировано
785	784	Зарезервировано
786	785	Зарезервировано
787	786	Зарезервировано
788	787	Зарезервировано
789	788	Зарезервировано
790	789	Зарезервировано
791	790	Зарезервировано
792	791	Зарезервировано
793	792	Зарезервировано
794	793	Зарезервировано
795	794	Зарезервировано
796	795	Зарезервировано
797	796	Зарезервировано
798	797	Зарезервировано
799	798	Зарезервировано
800	799	Зарезервировано
801	800	Зарезервировано
802	801	Зарезервировано
803	802	Зарезервировано
804	803	Зарезервировано
805	804	Зарезервировано
806	805	Зарезервировано
807	806	Зарезервировано
808	807	Зарезервировано
809	808	Зарезервировано
810	809	Зарезервировано
811	810	Зарезервировано
812	811	Зарезервировано
813	812	Зарезервировано
814	813	Зарезервировано
815	814	Зарезервировано
816	815	Зарезервировано
817	816	Зарезервировано
818	817	Зарезервировано
819	818	Зарезервировано
820	819	Зарезервировано
821	820	Зарезервировано
822	821	Зарезервировано
823	822	Зарезервировано
824	823	Зарезервировано
825	824	Зарезервировано
826	825	Зарезервировано
827	826	Зарезервировано
828	827	Зарезервировано
829	828	Зарезервировано
830	829	Зарезервировано
831	830	Зарезервировано
832	831	Зарезервировано
833	832	Зарезервировано
834	833	Зарезервировано
835	834	Зарезервировано
836	835	Зарезервировано
837	836	Зарезервировано
838	837	Зарезервировано
839	838	Зарезервировано
840	839	Зарезервировано
841	840	Зарезервировано
842	841	Зарезервировано
843	842	Зарезервировано
844	843	Зарезервировано
845	844	Зарезервировано
846	845	Зарезервировано
847	846	Зарезервировано
848	847	Зарезервировано
849	848	Зарезервировано
850	849	Зарезервировано
851	850	Зарезервировано
852	851	Зарезервировано
853	852	Зарезервировано
854	853	Зарезервировано
855	854	Зарезервировано
856	855	Зарезервировано
857	856	Зарезервировано
858	857	Зарезервировано
859	858	Зарезервировано
860	859	Зарезервировано
861	860	Зарезервировано
862	861	Зарезервировано
863	862	Зарезервировано
864	863	Зарезервировано
865	864	Зарезервировано
866	865	Зарезервировано
867	866	Зарезервировано
868	867	Зарезервировано
869	868	Зарезервировано
870	869	Зарезервировано
871	870	Зарезервировано
872	871	Зарезервировано
873	872	Зарезервировано
874	873	Зарезервировано
875	874	Зарезервировано
876	875	Зарезервировано
877	876	Зарезервировано
878	877	Зарезервировано
879	878	Зарезервировано
880	879	Зарезервировано
881	880	Зарезервировано
882	881	Зарезервировано
883	882	Зарезервировано
884	883	Зарезервировано
885	884	Зарезервировано
886	885	Зарезервировано
887	886	Зарезервировано
888	887	Зарезервировано
889	888	Зарезервировано
890	889	Зарезервировано
891	890	Зарезервировано
892	891	Зарезервировано
893	892	Зарезервировано
894	893	Зарезервировано
895	894	Зарезервировано
896	895	Зарезервировано
897	896	Зарезервировано
898	897	Зарезервировано
899	898	Зарезервировано
900	899	Зарезервировано
901	900	Зарезервировано
902	901	Зарезервировано
903	902	Зарезервировано
904	903	Зарезервировано
905	904	Зарезервировано
906	905	Зарезервировано
907	906	Зарезервировано
908	907	Зарезервировано
909	908	Зарезервировано
910	909	Зарезервировано
911	910	Зарезервировано
912	911	Зарезервировано
913	912	Зарезервировано
914	913	Зарезервировано
915	914	Зарезервировано
916	915	Зарезервировано
917	916	Зарезервировано
918	917	Зарезервировано
919	918	Зарезервировано
920	919	Зарезервировано
921	920	Зарезервировано
922	921	Зарезервировано
923	922	Зарезервировано
924	923	Зарезервировано
925	924	Зарезервировано
926	925	Зарезервировано
927	926	Зарезервировано
928	927	Зарезервировано
929	928	Зарезервировано
930	929	Зарезервировано
931	930	Зарезервировано
932	931	Зарезервировано
933	932	Зарезервировано
934	933	Зарезервировано
935	934	Зарезервировано
936	935	Зарезервировано
937	936	Зарезервировано
938	937	Зарезервировано
939	938	Зарезервировано
940	939	Зарезервировано
941	940	Зарезервировано
942	941	Зарезервировано
943	942	Зарезервировано
944	943	Зарезервировано
945	944	Зарезервировано
946	945	Зарезервировано
947	946	Зарезервировано
948	947	Зарезервировано
949	948	Зарезервировано
950	949	Зарезервировано
951	950	Зарезервировано
952	951	Зарезервировано
953	952	Зарезервировано
954	953	Зарезервировано
955	954	Зарезервировано
956	955	Зарезервировано
957	956	Зарезервировано
958	957	Зарезервировано
959	958	Зарезервировано
960	959	Зарезервировано
961	960	Зарезервировано
962	961	Зарезервировано
963	962	Зарезервировано
964	963	Зарезервировано
965	964	Зарезервировано
966	965	Зарезервировано
967	966	Зарезервировано
968	967	Зарезервировано
969	968	Зарезервировано
970	969	Зарезервировано
971	970	Зарезервировано
972	971	Зарезервировано
973	972	Зарезервировано
974	973	Зарезервировано
975	974	Зарезервировано
976	975	Зарезервировано
977	976	Зарезервировано
978	977	Зарезервировано
979	978	Зарезервировано
980	979	Зарезервировано
981	980	Зарезервировано
982	981	Зарезервировано
983	982	Зарезервировано
984	983	Зарезервировано
985	984	Зарезервировано
986	985	Зарезервировано
987	986	Зарезервировано
988	987	Зарезервировано
989	988	Зарезервировано
990	989	Зарезервировано
991	990	Зарезервировано
992	991	Зарезервировано
993	992	Зарезервировано
994	993	Зарезервировано
995	994	Зарезервировано
996	995	Зарезервировано
997	996	Зарезервировано
998	997	Зарезервировано
999	998	Зарезервировано
1000	999	Зарезервировано
1001	1000	Не используется
1002	1001	Не используется
1003	1002	Не используется
1004	1003	Не используется
1005	1004	Не используется
1006	1005	Не используется
1007	1006	Не используется
1008	1007	Не используется
1009	1008	Не используется
1010	1009	Не используется
1011	1010	Не используется
1012	1011	Не используется
1013	1012	Не используется
1014	1013	Не используется
1015	1014	Не используется
1016	1015	Не используется
1017	1016	Не используется
1018	1017	Не используется
1019	1018	Не используется
1020	1019	Не используется
1021	1020	Не используется
1022	1021	Не используется
1023	1022	Не используется
1024	1023	Отсутствующее значение
\.


--
-- Name: bufr_code_001101_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_001101_seq', 1024, true);


--
-- Data for Name: bufr_code_002001; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002001 (id, code, description) FROM stdin;
1	0	Автоматическая станция
2	1	Станция с персоналом
3	2	Станция смешанного типа: и с персоналом, и автоматическая
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_002001_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002001_seq', 4, true);


--
-- Data for Name: bufr_code_002002; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002002 (id, bit_number, device_descr) FROM stdin;
1	1	Сертифицированные приборы
2	2	Первоначально измеряемые в узлах
3	3	Первоначально измеряемые в км.ч-1
4	0	Отсутствующее значение
\.


--
-- Name: bufr_code_002002_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002002_seq', 4, true);


--
-- Data for Name: bufr_code_002003; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002003 (id, code, description) FROM stdin;
1	0	Прибор измерения давления, связанный с оборудованием измерения ветра
2	1	Оптический теодолит
3	2	Радиотеодолит
4	3	Радиолокатор
5	4	VLF-Омега
6	5	Loran-C
7	6	Профилометр ветра
8	7	Спутниковая навигация
9	8	Cистема радиоакустического зондирования (РАСC)
10	9	Содар
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Прибор измерения давления, связанный с оборудованием измерения ветра, но элемент давления отказал во время запуска
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002003_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002003_seq', 16, true);


--
-- Data for Name: bufr_code_002004; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002004 (id, code, unknown1, unknown2) FROM stdin;
1	0	Испаритель США с испарительным сосудом (без крышки)	Испарение
2	1	Испаритель США с испарительным сосудом (с сеткой)	Испарение
3	2	Испаритель ГГИ-3000 (врытый в землю)	Испарение
4	3	Испарительный бассейн 20 м2	Испарение
5	4	Другие виды	Испарение
6	5	Рис	Суммарное испарение
7	6	Пшеница	Суммарное испарение
8	7	Маис	Суммарное испарение
9	8	Сорго	Суммарное испарение
10	9	Другие культуры	Суммарное испарение
11	10	Зарезервировано	Суммарное испарение
12	11	Зарезервировано	Суммарное испарение
13	12	Зарезервировано	Суммарное испарение
14	13	Зарезервировано	Суммарное испарение
15	14	Зарезервировано	Суммарное испарение
16	15	Отсутствующее значение	Суммарное испарение
\.


--
-- Name: bufr_code_002004_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002004_seq', 16, true);


--
-- Data for Name: bufr_code_002013; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002013 (id, code, description) FROM stdin;
1	0	Нет коррекции
2	1	Коррекция солнечной радиации КПМН и коррекция инфракрасной радиации КПМН
3	2	Коррекция солнечной радиации КПМН и коррекция инфракрасной радиации
4	3	Только коррекция солнечной радиации КПМН
5	4	Солнечные и инфракрасные данные корректируются автоматически самой радиозондовой
6	5	Солнечные данные корректируются автоматически радиозондовой системой
7	6	Солнечные и инфракрасные данные корректируются как указывается страной
8	7	Солнечные данные корректируются как указывается страной
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002013_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002013_seq', 16, true);


--
-- Data for Name: bufr_code_002015; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002015 (id, code, description) FROM stdin;
1	0	Зарезервирована
2	1	Радиозонд измеряет только давление
3	2	Радиозонд измеряет только давление, имеется приемопередатчик
4	3	Радиозонд измеряет только давление, имеется радиолокационный отражатель
5	4	Радиозонд без измерения давления, имеется приемопередатчик
6	5	Радиозонд без измерения давления, имеется радиолокационный отражатель
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002015_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002015_seq', 16, true);


--
-- Data for Name: bufr_code_002016; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002016 (id, code, description) FROM stdin;
1	0	Регулятор шнура подвески
2	2	Блок освещения
3	3	Парашют
4	4	Запуск через крышу
5	0	Отсутствующее значение
\.


--
-- Name: bufr_code_002016_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002016_seq', 5, true);


--
-- Data for Name: bufr_code_002017; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002017 (id, code, description) FROM stdin;
1	0	Поправка отсутствует
2	1	Поправка на задержку по времени, предоставляемая производителем
3	2	Поправка на солнечную радиацию, предоставляемая производителем
4	3	Поправка на солнечную радиацию и задержку по времени, предоставляемая производителем
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Отсутствующее значение
\.


--
-- Name: bufr_code_002017_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002017_seq', 32, true);


--
-- Data for Name: bufr_code_002020; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002020 (id, code, description) FROM stdin;
1	0	Nimbus
2	1	VTPR
3	2	Tiros 1 (Tiros, NOAA-6 – NOAA-13)
4	3	Tiros 2 (NOAA–14 и последующие)
5	10	EOS
6	31	DMSP
7	61	Полярная система EUMETSAT (EPS)
8	91	ERS
9	121	ADEOS
10	241	GOES
11	261	JASON
12	271	GMS
13	272	MTSAT
14	301	INSAT
15	331	Оперативная программа METEOSAT (MOP)
16	332	Переходная программа METEOSAT (MTP)
17	333	Программа второго поколения спутников METEOSAT (MSG)
18	351	ГОМС
19	380	FY-1
20	381	FY-2
21	382	Зарезервировано
22	383	Зарезервировано
23	384	Зарезервировано
24	385	Зарезервировано
25	386	Зарезервировано
26	387	Зарезервировано
27	388	Зарезервировано
28	389	Зарезервировано
29	390	Зарезервировано
30	391	Зарезервировано
31	392	Зарезервировано
32	393	Зарезервировано
33	394	Зарезервировано
34	395	Зарезервировано
35	396	Зарезервировано
36	397	Зарезервировано
37	398	Зарезервировано
38	399	Зарезервировано
39	400	Зарезервировано
40	401	GPS
41	402	GLONASS
42	403	GALILEO
43	404	Зарезервировано
44	405	Зарезервировано
45	406	Зарезервировано
46	407	Зарезервировано
47	408	Зарезервировано
48	409	Зарезервировано
49	410	Зарезервировано
50	411	Зарезервировано
51	412	Зарезервировано
52	413	Зарезервировано
53	414	Зарезервировано
54	415	Зарезервировано
55	416	Зарезервировано
56	417	Зарезервировано
57	418	Зарезервировано
58	419	Зарезервировано
59	420	Зарезервировано
60	421	Зарезервировано
61	422	Зарезервировано
62	423	Зарезервировано
63	424	Зарезервировано
64	425	Зарезервировано
65	426	Зарезервировано
66	427	Зарезервировано
67	428	Зарезервировано
68	429	Зарезервировано
69	430	Зарезервировано
70	431	Зарезервировано
71	432	Зарезервировано
72	433	Зарезервировано
73	434	Зарезервировано
74	435	Зарезервировано
75	436	Зарезервировано
76	437	Зарезервировано
77	438	Зарезервировано
78	439	Зарезервировано
79	440	Зарезервировано
80	441	Зарезервировано
81	442	Зарезервировано
82	443	Зарезервировано
83	444	Зарезервировано
84	445	Зарезервировано
85	446	Зарезервировано
86	447	Зарезервировано
87	448	Зарезервировано
88	449	Зарезервировано
89	450	Зарезервировано
90	451	Зарезервировано
91	452	Зарезервировано
92	453	Зарезервировано
93	454	Зарезервировано
94	455	Зарезервировано
95	456	Зарезервировано
96	457	Зарезервировано
97	458	Зарезервировано
98	459	Зарезервировано
99	460	Зарезервировано
100	461	Зарезервировано
101	462	Зарезервировано
102	463	Зарезервировано
103	464	Зарезервировано
104	465	Зарезервировано
105	466	Зарезервировано
106	467	Зарезервировано
107	468	Зарезервировано
108	469	Зарезервировано
109	470	Зарезервировано
110	471	Зарезервировано
111	472	Зарезервировано
112	473	Зарезервировано
113	474	Зарезервировано
114	475	Зарезервировано
115	476	Зарезервировано
116	477	Зарезервировано
117	478	Зарезервировано
118	479	Зарезервировано
119	480	Зарезервировано
120	481	Зарезервировано
121	482	Зарезервировано
122	483	Зарезервировано
123	484	Зарезервировано
124	485	Зарезервировано
125	486	Зарезервировано
126	487	Зарезервировано
127	488	Зарезервировано
128	489	Зарезервировано
129	490	Зарезервировано
130	491	Зарезервировано
131	492	Зарезервировано
132	493	Зарезервировано
133	494	Зарезервировано
134	495	Зарезервировано
135	496	Зарезервировано
136	497	Зарезервировано
137	498	Зарезервировано
138	499	Зарезервировано
139	500	Зарезервировано
140	501	Зарезервировано
141	502	Зарезервировано
142	503	Зарезервировано
143	504	Зарезервировано
144	505	Зарезервировано
145	506	Зарезервировано
146	507	Зарезервировано
147	508	Зарезервировано
148	509	Зарезервировано
149	510	Зарезервировано
150	511	Отсутствующее значение
\.


--
-- Name: bufr_code_002020_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002020_seq', 150, true);


--
-- Data for Name: bufr_code_002021; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002021 (id, bit_number, description) FROM stdin;
1	1	Прибор для инфракрасного зондирования с высоким разрешением (HIRS)
2	2	Прибор для микроволнового зондирования (MSU)
3	3	Прибор для стратосферного зондирования (SSU)
4	4	Активный микроволновый прибор (AMI) для определения ветра
5	5	Активный микроволновый прибор (AMI) для определения волнения
6	6	Активный микроволновый прибор (AMI) для получения изображения
7	7	Радиолокационный альтиметр (RADAR)
8	8	ATSR
9	0	Отсутствующее значение
\.


--
-- Name: bufr_code_002021_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002021_seq', 9, true);


--
-- Data for Name: bufr_code_002022; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002022 (id, bit_number, description) FROM stdin;
1	1	Методика обработки не определена
2	2	Автоматизированная статистическая регрессия
3	3	Траектория над поверхностью, не закрытой облаками
4	4	Траектория над частично закрытой облаками поверхностью
5	5	Траектория над закрытой облаками поверхностью
6	6	Зарезервировано
7	7	Зарезервировано
8	0	Отсутствующее значение
\.


--
-- Name: bufr_code_002022_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002022_seq', 8, true);


--
-- Data for Name: bufr_code_002023; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002023 (id, code, description) FROM stdin;
1	0	Зарезервировано
2	1	Ветер определен по движению облаков, наблюдаемому в инфракрасном канале
3	2	Ветер определен по движению облаков, наблюдаемому в видимом канале
4	3	Ветер определен по движению облаков, наблюдаемому в канале водяного пара
5	4	Ветер определен по движению, наблюдаемому в комбинации спектральных каналов
6	5	Ветер определен по движению, наблюдаемому в канале водяного пара в чистом воздухе
7	6	Ветер определен по движению, наблюдаемому в канале озона
8	7	Ветер определен по движению, наблюдаемому в канале водяного пара (облака или чистый воздух не определены)
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Среднее квадратичное
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002023_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002023_seq', 16, true);


--
-- Data for Name: bufr_code_002024; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002024 (id, code, description) FROM stdin;
1	0	Зарезервировано
2	1	Таблица с указанием всех пределов изменения влажности в слое
3	2	Метод регрессии, применяемый к 2 значениям влажности в слое
4	3	Зарезервировано
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002024_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002024_seq', 16, true);


--
-- Data for Name: bufr_code_002025; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002025 (id, bit_number, channel) FROM stdin;
1	1	Зарезервирован
2	2	HIRS
3	3	MSU
4	4	Зарезервировано
5	5	Зарезервировано
6	6	HIRS
7	7	MSU
8	8	Зарезервировано
9	9	Зарезервировано
10	10	HIRS (1, 2, 3, 8, 9, 16, 17)
11	11	HIRS (1, 2, 3, 9, 17)
12	12	MSU
13	13	Зарезервировано
14	14	Зарезервировано
15	15	HIRS
16	16	HIRS*
17	17	MSU
18	18	SKINTK (только для океана)
19	19	Зарезервировано
20	20	Зарезервировано
21	21	HIRS*
22	22	SSU
23	23	MSU (3, 4)
24	24	Зарезервирован
25	0	Отсутствующее значение
\.


--
-- Name: bufr_code_002025_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002025_seq', 25, true);


--
-- Data for Name: bufr_code_002030; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002030 (id, code, description) FROM stdin;
1	0	Зарезервировано
2	1	АДПТ (акустический профиломер Доплера для измерения течения)
3	2	ГЭК (геомагнитный электрокинетограф)
4	3	Направление движения и дрейф судна установлены с фиксированным интервалом в 3–6 часов
5	4	Направление движения и дрейф судна установлены с фиксированным интервалом более 6 часов, но менее 12 часов
6	5	Дрейф буя
7	6	АДПТ (акустический профиломер Доплера для измерения течения)
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_002030_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002030_seq', 8, true);


--
-- Data for Name: bufr_code_002031; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002031 (id, code, description) FROM stdin;
1	0	Зарезервирована
2	1	Мгновенный
3	2	Усреднено за 3 минуты или менее
4	3	Усреднено более чем за 3 минуты, но максимум за 6
5	4	Усреднено более чем за 6 минут, но максимум за 12
6	5	Мгновенный
7	6	Усреднено за 3 минуты или менее
8	7	Усреднено более чем за 3 минуты, но максимум за 6
9	8	Усреднено более чем за 6 минут, но максимум за 12
10	9	Векторный или доплеровский метод получения профиля течения не применяется
11	10	Зарезервирована
12	11	1 час или менее
13	12	Более 1 часа, но менее или равно 2
14	13	Более 2 часов, но менее или равно 4
15	14	Более 4 часов, но менее или равно 8
16	15	Более 8 часов, но менее или равно 12
17	16	Более 12 часов, но менее или равно 18
18	17	Более 18 часов, но менее или равно 24
19	18	Зарезервирована
20	19	Дрейфовый метод не применяется
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Отсутствующее значение
\.


--
-- Name: bufr_code_002031_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002031_seq', 32, true);


--
-- Data for Name: bufr_code_002032; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002032 (id, code, description) FROM stdin;
1	0	Величины на выбранных глубинах (точки получения данных, зафиксированные прибором или выбранные с помощью какого-либо другого метода)
2	1	Величины на выбранных глубинах (точки данных, взятые по траектории движения на особых глубинах)
3	2	Зарезервирована
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_002032_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002032_seq', 4, true);


--
-- Data for Name: bufr_code_002033; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002033 (id, code, description) FROM stdin;
1	0	Соленость не измеряется
2	1	Датчик, находящийся в точке, точность выше 0,020/00
3	2	Датчик, находящийся в точке, точность менее 0,020/00
4	3	Анализ проб
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_002033_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002033_seq', 8, true);


--
-- Data for Name: bufr_code_002034; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002034 (id, code, description) FROM stdin;
1	0	Неопределенный плавучий якорь
2	1	Полый конус
3	2	TRISTAR
4	3	Ветровой щит
5	4	Парашют
6	5	Плавучий якорь, отличный от типа Лагранжа
7	6	Зарезервировано (будут разработаны)
8	7	Зарезервировано (будут разработаны)
9	8	Зарезервировано (будут разработаны)
10	9	Зарезервировано (будут разработаны)
11	10	Зарезервировано (будут разработаны)
12	11	Зарезервировано (будут разработаны)
13	12	Зарезервировано (будут разработаны)
14	13	Зарезервировано (будут разработаны)
15	14	Зарезервировано (будут разработаны)
16	15	Зарезервировано (будут разработаны)
17	16	Зарезервировано (будут разработаны)
18	17	Зарезервировано (будут разработаны)
19	18	Зарезервировано (будут разработаны)
20	19	Зарезервировано (будут разработаны)
21	20	Зарезервировано (будут разработаны)
22	21	Зарезервировано (будут разработаны)
23	22	Зарезервировано (будут разработаны)
24	23	Зарезервировано (будут разработаны)
25	24	Зарезервировано (будут разработаны)
26	25	Зарезервировано (будут разработаны)
27	26	Зарезервировано (будут разработаны)
28	27	Зарезервировано (будут разработаны)
29	28	Зарезервировано (будут разработаны)
30	29	Зарезервировано (будут разработаны)
31	30	Зарезервировано (будут разработаны)
32	31	Отсутствующее значение
\.


--
-- Name: bufr_code_002034_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002034_seq', 32, true);


--
-- Data for Name: bufr_code_002036; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002036 (id, code, description) FROM stdin;
1	0	Дрейфующий буй
2	1	Заякоренный буй
3	2	Притопленный буй (находящийся в движении)
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_002036_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002036_seq', 4, true);


--
-- Data for Name: bufr_code_002037; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002037 (id, code, description) FROM stdin;
1	0	Зарезервирована
2	1	Осуществляемое наблюдателем считывание показаний с вертикального футштока
3	2	Осуществляемое наблюдателем считывание показаний с единственного автоматического регистратора станции
4	3	Осуществляемое наблюдателем считывание показаний со многих автоматических регистраторов на станции
5	4	Автоматическое считывание с единственного автоматического регистратора на станции без проверки по отношению к эталону уровня
6	5	Автоматическое считывание с единственного автоматического регистратора на станции с проверкой по отношению к эталону уровня, либо со многих автоматических регистраторов
7	6	Зарезервирована
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_002037_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002037_seq', 8, true);


--
-- Data for Name: bufr_code_002038; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002038 (id, code, description) FROM stdin;
1	0	Судовое устройство для забора забортной воды
2	1	Ведро
3	2	Контактный датчик на корпусе судна
4	3	Опрокидывающийся термометр
5	4	Датчик STD/СTD
6	5	Механический батитермограф
7	6	Батитермограф разового пользования
8	7	Цифровой батитермограф
9	8	Термисторная цепь
10	9	Инфракрасный сканер
11	10	Микроволновый сканер
12	11	Инфракрасный радиометр
13	12	Линейный термосоленограф
14	13	Буксируемый объект
15	14	Прочее
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002038_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002038_seq', 16, true);


--
-- Data for Name: bufr_code_002039; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002039 (id, code, description) FROM stdin;
1	0	Измерение по смоченному термометру
2	1	Измерение по смоченному термометру, покрытому льдом
3	2	Вычисление температуры по смоченному термометру
4	3	Вычисление температуры по смоченному термометру, покрытому льдом
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_002039_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002039_seq', 8, true);


--
-- Data for Name: bufr_code_002040; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002040 (id, code, description) FROM stdin;
1	0	Направление движения судна исключено при усреднении
2	1	Направление движения судна исключено через компенсацию движения
3	2	Направление движения судна не исключено
4	3	Направление движения судна исключено при усреднении
5	4	Направление движения судна исключено через компенсацию движения
6	5	Направление движения судна не исключено
7	6	Доплеровский метод получения профиля течения не используется
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002040_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002040_seq', 16, true);


--
-- Data for Name: bufr_code_002041; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002041 (id, code, description) FROM stdin;
1	0	Информация, основанная на ручном анализе
2	1	Информация, основанная на компьютерном анализе
3	2	Информация, основанная на ассимиляции данных
4	3	Информация, основанная на компьютерном анализе или с применением ассимиляции данных вручную
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Информация, основанная на численном прогнозировании погоды
12	11	Зарезервировано для использования в будущем
13	12	Зарезервировано для использования в будущем
14	13	Зарезервировано для использования в будущем
15	14	Зарезервировано для использования в будущем
16	15	Зарезервировано для использования в будущем
17	16	Зарезервировано для использования в будущем
18	17	Зарезервировано для использования в будущем
19	18	Зарезервировано для использования в будущем
20	19	Зарезервировано для использования в будущем
21	20	Зарезервировано для использования в будущем
22	21	Зарезервировано для использования в будущем
23	22	Зарезервировано для использования в будущем
24	23	Зарезервировано для использования в будущем
25	24	Зарезервировано для использования в будущем
26	25	Зарезервировано для использования в будущем
27	26	Зарезервировано для использования в будущем
28	27	Зарезервировано для использования в будущем
29	28	Зарезервировано для использования в будущем
30	29	Зарезервировано для использования в будущем
31	30	Зарезервировано для использования в будущем
32	31	Зарезервировано для использования в будущем
33	32	Зарезервировано для использования в будущем
34	33	Зарезервировано для использования в будущем
35	34	Зарезервировано для использования в будущем
36	35	Зарезервировано для использования в будущем
37	36	Зарезервировано для использования в будущем
38	37	Зарезервировано для использования в будущем
39	38	Зарезервировано для использования в будущем
40	39	Зарезервировано для использования в будущем
41	40	Зарезервировано для использования в будущем
42	41	Зарезервировано для использования в будущем
43	42	Зарезервировано для использования в будущем
44	43	Зарезервировано для использования в будущем
45	44	Зарезервировано для использования в будущем
46	45	Зарезервировано для использования в будущем
47	46	Зарезервировано для использования в будущем
48	47	Зарезервировано для использования в будущем
49	48	Зарезервировано для использования в будущем
50	49	Зарезервировано для использования в будущем
51	50	Зарезервировано для использования в будущем
52	51	Зарезервировано для использования в будущем
53	52	Зарезервировано для использования в будущем
54	53	Зарезервировано для использования в будущем
55	54	Зарезервировано для использования в будущем
56	55	Зарезервировано для использования в будущем
57	56	Зарезервировано для использования в будущем
58	57	Зарезервировано для использования в будущем
59	58	Зарезервировано для использования в будущем
60	59	Зарезервировано для использования в будущем
61	60	Зарезервировано для использования в будущем
62	61	Зарезервировано для использования в будущем
63	62	Зарезервировано для использования в будущем
64	63	Отсутствующее значение
\.


--
-- Name: bufr_code_002041_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002041_seq', 64, true);


--
-- Data for Name: bufr_code_002042; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002042 (id, code, description) FROM stdin;
1	0	Значение, первоначально передаваемое в м/с
2	1	Значение, первоначально передаваемое в узлах
3	2	Данные о морском течении отсутствуют
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_002042_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002042_seq', 4, true);


--
-- Data for Name: bufr_code_002044; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002044 (id, code, description) FROM stdin;
1	0	Зарезервирована для использования в будущем
2	1	Лонге–Хиггинс (1964 г.)
3	2	Лонге–Хиггинс (метод F3)
4	3	Метод максимальной вероятности
5	4	Метод максимальной энтропии
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002044_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002044_seq', 16, true);


--
-- Data for Name: bufr_code_002045; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002045 (id, code, description) FROM stdin;
1	0	Морская станция
2	1	Автоматический буй для сбора данных
3	2	Воздушное судно
4	3	Спутник
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002045_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002045_seq', 16, true);


--
-- Data for Name: bufr_code_002046; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002046 (id, code, description) FROM stdin;
1	0	Зарезервирована для использования в будущем
2	1	Датчик подъема
3	2	Датчик наклона
4	3	Зарезервировано
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002046_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002046_seq', 16, true);


--
-- Data for Name: bufr_code_002047; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002047 (id, code, description) FROM stdin;
1	0	Зарезервировано
2	1	ДАРТ II (ПМЕЛ)
3	2	ДАРТ ETD (упрощенная постановка)
4	3	Буй для обнаружения волн цунами SAIC (STB)
5	4	GFZ — Потсдам
6	5	INCOIS (Индия)
7	6	InaBuoy (Индонезия)
8	7	Envirtech
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Зарезервировано
33	32	Зарезервировано
34	33	Зарезервировано
35	34	Зарезервировано
36	35	Зарезервировано
37	36	Зарезервировано
38	37	Зарезервировано
39	38	Зарезервировано
40	39	Зарезервировано
41	40	Зарезервировано
42	41	Зарезервировано
43	42	Зарезервировано
44	43	Зарезервировано
45	44	Зарезервировано
46	45	Зарезервировано
47	46	Зарезервировано
48	47	Зарезервировано
49	48	Зарезервировано
50	49	Зарезервировано
51	50	Зарезервировано
52	51	Зарезервировано
53	52	Зарезервировано
54	53	Зарезервировано
55	54	Зарезервировано
56	55	Зарезервировано
57	56	Зарезервировано
58	57	Зарезервировано
59	58	Зарезервировано
60	59	Зарезервировано
61	60	Зарезервировано
62	61	Зарезервировано
63	62	Зарезервировано
64	63	Зарезервировано
65	64	Зарезервировано
66	65	Зарезервировано
67	66	Зарезервировано
68	67	Зарезервировано
69	68	Зарезервировано
70	69	Зарезервировано
71	70	Зарезервировано
72	71	Зарезервировано
73	72	Зарезервировано
74	73	Зарезервировано
75	74	Зарезервировано
76	75	Зарезервировано
77	76	Зарезервировано
78	77	Зарезервировано
79	78	Зарезервировано
80	79	Зарезервировано
81	80	Зарезервировано
82	81	Зарезервировано
83	82	Зарезервировано
84	83	Зарезервировано
85	84	Зарезервировано
86	85	Зарезервировано
87	86	Зарезервировано
88	87	Зарезервировано
89	88	Зарезервировано
90	89	Зарезервировано
91	90	Зарезервировано
92	91	Зарезервировано
93	92	Зарезервировано
94	93	Зарезервировано
95	94	Зарезервировано
96	95	Зарезервировано
97	96	Зарезервировано
98	97	Зарезервировано
99	98	Зарезервировано
100	99	Зарезервировано
101	100	Не используются
102	101	Не используются
103	102	Не используются
104	103	Не используются
105	104	Не используются
106	105	Не используются
107	106	Не используются
108	107	Не используются
109	108	Не используются
110	109	Не используются
111	110	Не используются
112	111	Не используются
113	112	Не используются
114	113	Не используются
115	114	Не используются
116	115	Не используются
117	116	Не используются
118	117	Не используются
119	118	Не используются
120	119	Не используются
121	120	Не используются
122	121	Не используются
123	122	Не используются
124	123	Не используются
125	124	Не используются
126	125	Не используются
127	126	Не используются
128	127	Отсутствующее значение
\.


--
-- Name: bufr_code_002047_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002047_seq', 128, true);


--
-- Data for Name: bufr_code_002048; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002048 (id, code, description) FROM stdin;
1	0	HIRS
2	1	MSU
3	2	SSU
4	3	AMSU-A
5	4	AMSU-B
6	5	AVHRR
7	6	SSMI
8	7	NSCAT
9	8	SEAWINDS
10	9	Альтиметр POSEIDON
11	10	JMR (микроволновый радиомер JASON)
12	11	MHS
13	12	ASCAT
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002048_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002048_seq', 16, true);


--
-- Data for Name: bufr_code_002049; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002049 (id, unknown0, unknown1) FROM stdin;
1	1	Метод обработки не определен
2	2	Одновременный физический поиск
3	3	Зондирование при ясном небе
4	4	Зондирование при облачности
5	5	Зарезервировано для использования в будущем
6	6	Зарезервировано для использования в будущем
7	7	Зарезервировано для использования в будущем
8	0	Отсутствующее значение
\.


--
-- Name: bufr_code_002049_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002049_seq', 8, true);


--
-- Data for Name: bufr_code_002050; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002050 (id, bit_number, channel, channel_value) FROM stdin;
1	1	1	14,71
2	2	2	14,37
3	3	3	14,06
4	4	4	13,64
5	5	5	13,37
6	6	6	12,66
7	7	7	12,02
8	8	8	11,03
9	9	9	9,71
10	10	10	7,43
11	11	11	7,02
12	12	12	6,51
13	13	13	4,57
14	14	14	4,52
15	15	15	4,45
16	16	16	4,13
17	17	17	3,98
18	18	18	3,74
19	19	19	0,969
20	0	Отсутствующее значение	\N
\.


--
-- Name: bufr_code_002050_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002050_seq', 20, true);


--
-- Data for Name: bufr_code_002051; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002051 (id, code, description) FROM stdin;
1	0	Зарезервирована
2	1	Максимальный/минимальный термометры
3	2	Автоматические приборы
4	3	Термограф
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002051_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002051_seq', 16, true);


--
-- Data for Name: bufr_code_002052; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002052 (id, bit_number, channel, channel_value) FROM stdin;
1	1	1	0,55–0,75
2	2	2	3,9
3	3	3	6,7
4	4	4	10,7
5	5	5	12,0
6	0	Отсутствующее значение	\N
\.


--
-- Name: bufr_code_002052_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002052_seq', 6, true);


--
-- Data for Name: bufr_code_002053; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002053 (id, code, description) FROM stdin;
1	0	Сообщенная яркостная температура
2	1	Яркостная температура с применением коррекции искажения
3	2	Яркостная температура, расcчитанная по первым ориентировочным данным
4	3	Яркостная температура, расcчитанная посредством зондирования
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002053_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002053_seq', 16, true);


--
-- Data for Name: bufr_code_002054; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002054 (id, code, description) FROM stdin;
1	0	Параметр определен по сообщенным зондом яркостным температурам
2	1	Параметр определен по измерениям яркостных температур полученных изображений
3	2	Параметр определен с использованием первых ориентировочных данных
4	3	Параметр определен с использованием аналитической информации НМЦ
5	4	Параметр определен с использованием радиозондовой информации
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002054_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002054_seq', 16, true);


--
-- Data for Name: bufr_code_002055; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002055 (id, code, description) FROM stdin;
1	0	Данные, полученные посредством сравнения данных поиска с данными радиозондовых наблюдений
2	1	Данные, полученные посредством сравнения данных поиска с первыми ориентировочнымиданными
3	2	Данные, полученные посредством сравнения данных радиозондовых наблюдений с первыми ориентировочными данными
4	3	Данные, полученные посредством сравнения данных наблюдений с данными поиска
5	4	Данные, полученные посредством сравнения данных наблюдений с первыми ориентировочными данными
6	5	Данные, полученные посредством сравнения данных радиозондовых наблюдений наблюдений с данными формирователя изображения
7	6	Данные, полученные посредством сравнения данных радиозондовых наблюдений с данными зондирования
8	7	Данные, полученные посредством радиозондовых наблюдений
9	8	Данные, полученные в качестве первых ориентировочных данных
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002055_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002055_seq', 16, true);


--
-- Data for Name: bufr_code_002056; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002056 (id, code, description) FROM stdin;
1	0	Сумма разности
2	1	Суммы разности в квадрате
3	2	Размер выборки
4	3	Минимальная разность
5	4	Максимальная разность
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002056_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002056_seq', 16, true);


--
-- Data for Name: bufr_code_002057; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002057 (id, code, description) FROM stdin;
1	0	Гнездовая модель (NGM)
2	1	Авиационная модель (AVN)
3	2	Модель среднесрочного прогноза (MRF)
4	3	Модель прогноза Системы ассимиляции глобальных данных (ГДАС)
5	4	Предварительные зондирования (в течение 3 часов текущего времени)
6	5	Климатология
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002057_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002057_seq', 16, true);


--
-- Data for Name: bufr_code_002058; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002058 (id, code, description) FROM stdin;
1	0	12 часов и 18 часов
2	1	18 часов и 24 часа
3	2	6 часов и 12 часов
4	3	Более 24 часов
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002058_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002058_seq', 16, true);


--
-- Data for Name: bufr_code_002059; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002059 (id, code, description) FROM stdin;
1	0	Анализ гнездовой модели (NGM) НЦПОС*
2	1	Анализ авиационной модели (AVN) НЦПОС
3	2	Анализ модели среднесрочного прогноза (MRF) НЦПОС
4	3	Анализ модели прогноза Системы ассимиляции глобальных данных (ГДАС) НЦПОС
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002059_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002059_seq', 16, true);


--
-- Data for Name: bufr_code_002060; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002060 (id, code, description) FROM stdin;
1	0	Приземные сообщения на данный час
2	1	Сообщения с судов на данный час
3	2	Сообщения с буев на данный час
4	3	Приземные сообщения часовой давности
5	4	Сообщения с судов часовой давности
6	5	Сообщения с буев часовой давности
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002060_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002060_seq', 16, true);


--
-- Data for Name: bufr_code_002061; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002061 (id, code, description) FROM stdin;
1	0	Инерционная навигационная система
2	1	OMEGA
3	2	Зарезервировано
4	3	Зарезервировано
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_002061_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002061_seq', 8, true);


--
-- Data for Name: bufr_code_002062; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002062 (id, code, description) FROM stdin;
1	0	ASDAR
2	1	ASDAR (ACARS также установлена, но не действует в оперативном режиме)
3	2	ASDAR (ACARS также установлена и действует в оперативном режиме)
4	3	ACARS
5	4	ACARS (ASDAR также установлена, но не действует в оперативном режиме)
6	5	ACARS (ASDAR также установлена и действует в оперативном режиме)
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002062_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002062_seq', 16, true);


--
-- Data for Name: bufr_code_002064; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002064 (id, code, description) FROM stdin;
1	0	Хорошее
2	1	Плохое
3	2	Зарезервировано
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_002064_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002064_seq', 4, true);


--
-- Data for Name: bufr_code_002066; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002066 (id, code, description) FROM stdin;
1	0	InterMet IMS 2000
2	1	InterMet IMS 1500C
3	2	Зарезервировано
4	3	Зарезервировано
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Зарезервировано
33	32	Зарезервировано
34	33	Зарезервировано
35	34	Зарезервировано
36	35	Зарезервировано
37	36	Зарезервировано
38	37	Зарезервировано
39	38	Зарезервировано
40	39	Зарезервировано
41	40	Зарезервировано
42	41	Зарезервировано
43	42	Зарезервировано
44	43	Зарезервировано
45	44	Зарезервировано
46	45	Зарезервировано
47	46	Зарезервировано
48	47	Зарезервировано
49	48	Зарезервировано
50	49	Зарезервировано
51	50	Зарезервировано
52	51	Зарезервировано
53	52	Зарезервировано
54	53	Зарезервировано
55	54	Зарезервировано
56	55	Зарезервировано
57	56	Зарезервировано
58	57	Зарезервировано
59	58	Зарезервировано
60	59	Зарезервировано
61	60	Зарезервировано
62	61	Зарезервировано
63	62	Другие
64	63	Отсутствующее значение
\.


--
-- Name: bufr_code_002066_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002066_seq', 64, true);


--
-- Data for Name: bufr_code_002070; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002070 (id, code, description) FROM stdin;
1	0	Фактическое местоположние, в секундах
2	1	Фактическое местоположение, в минутах
3	2	Фактическое местоположение, в градусах
4	3	Фактическое местоположение, в дециградусах
5	4	Фактическое местоположение, в сантиградусах
6	5	Отсчет от контрольного пункта, в секундах
7	6	Отсчет от контрольного пункта, в минутах
8	7	Отсчет от контрольного пункта, в градусах
9	8	Отсчет от контрольного пункта, в дециградусах
10	9	Отсчет от контрольного пункта, в сантиградусах
11	10	Фактическое местоположение, в десятых долях минуты
12	11	Отсчет от контрольного пункта, в десятых долях минуты
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002070_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002070_seq', 16, true);


--
-- Data for Name: bufr_code_002080; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002080 (id, code, description) FROM stdin;
1	0	Kaysam
2	1	Totex
3	2	KKS
4	3	Зарезервировано
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Зарезервировано
33	32	Зарезервировано
34	33	Зарезервировано
35	34	Зарезервировано
36	35	Зарезервировано
37	36	Зарезервировано
38	37	Зарезервировано
39	38	Зарезервировано
40	39	Зарезервировано
41	40	Зарезервировано
42	41	Зарезервировано
43	42	Зарезервировано
44	43	Зарезервировано
45	44	Зарезервировано
46	45	Зарезервировано
47	46	Зарезервировано
48	47	Зарезервировано
49	48	Зарезервировано
50	49	Зарезервировано
51	50	Зарезервировано
52	51	Зарезервировано
53	52	Зарезервировано
54	53	Зарезервировано
55	54	Зарезервировано
56	55	Зарезервировано
57	56	Зарезервировано
58	57	Зарезервировано
59	58	Зарезервировано
60	59	Зарезервировано
61	60	Зарезервировано
62	61	Зарезервировано
63	62	Другие производители
64	63	Отсутствующее значение
\.


--
-- Name: bufr_code_002080_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002080_seq', 64, true);


--
-- Data for Name: bufr_code_002081; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002081 (id, code, description) FROM stdin;
1	0	GP26
2	1	GP28
3	2	GP30
4	3	HM26
5	4	HM28
6	5	HM30
7	6	SV16
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Другие типы
32	31	Отсутствующее значение
\.


--
-- Name: bufr_code_002081_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002081_seq', 32, true);


--
-- Data for Name: bufr_code_002083; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002083 (id, code, description) FROM stdin;
1	0	Высокий отсек
2	1	Низкий отсек
3	2	BILS (система наполнения и запуска шаров-зондов)
4	3	BILS в верхней части крыши
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Другие типы
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002083_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002083_seq', 16, true);


--
-- Data for Name: bufr_code_002084; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002084 (id, code, description) FROM stdin;
1	0	Водород
2	1	Гелий
3	2	Природный газ
4	3	Зарезервировано
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Другие типы
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002084_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002084_seq', 16, true);


--
-- Data for Name: bufr_code_002095; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002095 (id, code, description) FROM stdin;
1	0	Ёмкостный анероид
2	1	Производный от ГСОМ
3	2	Проволочный тензодатчик
4	3	Зарезервировано
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Другие типы
32	31	Отсутствующее значение
\.


--
-- Name: bufr_code_002095_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002095_seq', 32, true);


--
-- Data for Name: bufr_code_002096; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002096 (id, code, description) FROM stdin;
1	0	Стержневой термистор
2	1	Бусинковый термистор
3	2	Ёмкостная бусинка
4	3	Зарезервировано
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Другие типы
32	31	Отсутствующее значение
\.


--
-- Name: bufr_code_002096_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002096_seq', 32, true);


--
-- Data for Name: bufr_code_002097; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002097 (id, code, description) FROM stdin;
1	0	Угольный гигристор VIZ Mark II
2	1	Гигристор VIZ B2
3	2	Vaisala A-humicap
4	3	Vaisala H-humicap
5	4	Ёмкостный датчик
6	5	Vaisala RS90
7	6	Угольный гигристор Sippican Mark IIA
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Другие типы
32	31	Отсутствующее значение
\.


--
-- Name: bufr_code_002097_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002097_seq', 32, true);


--
-- Data for Name: bufr_code_002099; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002099 (id, code, description) FROM stdin;
1	0	Поляризация HH
2	1	Поляризация VV
3	2	Действительный компонент поляризации HV
4	3	Мнимый компонент поляризации HV
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_002099_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002099_seq', 8, true);


--
-- Data for Name: bufr_code_002101; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002101 (id, code, description) FROM stdin;
1	0	Параболическая с центральным возбуждением
2	1	Параболическая с боковым возбуждением
3	2	Параболическая антенна Кассегрена с центральным возбуждением
4	3	Параболическая антенна Кассегрена с боковым возбуждением
5	4	С плоской решеткой
6	5	Коаксильная коллинеарная антенная решетка
7	6	Антенная решетка из элементов Яги
8	7	Микрополоса
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Другие типы
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002101_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002101_seq', 16, true);


--
-- Data for Name: bufr_code_002103; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002103 (id, bit_number, description) FROM stdin;
1	1	Антенна радиолокатора защищена обтекателем
2	0	Отсутствующее значение
\.


--
-- Name: bufr_code_002103_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002103_seq', 2, true);


--
-- Data for Name: bufr_code_002104; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002104 (id, code, description) FROM stdin;
1	0	Горизонтальная поляризация
2	1	Вертикальная поляризация
3	2	Правосторонняя круговая поляризация
4	3	Левосторонняя круговая поляризация
5	4	Горизонтальная и вертикальная поляризация
6	5	Правая и левая круговая поляризация
7	6	Квазигоризонтальная поляризация
8	7	Квазивертикальная поляризация
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002104_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002104_seq', 16, true);


--
-- Data for Name: bufr_code_002115; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002115 (id, code, description) FROM stdin;
1	0	PDB
2	1	RSOIS
3	2	ASOS
4	3	Психрометр
5	4	F420
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Другие типы
32	31	Отсутствующее значение
\.


--
-- Name: bufr_code_002115_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002115_seq', 32, true);


--
-- Data for Name: bufr_code_002119; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002119 (id, code, description) FROM stdin;
1	0	Режим калибровки промежуточной частоты (IF CAL)
2	1	Встроенная аппаратура цифрового тестирования (BITE DGT)
3	2	Встроенная аппаратура радиочастотного тестирования (BITE RF)
4	3	Предустановленное слежение (PSET TRK)
5	4	Предустановленный режим LOOP OUT
6	5	ACQUISITION (прием)
7	6	TRACKING (слежение)
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_002119_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002119_seq', 8, true);


--
-- Data for Name: bufr_code_002131; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002131 (id, unknown0, unknown1) FROM stdin;
1	1	STC действующий
2	0	Отсутствующее значение
\.


--
-- Name: bufr_code_002131_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002131_seq', 2, true);


--
-- Data for Name: bufr_code_002137; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002137 (id, code, description) FROM stdin;
1	1	3:2
2	2	4:3
3	3	5:4
4	4	Зарезервировано
5	5	Зарезервировано
6	6	Зарезервировано
7	7	Зарезервировано
8	8	Зарезервировано
9	9	Зарезервировано
10	10	Зарезервировано
11	11	Зарезервировано
12	12	Зарезервировано
13	13	Зарезервировано
14	14	Зарезервировано
15	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002137_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002137_seq', 15, true);


--
-- Data for Name: bufr_code_002138; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002138 (id, code, description) FROM stdin;
1	1	Вращение по часовой стрелке
2	2	Вращение против часовой стрелки
3	3	Отсутствующее значение
\.


--
-- Name: bufr_code_002138_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002138_seq', 3, true);


--
-- Data for Name: bufr_code_002139; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002139 (id, code, description) FROM stdin;
1	0	SIRAL штатные
2	1	SIRAL резервный
3	2	Отсутствующее значение
\.


--
-- Name: bufr_code_002139_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002139_seq', 3, true);


--
-- Data for Name: bufr_code_002143; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002143 (id, code, description) FROM stdin;
1	0	Зарезервирована
2	1	Спектрофотометр Брюйера
3	2	Кавер Тейшерт
4	3	Добсон
5	4	Добсон (Япония)
6	5	Эхмет
7	6	Телескоп Фекера
8	7	Хельпер
9	8	Иодометр
10	9	Фильтрующий озонометр M-83
11	10	Маст
12	11	Оксфорд
13	12	Пецольд
14	13	Регенер
15	14	Зарезервирована для использования в будущем
16	15	Фильтрующий озонометр Васси
17	16	Иодид углерода
18	17	Барботёр для измерения приземного озона
19	18	Фильтрующий озонометр M-124
20	19	Зонд с электрохимическим элементом
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Зарезервировано
33	32	Зарезервировано
34	33	Зарезервировано
35	34	Зарезервировано
36	35	Зарезервировано
37	36	Зарезервировано
38	37	Зарезервировано
39	38	Зарезервировано
40	39	Зарезервировано
41	40	Зарезервировано
42	41	Зарезервировано
43	42	Зарезервировано
44	43	Зарезервировано
45	44	Зарезервировано
46	45	Зарезервировано
47	46	Зарезервировано
48	47	Зарезервировано
49	48	Зарезервировано
50	49	Зарезервировано
51	50	Зарезервировано
52	51	Зарезервировано
53	52	Зарезервировано
54	53	Зарезервировано
55	54	Зарезервировано
56	55	Зарезервировано
57	56	Зарезервировано
58	57	Зарезервировано
59	58	Зарезервировано
60	59	Зарезервировано
61	60	Зарезервировано
62	61	Зарезервировано
63	62	Зарезервировано
64	63	Зарезервировано
65	64	Зарезервировано
66	65	Зарезервировано
67	66	Зарезервировано
68	67	Зарезервировано
69	68	Зарезервировано
70	69	Зарезервировано
71	70	Зарезервировано
72	71	Зарезервировано
73	72	Зарезервировано
74	73	Зарезервировано
75	74	Зарезервировано
76	75	Зарезервировано
77	76	Зарезервировано
78	77	Зарезервировано
79	78	Зарезервировано
80	79	Зарезервировано
81	80	Зарезервировано
82	81	Зарезервировано
83	82	Зарезервировано
84	83	Зарезервировано
85	84	Зарезервировано
86	85	Зарезервировано
87	86	Зарезервировано
88	87	Зарезервировано
89	88	Зарезервировано
90	89	Зарезервировано
91	90	Зарезервировано
92	91	Зарезервировано
93	92	Зарезервировано
94	93	Зарезервировано
95	94	Зарезервировано
96	95	Зарезервировано
97	96	Зарезервировано
98	97	Зарезервировано
99	98	Зарезервировано
100	99	Зарезервировано
101	100	Зарезервировано
102	101	Зарезервировано
103	102	Зарезервировано
104	103	Зарезервировано
105	104	Зарезервировано
106	105	Зарезервировано
107	106	Зарезервировано
108	107	Зарезервировано
109	108	Зарезервировано
110	109	Зарезервировано
111	110	Зарезервировано
112	111	Зарезервировано
113	112	Зарезервировано
114	113	Зарезервировано
115	114	Зарезервировано
116	115	Зарезервировано
117	116	Зарезервировано
118	117	Зарезервировано
119	118	Зарезервировано
120	119	Зарезервировано
121	120	Зарезервировано
122	121	Зарезервировано
123	122	Зарезервировано
124	123	Зарезервировано
125	124	Зарезервировано
126	125	Зарезервировано
127	126	Зарезервировано
128	127	Отсутствующее значение
\.


--
-- Name: bufr_code_002143_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002143_seq', 128, true);


--
-- Data for Name: bufr_code_002144; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002144 (id, code, description) FROM stdin;
1	0	Прямое солнечное излучение
2	1	Прямое солнечное излучение, аттенюатор #1
3	2	Прямое солнечное излучение, аттенюатор #2
4	3	Точная установка на Луну
5	4	Точная установка на Солнце
6	5	Точная установка на Солнце с поправками по измерениям смежного неба
7	6	Излучение неба в зените
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002144_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002144_seq', 16, true);


--
-- Data for Name: bufr_code_002145; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002145 (id, code, description) FROM stdin;
1	0	Длина волны AD, обычная установка
2	1	Длина волны BD, обычная установка
3	2	Длина волны CD, обычная установка
4	3	Длина волны CC`, обычная установка
5	4	Длина волны AD, сфокусированное изображение
6	5	Длина волны BD, сфокусированное изображение
7	6	Длина волны CD, сфокусированное изображение
8	7	Длина волны CC`, сфокусированное изображение
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002145_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002145_seq', 16, true);


--
-- Data for Name: bufr_code_002146; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002146 (id, code, description) FROM stdin;
1	0	Прямое солнечное излучение
2	1	Прямое лунное излучение
3	2	Излучение безоблачного неба в зените
4	3	Облачность в зените (равномерная стратификация слоя незначительной непрозрачности)
5	4	Облачность в зените (равномерный или умеренно меняющийся слой средней непрозрачности)
6	5	Облачность в зените (равномерный или умеренно меняющийся слой значительной непрозрачности)
7	6	Облачность в зените (весьма переменная непрозрачность, с осадками или без осадков)
8	7	Облачность в зените (туман)
9	8	Дымка в зените
10	9	Прямое солнечное излучение через тонкий слой облаков, туман или дымку
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002146_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002146_seq', 16, true);


--
-- Data for Name: bufr_code_002148; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002148 (id, code, description) FROM stdin;
1	0	Зарезервировано
2	1	АРГОС
3	2	ГСОМ
4	3	ПСД ГОЕС
5	4	ПСД МЕТЕОСАТ
6	5	ОРБКОММ
7	6	ИНМАРСАТ
8	7	Иридиум
9	8	Иридиум и ГСОМ
10	9	АРГОС-3
11	10	АРГОС-4
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Отсутствующее значение
\.


--
-- Name: bufr_code_002148_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002148_seq', 32, true);


--
-- Data for Name: bufr_code_002149; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002149 (id, code, description) FROM stdin;
1	0	Неопределенный дрейфующий буй
2	1	Стандартный дрифтер Лагранжа (дрифтер глобальной программы)
3	2	Стандартный дрейфующий буй типа ПГЭП (метеорологический дрейфующий буй, отлич-ный от типа Лагранжа)
4	3	Дрейфующий буй типа ПГЭП для измерения ветра (метеорологический дрейфующий буй, отличный от типа Лагранжа)
5	4	Буй на льдине
6	5	Стандартный дрифтер Лагранжас с ГСОМ СВПГ*
7	6	Дрифтер с датчиком температуры с высоким разрешением или гирляндой терморезисторов СВП-ВР*
8	7	Зарезервировано
9	8	Неопределенный притопленный буй
10	9	SOFAR
11	10	ALACE
12	11	MARVOR
13	12	RAFOS
14	13	PROVOR
15	14	SOLO
16	15	APEX
17	16	Неопределенный заякоренный буй
18	17	Nomad
19	18	Трехметровый диск
20	19	10–12-метровый диск
21	20	Буй серии ODAS-30
22	21	ATLAS (например, зона ТАО)
23	22	Буй TRITON
24	23	Заякоренный буй FLEX (например, зона TIP)
25	24	Всенаправленный волномерный буй
26	25	Направленный волномерный буй
27	26	Притопленный буй ARGO
28	27	PALACE
29	28	NEMO
30	29	NINJA
31	30	Ледовый буй/поплавок (POPS или ITP)
32	31	Зарезервировано
33	32	Зарезервировано
34	33	Зарезервировано
35	34	Океанографический заякоренный буй
36	35	Метеорологический заякоренный буй
37	36	Междисциплинарный заякоренный буй (ОкеанСИТЕС)
38	37	Заякоренный буй с мареографом или буй для обнаружения волн цунами
39	38	Зарезервировано
40	39	Зарезервировано
41	40	Зарезервировано
42	41	Зарезервировано
43	42	Зарезервировано
44	43	Зарезервировано
45	44	Зарезервировано
46	45	Зарезервировано
47	46	Зарезервировано
48	47	Зарезервировано
49	48	Зарезервировано
50	49	Зарезервировано
51	50	Зарезервировано
52	51	Зарезервировано
53	52	Зарезервировано
54	53	Зарезервировано
55	54	Зарезервировано
56	55	Зарезервировано
57	56	Зарезервировано
58	57	Зарезервировано
59	58	Зарезервировано
60	59	Зарезервировано
61	60	Зарезервировано
62	61	Зарезервировано
63	62	Зарезервировано
64	63	Отсутствующее значение
\.


--
-- Name: bufr_code_002149_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002149_seq', 64, true);


--
-- Data for Name: bufr_code_002150; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002150 (id, code, description) FROM stdin;
1	0	Зарезервирована
2	1	HIRS 1
3	2	HIRS 2
4	3	HIRS 3
5	4	HIRS 4
6	5	HIRS 5
7	6	HIRS 6
8	7	HIRS 7
9	8	HIRS 8
10	9	HIRS 9
11	10	HIRS 10
12	11	HIRS 11
13	12	HIRS 12
14	13	HIRS 13
15	14	HIRS 14
16	15	HIRS 15
17	16	HIRS 16
18	17	HIRS 17
19	18	HIRS 18
20	19	HIRS 19
21	20	HIRS 20
22	21	MSU 1
23	22	MSU 2
24	23	MSU 3
25	24	MSU 4
26	25	SSU 1
27	26	SSU 2
28	27	SSU 3
29	28	AMSU–A 1
30	29	AMSU–A 2
31	30	AMSU–A 3
32	31	AMSU–A 4
33	32	AMSU–A 5
34	33	AMSU–A 6
35	34	AMSU–A 7
36	35	AMSU–A 8
37	36	AMSU–A 9
38	37	AMSU–A 10
39	38	AMSU–A 11
40	39	AMSU–A 12
41	40	AMSU–A 13
42	41	AMSU–A 14
43	42	AMSU–A 15
44	43	AMSU–B 1/MHS 1
45	44	AMSU–B 2/MHS 2
46	45	AMSU–B 3/MHS 3
47	46	AMSU–B 4/MHS 4
48	47	AMSU–B 5/MHS 5
49	48	AVHRR 1
50	49	AVHRR 2
51	50	AVHRR 3a
52	51	AVHRR 3b
53	52	AVHRR 4
54	53	AVHRR 5
55	54	Зарезервировано
56	55	Зарезервировано
57	56	Зарезервировано
58	57	Зарезервировано
59	58	Зарезервировано
60	59	Зарезервировано
61	60	Зарезервировано
62	61	Зарезервировано
63	62	Зарезервировано
64	63	Отсутствующее значение
\.


--
-- Name: bufr_code_002150_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002150_seq', 64, true);


--
-- Data for Name: bufr_code_002151; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002151 (id, code, description) FROM stdin;
1	0	HIRS
2	1	MSU
3	2	SSU
4	3	AMSU–A1–1
5	4	AMSU–A1–2
6	5	AMSU–A2
7	6	AMSU–B
8	7	AVHRR
9	8	Зарезервировано
10	9	MHS
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Зарезервировано
33	32	Зарезервировано
34	33	Зарезервировано
35	34	Зарезервировано
36	35	Зарезервировано
37	36	Зарезервировано
38	37	Зарезервировано
39	38	Зарезервировано
40	39	Зарезервировано
41	40	Зарезервировано
42	41	Зарезервировано
43	42	Зарезервировано
44	43	Зарезервировано
45	44	Зарезервировано
46	45	Зарезервировано
47	46	Зарезервировано
48	47	Зарезервировано
49	48	Зарезервировано
50	49	Зарезервировано
51	50	Зарезервировано
52	51	Зарезервировано
53	52	Зарезервировано
54	53	Зарезервировано
55	54	Зарезервировано
56	55	Зарезервировано
57	56	Зарезервировано
58	57	Зарезервировано
59	58	Зарезервировано
60	59	Зарезервировано
61	60	Зарезервировано
62	61	Зарезервировано
63	62	Зарезервировано
64	63	Зарезервировано
65	64	Зарезервировано
66	65	Зарезервировано
67	66	Зарезервировано
68	67	Зарезервировано
69	68	Зарезервировано
70	69	Зарезервировано
71	70	Зарезервировано
72	71	Зарезервировано
73	72	Зарезервировано
74	73	Зарезервировано
75	74	Зарезервировано
76	75	Зарезервировано
77	76	Зарезервировано
78	77	Зарезервировано
79	78	Зарезервировано
80	79	Зарезервировано
81	80	Зарезервировано
82	81	Зарезервировано
83	82	Зарезервировано
84	83	Зарезервировано
85	84	Зарезервировано
86	85	Зарезервировано
87	86	Зарезервировано
88	87	Зарезервировано
89	88	Зарезервировано
90	89	Зарезервировано
91	90	Зарезервировано
92	91	Зарезервировано
93	92	Зарезервировано
94	93	Зарезервировано
95	94	Зарезервировано
96	95	Зарезервировано
97	96	Зарезервировано
98	97	Зарезервировано
99	98	Зарезервировано
100	99	Зарезервировано
101	100	Зарезервировано
102	101	Зарезервировано
103	102	Зарезервировано
104	103	Зарезервировано
105	104	Зарезервировано
106	105	Зарезервировано
107	106	Зарезервировано
108	107	Зарезервировано
109	108	Зарезервировано
110	109	Зарезервировано
111	110	Зарезервировано
112	111	Зарезервировано
113	112	Зарезервировано
114	113	Зарезервировано
115	114	Зарезервировано
116	115	Зарезервировано
117	116	Зарезервировано
118	117	Зарезервировано
119	118	Зарезервировано
120	119	Зарезервировано
121	120	Зарезервировано
122	121	Зарезервировано
123	122	Зарезервировано
124	123	Зарезервировано
125	124	Зарезервировано
126	125	Зарезервировано
127	126	Зарезервировано
128	127	Зарезервировано
129	128	Зарезервировано
130	129	Зарезервировано
131	130	Зарезервировано
132	131	Зарезервировано
133	132	Зарезервировано
134	133	Зарезервировано
135	134	Зарезервировано
136	135	Зарезервировано
137	136	Зарезервировано
138	137	Зарезервировано
139	138	Зарезервировано
140	139	Зарезервировано
141	140	Зарезервировано
142	141	Зарезервировано
143	142	Зарезервировано
144	143	Зарезервировано
145	144	Зарезервировано
146	145	Зарезервировано
147	146	Зарезервировано
148	147	Зарезервировано
149	148	Зарезервировано
150	149	Зарезервировано
151	150	Зарезервировано
152	151	Зарезервировано
153	152	Зарезервировано
154	153	Зарезервировано
155	154	Зарезервировано
156	155	Зарезервировано
157	156	Зарезервировано
158	157	Зарезервировано
159	158	Зарезервировано
160	159	Зарезервировано
161	160	Зарезервировано
162	161	Зарезервировано
163	162	Зарезервировано
164	163	Зарезервировано
165	164	Зарезервировано
166	165	Зарезервировано
167	166	Зарезервировано
168	167	Зарезервировано
169	168	Зарезервировано
170	169	Зарезервировано
171	170	Зарезервировано
172	171	Зарезервировано
173	172	Зарезервировано
174	173	Зарезервировано
175	174	Зарезервировано
176	175	Зарезервировано
177	176	Зарезервировано
178	177	Зарезервировано
179	178	Зарезервировано
180	179	Зарезервировано
181	180	Зарезервировано
182	181	Зарезервировано
183	182	Зарезервировано
184	183	Зарезервировано
185	184	Зарезервировано
186	185	Зарезервировано
187	186	Зарезервировано
188	187	Зарезервировано
189	188	Зарезервировано
190	189	Зарезервировано
191	190	Зарезервировано
192	191	Зарезервировано
193	192	Зарезервировано
194	193	Зарезервировано
195	194	Зарезервировано
196	195	Зарезервировано
197	196	Зарезервировано
198	197	Зарезервировано
199	198	Зарезервировано
200	199	Зарезервировано
201	200	Зарезервировано
202	201	Зарезервировано
203	202	Зарезервировано
204	203	Зарезервировано
205	204	Зарезервировано
206	205	Зарезервировано
207	206	Зарезервировано
208	207	Зарезервировано
209	208	Зарезервировано
210	209	Зарезервировано
211	210	Зарезервировано
212	211	Зарезервировано
213	212	Зарезервировано
214	213	Зарезервировано
215	214	Зарезервировано
216	215	Зарезервировано
217	216	Зарезервировано
218	217	Зарезервировано
219	218	Зарезервировано
220	219	Зарезервировано
221	220	Зарезервировано
222	221	Зарезервировано
223	222	Зарезервировано
224	223	Зарезервировано
225	224	Зарезервировано
226	225	Зарезервировано
227	226	Зарезервировано
228	227	Зарезервировано
229	228	Зарезервировано
230	229	Зарезервировано
231	230	Зарезервировано
232	231	Зарезервировано
233	232	Зарезервировано
234	233	Зарезервировано
235	234	Зарезервировано
236	235	Зарезервировано
237	236	Зарезервировано
238	237	Зарезервировано
239	238	Зарезервировано
240	239	Зарезервировано
241	240	Зарезервировано
242	241	Зарезервировано
243	242	Зарезервировано
244	243	Зарезервировано
245	244	Зарезервировано
246	245	Зарезервировано
247	246	Зарезервировано
248	247	Зарезервировано
249	248	Зарезервировано
250	249	Зарезервировано
251	250	Зарезервировано
252	251	Зарезервировано
253	252	Зарезервировано
254	253	Зарезервировано
255	254	Зарезервировано
256	255	Зарезервировано
257	256	Зарезервировано
258	257	Зарезервировано
259	258	Зарезервировано
260	259	Зарезервировано
261	260	Зарезервировано
262	261	Зарезервировано
263	262	Зарезервировано
264	263	Зарезервировано
265	264	Зарезервировано
266	265	Зарезервировано
267	266	Зарезервировано
268	267	Зарезервировано
269	268	Зарезервировано
270	269	Зарезервировано
271	270	Зарезервировано
272	271	Зарезервировано
273	272	Зарезервировано
274	273	Зарезервировано
275	274	Зарезервировано
276	275	Зарезервировано
277	276	Зарезервировано
278	277	Зарезервировано
279	278	Зарезервировано
280	279	Зарезервировано
281	280	Зарезервировано
282	281	Зарезервировано
283	282	Зарезервировано
284	283	Зарезервировано
285	284	Зарезервировано
286	285	Зарезервировано
287	286	Зарезервировано
288	287	Зарезервировано
289	288	Зарезервировано
290	289	Зарезервировано
291	290	Зарезервировано
292	291	Зарезервировано
293	292	Зарезервировано
294	293	Зарезервировано
295	294	Зарезервировано
296	295	Зарезервировано
297	296	Зарезервировано
298	297	Зарезервировано
299	298	Зарезервировано
300	299	Зарезервировано
301	300	Зарезервировано
302	301	Зарезервировано
303	302	Зарезервировано
304	303	Зарезервировано
305	304	Зарезервировано
306	305	Зарезервировано
307	306	Зарезервировано
308	307	Зарезервировано
309	308	Зарезервировано
310	309	Зарезервировано
311	310	Зарезервировано
312	311	Зарезервировано
313	312	Зарезервировано
314	313	Зарезервировано
315	314	Зарезервировано
316	315	Зарезервировано
317	316	Зарезервировано
318	317	Зарезервировано
319	318	Зарезервировано
320	319	Зарезервировано
321	320	Зарезервировано
322	321	Зарезервировано
323	322	Зарезервировано
324	323	Зарезервировано
325	324	Зарезервировано
326	325	Зарезервировано
327	326	Зарезервировано
328	327	Зарезервировано
329	328	Зарезервировано
330	329	Зарезервировано
331	330	Зарезервировано
332	331	Зарезервировано
333	332	Зарезервировано
334	333	Зарезервировано
335	334	Зарезервировано
336	335	Зарезервировано
337	336	Зарезервировано
338	337	Зарезервировано
339	338	Зарезервировано
340	339	Зарезервировано
341	340	Зарезервировано
342	341	Зарезервировано
343	342	Зарезервировано
344	343	Зарезервировано
345	344	Зарезервировано
346	345	Зарезервировано
347	346	Зарезервировано
348	347	Зарезервировано
349	348	Зарезервировано
350	349	Зарезервировано
351	350	Зарезервировано
352	351	Зарезервировано
353	352	Зарезервировано
354	353	Зарезервировано
355	354	Зарезервировано
356	355	Зарезервировано
357	356	Зарезервировано
358	357	Зарезервировано
359	358	Зарезервировано
360	359	Зарезервировано
361	360	Зарезервировано
362	361	Зарезервировано
363	362	Зарезервировано
364	363	Зарезервировано
365	364	Зарезервировано
366	365	Зарезервировано
367	366	Зарезервировано
368	367	Зарезервировано
369	368	Зарезервировано
370	369	Зарезервировано
371	370	Зарезервировано
372	371	Зарезервировано
373	372	Зарезервировано
374	373	Зарезервировано
375	374	Зарезервировано
376	375	Зарезервировано
377	376	Зарезервировано
378	377	Зарезервировано
379	378	Зарезервировано
380	379	Зарезервировано
381	380	Зарезервировано
382	381	Зарезервировано
383	382	Зарезервировано
384	383	Зарезервировано
385	384	Зарезервировано
386	385	Зарезервировано
387	386	Зарезервировано
388	387	Зарезервировано
389	388	Зарезервировано
390	389	Зарезервировано
391	390	Зарезервировано
392	391	Зарезервировано
393	392	Зарезервировано
394	393	Зарезервировано
395	394	Зарезервировано
396	395	Зарезервировано
397	396	Зарезервировано
398	397	Зарезервировано
399	398	Зарезервировано
400	399	Зарезервировано
401	400	Зарезервировано
402	401	Зарезервировано
403	402	Зарезервировано
404	403	Зарезервировано
405	404	Зарезервировано
406	405	Зарезервировано
407	406	Зарезервировано
408	407	Зарезервировано
409	408	Зарезервировано
410	409	Зарезервировано
411	410	Зарезервировано
412	411	Зарезервировано
413	412	Зарезервировано
414	413	Зарезервировано
415	414	Зарезервировано
416	415	Зарезервировано
417	416	Зарезервировано
418	417	Зарезервировано
419	418	Зарезервировано
420	419	Зарезервировано
421	420	Зарезервировано
422	421	Зарезервировано
423	422	Зарезервировано
424	423	Зарезервировано
425	424	Зарезервировано
426	425	Зарезервировано
427	426	Зарезервировано
428	427	Зарезервировано
429	428	Зарезервировано
430	429	Зарезервировано
431	430	Зарезервировано
432	431	Зарезервировано
433	432	Зарезервировано
434	433	Зарезервировано
435	434	Зарезервировано
436	435	Зарезервировано
437	436	Зарезервировано
438	437	Зарезервировано
439	438	Зарезервировано
440	439	Зарезервировано
441	440	Зарезервировано
442	441	Зарезервировано
443	442	Зарезервировано
444	443	Зарезервировано
445	444	Зарезервировано
446	445	Зарезервировано
447	446	Зарезервировано
448	447	Зарезервировано
449	448	Зарезервировано
450	449	Зарезервировано
451	450	Зарезервировано
452	451	Зарезервировано
453	452	Зарезервировано
454	453	Зарезервировано
455	454	Зарезервировано
456	455	Зарезервировано
457	456	Зарезервировано
458	457	Зарезервировано
459	458	Зарезервировано
460	459	Зарезервировано
461	460	Зарезервировано
462	461	Зарезервировано
463	462	Зарезервировано
464	463	Зарезервировано
465	464	Зарезервировано
466	465	Зарезервировано
467	466	Зарезервировано
468	467	Зарезервировано
469	468	Зарезервировано
470	469	Зарезервировано
471	470	Зарезервировано
472	471	Зарезервировано
473	472	Зарезервировано
474	473	Зарезервировано
475	474	Зарезервировано
476	475	Зарезервировано
477	476	Зарезервировано
478	477	Зарезервировано
479	478	Зарезервировано
480	479	Зарезервировано
481	480	Зарезервировано
482	481	Зарезервировано
483	482	Зарезервировано
484	483	Зарезервировано
485	484	Зарезервировано
486	485	Зарезервировано
487	486	Зарезервировано
488	487	Зарезервировано
489	488	Зарезервировано
490	489	Зарезервировано
491	490	Зарезервировано
492	491	Зарезервировано
493	492	Зарезервировано
494	493	Зарезервировано
495	494	Зарезервировано
496	495	Зарезервировано
497	496	Зарезервировано
498	497	Зарезервировано
499	498	Зарезервировано
500	499	Зарезервировано
501	500	Зарезервировано
502	501	Зарезервировано
503	502	Зарезервировано
504	503	Зарезервировано
505	504	Зарезервировано
506	505	Зарезервировано
507	506	Зарезервировано
508	507	Зарезервировано
509	508	Зарезервировано
510	509	Зарезервировано
511	510	Зарезервировано
512	511	Зарезервировано
513	512	Зарезервировано
514	513	Зарезервировано
515	514	Зарезервировано
516	515	Зарезервировано
517	516	Зарезервировано
518	517	Зарезервировано
519	518	Зарезервировано
520	519	Зарезервировано
521	520	Зарезервировано
522	521	Зарезервировано
523	522	Зарезервировано
524	523	Зарезервировано
525	524	Зарезервировано
526	525	Зарезервировано
527	526	Зарезервировано
528	527	Зарезервировано
529	528	Зарезервировано
530	529	Зарезервировано
531	530	Зарезервировано
532	531	Зарезервировано
533	532	Зарезервировано
534	533	Зарезервировано
535	534	Зарезервировано
536	535	Зарезервировано
537	536	Зарезервировано
538	537	Зарезервировано
539	538	Зарезервировано
540	539	Зарезервировано
541	540	Зарезервировано
542	541	Зарезервировано
543	542	Зарезервировано
544	543	Зарезервировано
545	544	Зарезервировано
546	545	Зарезервировано
547	546	Зарезервировано
548	547	Зарезервировано
549	548	Зарезервировано
550	549	Зарезервировано
551	550	Зарезервировано
552	551	Зарезервировано
553	552	Зарезервировано
554	553	Зарезервировано
555	554	Зарезервировано
556	555	Зарезервировано
557	556	Зарезервировано
558	557	Зарезервировано
559	558	Зарезервировано
560	559	Зарезервировано
561	560	Зарезервировано
562	561	Зарезервировано
563	562	Зарезервировано
564	563	Зарезервировано
565	564	Зарезервировано
566	565	Зарезервировано
567	566	Зарезервировано
568	567	Зарезервировано
569	568	Зарезервировано
570	569	Зарезервировано
571	570	Зарезервировано
572	571	Зарезервировано
573	572	Зарезервировано
574	573	Зарезервировано
575	574	Зарезервировано
576	575	Зарезервировано
577	576	Зарезервировано
578	577	Зарезервировано
579	578	Зарезервировано
580	579	Зарезервировано
581	580	Зарезервировано
582	581	Зарезервировано
583	582	Зарезервировано
584	583	Зарезервировано
585	584	Зарезервировано
586	585	Зарезервировано
587	586	Зарезервировано
588	587	Зарезервировано
589	588	Зарезервировано
590	589	Зарезервировано
591	590	Зарезервировано
592	591	Зарезервировано
593	592	Зарезервировано
594	593	Зарезервировано
595	594	Зарезервировано
596	595	Зарезервировано
597	596	Зарезервировано
598	597	Зарезервировано
599	598	Зарезервировано
600	599	Зарезервировано
601	600	Зарезервировано
602	601	Зарезервировано
603	602	Зарезервировано
604	603	Зарезервировано
605	604	Зарезервировано
606	605	Зарезервировано
607	606	Зарезервировано
608	607	Зарезервировано
609	608	Зарезервировано
610	609	Зарезервировано
611	610	Зарезервировано
612	611	Зарезервировано
613	612	Зарезервировано
614	613	Зарезервировано
615	614	Зарезервировано
616	615	Зарезервировано
617	616	Зарезервировано
618	617	Зарезервировано
619	618	Зарезервировано
620	619	Зарезервировано
621	620	Зарезервировано
622	621	Зарезервировано
623	622	Зарезервировано
624	623	Зарезервировано
625	624	Зарезервировано
626	625	Зарезервировано
627	626	Зарезервировано
628	627	Зарезервировано
629	628	Зарезервировано
630	629	Зарезервировано
631	630	Зарезервировано
632	631	Зарезервировано
633	632	Зарезервировано
634	633	Зарезервировано
635	634	Зарезервировано
636	635	Зарезервировано
637	636	Зарезервировано
638	637	Зарезервировано
639	638	Зарезервировано
640	639	Зарезервировано
641	640	Зарезервировано
642	641	Зарезервировано
643	642	Зарезервировано
644	643	Зарезервировано
645	644	Зарезервировано
646	645	Зарезервировано
647	646	Зарезервировано
648	647	Зарезервировано
649	648	Зарезервировано
650	649	Зарезервировано
651	650	Зарезервировано
652	651	Зарезервировано
653	652	Зарезервировано
654	653	Зарезервировано
655	654	Зарезервировано
656	655	Зарезервировано
657	656	Зарезервировано
658	657	Зарезервировано
659	658	Зарезервировано
660	659	Зарезервировано
661	660	Зарезервировано
662	661	Зарезервировано
663	662	Зарезервировано
664	663	Зарезервировано
665	664	Зарезервировано
666	665	Зарезервировано
667	666	Зарезервировано
668	667	Зарезервировано
669	668	Зарезервировано
670	669	Зарезервировано
671	670	Зарезервировано
672	671	Зарезервировано
673	672	Зарезервировано
674	673	Зарезервировано
675	674	Зарезервировано
676	675	Зарезервировано
677	676	Зарезервировано
678	677	Зарезервировано
679	678	Зарезервировано
680	679	Зарезервировано
681	680	Зарезервировано
682	681	Зарезервировано
683	682	Зарезервировано
684	683	Зарезервировано
685	684	Зарезервировано
686	685	Зарезервировано
687	686	Зарезервировано
688	687	Зарезервировано
689	688	Зарезервировано
690	689	Зарезервировано
691	690	Зарезервировано
692	691	Зарезервировано
693	692	Зарезервировано
694	693	Зарезервировано
695	694	Зарезервировано
696	695	Зарезервировано
697	696	Зарезервировано
698	697	Зарезервировано
699	698	Зарезервировано
700	699	Зарезервировано
701	700	Зарезервировано
702	701	Зарезервировано
703	702	Зарезервировано
704	703	Зарезервировано
705	704	Зарезервировано
706	705	Зарезервировано
707	706	Зарезервировано
708	707	Зарезервировано
709	708	Зарезервировано
710	709	Зарезервировано
711	710	Зарезервировано
712	711	Зарезервировано
713	712	Зарезервировано
714	713	Зарезервировано
715	714	Зарезервировано
716	715	Зарезервировано
717	716	Зарезервировано
718	717	Зарезервировано
719	718	Зарезервировано
720	719	Зарезервировано
721	720	Зарезервировано
722	721	Зарезервировано
723	722	Зарезервировано
724	723	Зарезервировано
725	724	Зарезервировано
726	725	Зарезервировано
727	726	Зарезервировано
728	727	Зарезервировано
729	728	Зарезервировано
730	729	Зарезервировано
731	730	Зарезервировано
732	731	Зарезервировано
733	732	Зарезервировано
734	733	Зарезервировано
735	734	Зарезервировано
736	735	Зарезервировано
737	736	Зарезервировано
738	737	Зарезервировано
739	738	Зарезервировано
740	739	Зарезервировано
741	740	Зарезервировано
742	741	Зарезервировано
743	742	Зарезервировано
744	743	Зарезервировано
745	744	Зарезервировано
746	745	Зарезервировано
747	746	Зарезервировано
748	747	Зарезервировано
749	748	Зарезервировано
750	749	Зарезервировано
751	750	Зарезервировано
752	751	Зарезервировано
753	752	Зарезервировано
754	753	Зарезервировано
755	754	Зарезервировано
756	755	Зарезервировано
757	756	Зарезервировано
758	757	Зарезервировано
759	758	Зарезервировано
760	759	Зарезервировано
761	760	Зарезервировано
762	761	Зарезервировано
763	762	Зарезервировано
764	763	Зарезервировано
765	764	Зарезервировано
766	765	Зарезервировано
767	766	Зарезервировано
768	767	Зарезервировано
769	768	Зарезервировано
770	769	Зарезервировано
771	770	Зарезервировано
772	771	Зарезервировано
773	772	Зарезервировано
774	773	Зарезервировано
775	774	Зарезервировано
776	775	Зарезервировано
777	776	Зарезервировано
778	777	Зарезервировано
779	778	Зарезервировано
780	779	Зарезервировано
781	780	Зарезервировано
782	781	Зарезервировано
783	782	Зарезервировано
784	783	Зарезервировано
785	784	Зарезервировано
786	785	Зарезервировано
787	786	Зарезервировано
788	787	Зарезервировано
789	788	Зарезервировано
790	789	Зарезервировано
791	790	Зарезервировано
792	791	Зарезервировано
793	792	Зарезервировано
794	793	Зарезервировано
795	794	Зарезервировано
796	795	Зарезервировано
797	796	Зарезервировано
798	797	Зарезервировано
799	798	Зарезервировано
800	799	Зарезервировано
801	800	Зарезервировано
802	801	Зарезервировано
803	802	Зарезервировано
804	803	Зарезервировано
805	804	Зарезервировано
806	805	Зарезервировано
807	806	Зарезервировано
808	807	Зарезервировано
809	808	Зарезервировано
810	809	Зарезервировано
811	810	Зарезервировано
812	811	Зарезервировано
813	812	Зарезервировано
814	813	Зарезервировано
815	814	Зарезервировано
816	815	Зарезервировано
817	816	Зарезервировано
818	817	Зарезервировано
819	818	Зарезервировано
820	819	Зарезервировано
821	820	Зарезервировано
822	821	Зарезервировано
823	822	Зарезервировано
824	823	Зарезервировано
825	824	Зарезервировано
826	825	Зарезервировано
827	826	Зарезервировано
828	827	Зарезервировано
829	828	Зарезервировано
830	829	Зарезервировано
831	830	Зарезервировано
832	831	Зарезервировано
833	832	Зарезервировано
834	833	Зарезервировано
835	834	Зарезервировано
836	835	Зарезервировано
837	836	Зарезервировано
838	837	Зарезервировано
839	838	Зарезервировано
840	839	Зарезервировано
841	840	Зарезервировано
842	841	Зарезервировано
843	842	Зарезервировано
844	843	Зарезервировано
845	844	Зарезервировано
846	845	Зарезервировано
847	846	Зарезервировано
848	847	Зарезервировано
849	848	Зарезервировано
850	849	Зарезервировано
851	850	Зарезервировано
852	851	Зарезервировано
853	852	Зарезервировано
854	853	Зарезервировано
855	854	Зарезервировано
856	855	Зарезервировано
857	856	Зарезервировано
858	857	Зарезервировано
859	858	Зарезервировано
860	859	Зарезервировано
861	860	Зарезервировано
862	861	Зарезервировано
863	862	Зарезервировано
864	863	Зарезервировано
865	864	Зарезервировано
866	865	Зарезервировано
867	866	Зарезервировано
868	867	Зарезервировано
869	868	Зарезервировано
870	869	Зарезервировано
871	870	Зарезервировано
872	871	Зарезервировано
873	872	Зарезервировано
874	873	Зарезервировано
875	874	Зарезервировано
876	875	Зарезервировано
877	876	Зарезервировано
878	877	Зарезервировано
879	878	Зарезервировано
880	879	Зарезервировано
881	880	Зарезервировано
882	881	Зарезервировано
883	882	Зарезервировано
884	883	Зарезервировано
885	884	Зарезервировано
886	885	Зарезервировано
887	886	Зарезервировано
888	887	Зарезервировано
889	888	Зарезервировано
890	889	Зарезервировано
891	890	Зарезервировано
892	891	Зарезервировано
893	892	Зарезервировано
894	893	Зарезервировано
895	894	Зарезервировано
896	895	Зарезервировано
897	896	Зарезервировано
898	897	Зарезервировано
899	898	Зарезервировано
900	899	Зарезервировано
901	900	Зарезервировано
902	901	Зарезервировано
903	902	Зарезервировано
904	903	Зарезервировано
905	904	Зарезервировано
906	905	Зарезервировано
907	906	Зарезервировано
908	907	Зарезервировано
909	908	Зарезервировано
910	909	Зарезервировано
911	910	Зарезервировано
912	911	Зарезервировано
913	912	Зарезервировано
914	913	Зарезервировано
915	914	Зарезервировано
916	915	Зарезервировано
917	916	Зарезервировано
918	917	Зарезервировано
919	918	Зарезервировано
920	919	Зарезервировано
921	920	Зарезервировано
922	921	Зарезервировано
923	922	Зарезервировано
924	923	Зарезервировано
925	924	Зарезервировано
926	925	Зарезервировано
927	926	Зарезервировано
928	927	Зарезервировано
929	928	Зарезервировано
930	929	Зарезервировано
931	930	Зарезервировано
932	931	Зарезервировано
933	932	Зарезервировано
934	933	Зарезервировано
935	934	Зарезервировано
936	935	Зарезервировано
937	936	Зарезервировано
938	937	Зарезервировано
939	938	Зарезервировано
940	939	Зарезервировано
941	940	Зарезервировано
942	941	Зарезервировано
943	942	Зарезервировано
944	943	Зарезервировано
945	944	Зарезервировано
946	945	Зарезервировано
947	946	Зарезервировано
948	947	Зарезервировано
949	948	Зарезервировано
950	949	Зарезервировано
951	950	Зарезервировано
952	951	Зарезервировано
953	952	Зарезервировано
954	953	Зарезервировано
955	954	Зарезервировано
956	955	Зарезервировано
957	956	Зарезервировано
958	957	Зарезервировано
959	958	Зарезервировано
960	959	Зарезервировано
961	960	Зарезервировано
962	961	Зарезервировано
963	962	Зарезервировано
964	963	Зарезервировано
965	964	Зарезервировано
966	965	Зарезервировано
967	966	Зарезервировано
968	967	Зарезервировано
969	968	Зарезервировано
970	969	Зарезервировано
971	970	Зарезервировано
972	971	Зарезервировано
973	972	Зарезервировано
974	973	Зарезервировано
975	974	Зарезервировано
976	975	Зарезервировано
977	976	Зарезервировано
978	977	Зарезервировано
979	978	Зарезервировано
980	979	Зарезервировано
981	980	Зарезервировано
982	981	Зарезервировано
983	982	Зарезервировано
984	983	Зарезервировано
985	984	Зарезервировано
986	985	Зарезервировано
987	986	Зарезервировано
988	987	Зарезервировано
989	988	Зарезервировано
990	989	Зарезервировано
991	990	Зарезервировано
992	991	Зарезервировано
993	992	Зарезервировано
994	993	Зарезервировано
995	994	Зарезервировано
996	995	Зарезервировано
997	996	Зарезервировано
998	997	Зарезервировано
999	998	Зарезервировано
1000	999	Зарезервировано
1001	1000	Зарезервировано
1002	1001	Зарезервировано
1003	1002	Зарезервировано
1004	1003	Зарезервировано
1005	1004	Зарезервировано
1006	1005	Зарезервировано
1007	1006	Зарезервировано
1008	1007	Зарезервировано
1009	1008	Зарезервировано
1010	1009	Зарезервировано
1011	1010	Зарезервировано
1012	1011	Зарезервировано
1013	1012	Зарезервировано
1014	1013	Зарезервировано
1015	1014	Зарезервировано
1016	1015	Зарезервировано
1017	1016	Зарезервировано
1018	1017	Зарезервировано
1019	1018	Зарезервировано
1020	1019	Зарезервировано
1021	1020	Зарезервировано
1022	1021	Зарезервировано
1023	1022	Зарезервировано
1024	1023	Зарезервировано
1025	1024	Зарезервировано
1026	1025	Зарезервировано
1027	1026	Зарезервировано
1028	1027	Зарезервировано
1029	1028	Зарезервировано
1030	1029	Зарезервировано
1031	1030	Зарезервировано
1032	1031	Зарезервировано
1033	1032	Зарезервировано
1034	1033	Зарезервировано
1035	1034	Зарезервировано
1036	1035	Зарезервировано
1037	1036	Зарезервировано
1038	1037	Зарезервировано
1039	1038	Зарезервировано
1040	1039	Зарезервировано
1041	1040	Зарезервировано
1042	1041	Зарезервировано
1043	1042	Зарезервировано
1044	1043	Зарезервировано
1045	1044	Зарезервировано
1046	1045	Зарезервировано
1047	1046	Зарезервировано
1048	1047	Зарезервировано
1049	1048	Зарезервировано
1050	1049	Зарезервировано
1051	1050	Зарезервировано
1052	1051	Зарезервировано
1053	1052	Зарезервировано
1054	1053	Зарезервировано
1055	1054	Зарезервировано
1056	1055	Зарезервировано
1057	1056	Зарезервировано
1058	1057	Зарезервировано
1059	1058	Зарезервировано
1060	1059	Зарезервировано
1061	1060	Зарезервировано
1062	1061	Зарезервировано
1063	1062	Зарезервировано
1064	1063	Зарезервировано
1065	1064	Зарезервировано
1066	1065	Зарезервировано
1067	1066	Зарезервировано
1068	1067	Зарезервировано
1069	1068	Зарезервировано
1070	1069	Зарезервировано
1071	1070	Зарезервировано
1072	1071	Зарезервировано
1073	1072	Зарезервировано
1074	1073	Зарезервировано
1075	1074	Зарезервировано
1076	1075	Зарезервировано
1077	1076	Зарезервировано
1078	1077	Зарезервировано
1079	1078	Зарезервировано
1080	1079	Зарезервировано
1081	1080	Зарезервировано
1082	1081	Зарезервировано
1083	1082	Зарезервировано
1084	1083	Зарезервировано
1085	1084	Зарезервировано
1086	1085	Зарезервировано
1087	1086	Зарезервировано
1088	1087	Зарезервировано
1089	1088	Зарезервировано
1090	1089	Зарезервировано
1091	1090	Зарезервировано
1092	1091	Зарезервировано
1093	1092	Зарезервировано
1094	1093	Зарезервировано
1095	1094	Зарезервировано
1096	1095	Зарезервировано
1097	1096	Зарезервировано
1098	1097	Зарезервировано
1099	1098	Зарезервировано
1100	1099	Зарезервировано
1101	1100	Зарезервировано
1102	1101	Зарезервировано
1103	1102	Зарезервировано
1104	1103	Зарезервировано
1105	1104	Зарезервировано
1106	1105	Зарезервировано
1107	1106	Зарезервировано
1108	1107	Зарезервировано
1109	1108	Зарезервировано
1110	1109	Зарезервировано
1111	1110	Зарезервировано
1112	1111	Зарезервировано
1113	1112	Зарезервировано
1114	1113	Зарезервировано
1115	1114	Зарезервировано
1116	1115	Зарезервировано
1117	1116	Зарезервировано
1118	1117	Зарезервировано
1119	1118	Зарезервировано
1120	1119	Зарезервировано
1121	1120	Зарезервировано
1122	1121	Зарезервировано
1123	1122	Зарезервировано
1124	1123	Зарезервировано
1125	1124	Зарезервировано
1126	1125	Зарезервировано
1127	1126	Зарезервировано
1128	1127	Зарезервировано
1129	1128	Зарезервировано
1130	1129	Зарезервировано
1131	1130	Зарезервировано
1132	1131	Зарезервировано
1133	1132	Зарезервировано
1134	1133	Зарезервировано
1135	1134	Зарезервировано
1136	1135	Зарезервировано
1137	1136	Зарезервировано
1138	1137	Зарезервировано
1139	1138	Зарезервировано
1140	1139	Зарезервировано
1141	1140	Зарезервировано
1142	1141	Зарезервировано
1143	1142	Зарезервировано
1144	1143	Зарезервировано
1145	1144	Зарезервировано
1146	1145	Зарезервировано
1147	1146	Зарезервировано
1148	1147	Зарезервировано
1149	1148	Зарезервировано
1150	1149	Зарезервировано
1151	1150	Зарезервировано
1152	1151	Зарезервировано
1153	1152	Зарезервировано
1154	1153	Зарезервировано
1155	1154	Зарезервировано
1156	1155	Зарезервировано
1157	1156	Зарезервировано
1158	1157	Зарезервировано
1159	1158	Зарезервировано
1160	1159	Зарезервировано
1161	1160	Зарезервировано
1162	1161	Зарезервировано
1163	1162	Зарезервировано
1164	1163	Зарезервировано
1165	1164	Зарезервировано
1166	1165	Зарезервировано
1167	1166	Зарезервировано
1168	1167	Зарезервировано
1169	1168	Зарезервировано
1170	1169	Зарезервировано
1171	1170	Зарезервировано
1172	1171	Зарезервировано
1173	1172	Зарезервировано
1174	1173	Зарезервировано
1175	1174	Зарезервировано
1176	1175	Зарезервировано
1177	1176	Зарезервировано
1178	1177	Зарезервировано
1179	1178	Зарезервировано
1180	1179	Зарезервировано
1181	1180	Зарезервировано
1182	1181	Зарезервировано
1183	1182	Зарезервировано
1184	1183	Зарезервировано
1185	1184	Зарезервировано
1186	1185	Зарезервировано
1187	1186	Зарезервировано
1188	1187	Зарезервировано
1189	1188	Зарезервировано
1190	1189	Зарезервировано
1191	1190	Зарезервировано
1192	1191	Зарезервировано
1193	1192	Зарезервировано
1194	1193	Зарезервировано
1195	1194	Зарезервировано
1196	1195	Зарезервировано
1197	1196	Зарезервировано
1198	1197	Зарезервировано
1199	1198	Зарезервировано
1200	1199	Зарезервировано
1201	1200	Зарезервировано
1202	1201	Зарезервировано
1203	1202	Зарезервировано
1204	1203	Зарезервировано
1205	1204	Зарезервировано
1206	1205	Зарезервировано
1207	1206	Зарезервировано
1208	1207	Зарезервировано
1209	1208	Зарезервировано
1210	1209	Зарезервировано
1211	1210	Зарезервировано
1212	1211	Зарезервировано
1213	1212	Зарезервировано
1214	1213	Зарезервировано
1215	1214	Зарезервировано
1216	1215	Зарезервировано
1217	1216	Зарезервировано
1218	1217	Зарезервировано
1219	1218	Зарезервировано
1220	1219	Зарезервировано
1221	1220	Зарезервировано
1222	1221	Зарезервировано
1223	1222	Зарезервировано
1224	1223	Зарезервировано
1225	1224	Зарезервировано
1226	1225	Зарезервировано
1227	1226	Зарезервировано
1228	1227	Зарезервировано
1229	1228	Зарезервировано
1230	1229	Зарезервировано
1231	1230	Зарезервировано
1232	1231	Зарезервировано
1233	1232	Зарезервировано
1234	1233	Зарезервировано
1235	1234	Зарезервировано
1236	1235	Зарезервировано
1237	1236	Зарезервировано
1238	1237	Зарезервировано
1239	1238	Зарезервировано
1240	1239	Зарезервировано
1241	1240	Зарезервировано
1242	1241	Зарезервировано
1243	1242	Зарезервировано
1244	1243	Зарезервировано
1245	1244	Зарезервировано
1246	1245	Зарезервировано
1247	1246	Зарезервировано
1248	1247	Зарезервировано
1249	1248	Зарезервировано
1250	1249	Зарезервировано
1251	1250	Зарезервировано
1252	1251	Зарезервировано
1253	1252	Зарезервировано
1254	1253	Зарезервировано
1255	1254	Зарезервировано
1256	1255	Зарезервировано
1257	1256	Зарезервировано
1258	1257	Зарезервировано
1259	1258	Зарезервировано
1260	1259	Зарезервировано
1261	1260	Зарезервировано
1262	1261	Зарезервировано
1263	1262	Зарезервировано
1264	1263	Зарезервировано
1265	1264	Зарезервировано
1266	1265	Зарезервировано
1267	1266	Зарезервировано
1268	1267	Зарезервировано
1269	1268	Зарезервировано
1270	1269	Зарезервировано
1271	1270	Зарезервировано
1272	1271	Зарезервировано
1273	1272	Зарезервировано
1274	1273	Зарезервировано
1275	1274	Зарезервировано
1276	1275	Зарезервировано
1277	1276	Зарезервировано
1278	1277	Зарезервировано
1279	1278	Зарезервировано
1280	1279	Зарезервировано
1281	1280	Зарезервировано
1282	1281	Зарезервировано
1283	1282	Зарезервировано
1284	1283	Зарезервировано
1285	1284	Зарезервировано
1286	1285	Зарезервировано
1287	1286	Зарезервировано
1288	1287	Зарезервировано
1289	1288	Зарезервировано
1290	1289	Зарезервировано
1291	1290	Зарезервировано
1292	1291	Зарезервировано
1293	1292	Зарезервировано
1294	1293	Зарезервировано
1295	1294	Зарезервировано
1296	1295	Зарезервировано
1297	1296	Зарезервировано
1298	1297	Зарезервировано
1299	1298	Зарезервировано
1300	1299	Зарезервировано
1301	1300	Зарезервировано
1302	1301	Зарезервировано
1303	1302	Зарезервировано
1304	1303	Зарезервировано
1305	1304	Зарезервировано
1306	1305	Зарезервировано
1307	1306	Зарезервировано
1308	1307	Зарезервировано
1309	1308	Зарезервировано
1310	1309	Зарезервировано
1311	1310	Зарезервировано
1312	1311	Зарезервировано
1313	1312	Зарезервировано
1314	1313	Зарезервировано
1315	1314	Зарезервировано
1316	1315	Зарезервировано
1317	1316	Зарезервировано
1318	1317	Зарезервировано
1319	1318	Зарезервировано
1320	1319	Зарезервировано
1321	1320	Зарезервировано
1322	1321	Зарезервировано
1323	1322	Зарезервировано
1324	1323	Зарезервировано
1325	1324	Зарезервировано
1326	1325	Зарезервировано
1327	1326	Зарезервировано
1328	1327	Зарезервировано
1329	1328	Зарезервировано
1330	1329	Зарезервировано
1331	1330	Зарезервировано
1332	1331	Зарезервировано
1333	1332	Зарезервировано
1334	1333	Зарезервировано
1335	1334	Зарезервировано
1336	1335	Зарезервировано
1337	1336	Зарезервировано
1338	1337	Зарезервировано
1339	1338	Зарезервировано
1340	1339	Зарезервировано
1341	1340	Зарезервировано
1342	1341	Зарезервировано
1343	1342	Зарезервировано
1344	1343	Зарезервировано
1345	1344	Зарезервировано
1346	1345	Зарезервировано
1347	1346	Зарезервировано
1348	1347	Зарезервировано
1349	1348	Зарезервировано
1350	1349	Зарезервировано
1351	1350	Зарезервировано
1352	1351	Зарезервировано
1353	1352	Зарезервировано
1354	1353	Зарезервировано
1355	1354	Зарезервировано
1356	1355	Зарезервировано
1357	1356	Зарезервировано
1358	1357	Зарезервировано
1359	1358	Зарезервировано
1360	1359	Зарезервировано
1361	1360	Зарезервировано
1362	1361	Зарезервировано
1363	1362	Зарезервировано
1364	1363	Зарезервировано
1365	1364	Зарезервировано
1366	1365	Зарезервировано
1367	1366	Зарезервировано
1368	1367	Зарезервировано
1369	1368	Зарезервировано
1370	1369	Зарезервировано
1371	1370	Зарезервировано
1372	1371	Зарезервировано
1373	1372	Зарезервировано
1374	1373	Зарезервировано
1375	1374	Зарезервировано
1376	1375	Зарезервировано
1377	1376	Зарезервировано
1378	1377	Зарезервировано
1379	1378	Зарезервировано
1380	1379	Зарезервировано
1381	1380	Зарезервировано
1382	1381	Зарезервировано
1383	1382	Зарезервировано
1384	1383	Зарезервировано
1385	1384	Зарезервировано
1386	1385	Зарезервировано
1387	1386	Зарезервировано
1388	1387	Зарезервировано
1389	1388	Зарезервировано
1390	1389	Зарезервировано
1391	1390	Зарезервировано
1392	1391	Зарезервировано
1393	1392	Зарезервировано
1394	1393	Зарезервировано
1395	1394	Зарезервировано
1396	1395	Зарезервировано
1397	1396	Зарезервировано
1398	1397	Зарезервировано
1399	1398	Зарезервировано
1400	1399	Зарезервировано
1401	1400	Зарезервировано
1402	1401	Зарезервировано
1403	1402	Зарезервировано
1404	1403	Зарезервировано
1405	1404	Зарезервировано
1406	1405	Зарезервировано
1407	1406	Зарезервировано
1408	1407	Зарезервировано
1409	1408	Зарезервировано
1410	1409	Зарезервировано
1411	1410	Зарезервировано
1412	1411	Зарезервировано
1413	1412	Зарезервировано
1414	1413	Зарезервировано
1415	1414	Зарезервировано
1416	1415	Зарезервировано
1417	1416	Зарезервировано
1418	1417	Зарезервировано
1419	1418	Зарезервировано
1420	1419	Зарезервировано
1421	1420	Зарезервировано
1422	1421	Зарезервировано
1423	1422	Зарезервировано
1424	1423	Зарезервировано
1425	1424	Зарезервировано
1426	1425	Зарезервировано
1427	1426	Зарезервировано
1428	1427	Зарезервировано
1429	1428	Зарезервировано
1430	1429	Зарезервировано
1431	1430	Зарезервировано
1432	1431	Зарезервировано
1433	1432	Зарезервировано
1434	1433	Зарезервировано
1435	1434	Зарезервировано
1436	1435	Зарезервировано
1437	1436	Зарезервировано
1438	1437	Зарезервировано
1439	1438	Зарезервировано
1440	1439	Зарезервировано
1441	1440	Зарезервировано
1442	1441	Зарезервировано
1443	1442	Зарезервировано
1444	1443	Зарезервировано
1445	1444	Зарезервировано
1446	1445	Зарезервировано
1447	1446	Зарезервировано
1448	1447	Зарезервировано
1449	1448	Зарезервировано
1450	1449	Зарезервировано
1451	1450	Зарезервировано
1452	1451	Зарезервировано
1453	1452	Зарезервировано
1454	1453	Зарезервировано
1455	1454	Зарезервировано
1456	1455	Зарезервировано
1457	1456	Зарезервировано
1458	1457	Зарезервировано
1459	1458	Зарезервировано
1460	1459	Зарезервировано
1461	1460	Зарезервировано
1462	1461	Зарезервировано
1463	1462	Зарезервировано
1464	1463	Зарезервировано
1465	1464	Зарезервировано
1466	1465	Зарезервировано
1467	1466	Зарезервировано
1468	1467	Зарезервировано
1469	1468	Зарезервировано
1470	1469	Зарезервировано
1471	1470	Зарезервировано
1472	1471	Зарезервировано
1473	1472	Зарезервировано
1474	1473	Зарезервировано
1475	1474	Зарезервировано
1476	1475	Зарезервировано
1477	1476	Зарезервировано
1478	1477	Зарезервировано
1479	1478	Зарезервировано
1480	1479	Зарезервировано
1481	1480	Зарезервировано
1482	1481	Зарезервировано
1483	1482	Зарезервировано
1484	1483	Зарезервировано
1485	1484	Зарезервировано
1486	1485	Зарезервировано
1487	1486	Зарезервировано
1488	1487	Зарезервировано
1489	1488	Зарезервировано
1490	1489	Зарезервировано
1491	1490	Зарезервировано
1492	1491	Зарезервировано
1493	1492	Зарезервировано
1494	1493	Зарезервировано
1495	1494	Зарезервировано
1496	1495	Зарезервировано
1497	1496	Зарезервировано
1498	1497	Зарезервировано
1499	1498	Зарезервировано
1500	1499	Зарезервировано
1501	1500	Зарезервировано
1502	1501	Зарезервировано
1503	1502	Зарезервировано
1504	1503	Зарезервировано
1505	1504	Зарезервировано
1506	1505	Зарезервировано
1507	1506	Зарезервировано
1508	1507	Зарезервировано
1509	1508	Зарезервировано
1510	1509	Зарезервировано
1511	1510	Зарезервировано
1512	1511	Зарезервировано
1513	1512	Зарезервировано
1514	1513	Зарезервировано
1515	1514	Зарезервировано
1516	1515	Зарезервировано
1517	1516	Зарезервировано
1518	1517	Зарезервировано
1519	1518	Зарезервировано
1520	1519	Зарезервировано
1521	1520	Зарезервировано
1522	1521	Зарезервировано
1523	1522	Зарезервировано
1524	1523	Зарезервировано
1525	1524	Зарезервировано
1526	1525	Зарезервировано
1527	1526	Зарезервировано
1528	1527	Зарезервировано
1529	1528	Зарезервировано
1530	1529	Зарезервировано
1531	1530	Зарезервировано
1532	1531	Зарезервировано
1533	1532	Зарезервировано
1534	1533	Зарезервировано
1535	1534	Зарезервировано
1536	1535	Зарезервировано
1537	1536	Зарезервировано
1538	1537	Зарезервировано
1539	1538	Зарезервировано
1540	1539	Зарезервировано
1541	1540	Зарезервировано
1542	1541	Зарезервировано
1543	1542	Зарезервировано
1544	1543	Зарезервировано
1545	1544	Зарезервировано
1546	1545	Зарезервировано
1547	1546	Зарезервировано
1548	1547	Зарезервировано
1549	1548	Зарезервировано
1550	1549	Зарезервировано
1551	1550	Зарезервировано
1552	1551	Зарезервировано
1553	1552	Зарезервировано
1554	1553	Зарезервировано
1555	1554	Зарезервировано
1556	1555	Зарезервировано
1557	1556	Зарезервировано
1558	1557	Зарезервировано
1559	1558	Зарезервировано
1560	1559	Зарезервировано
1561	1560	Зарезервировано
1562	1561	Зарезервировано
1563	1562	Зарезервировано
1564	1563	Зарезервировано
1565	1564	Зарезервировано
1566	1565	Зарезервировано
1567	1566	Зарезервировано
1568	1567	Зарезервировано
1569	1568	Зарезервировано
1570	1569	Зарезервировано
1571	1570	Зарезервировано
1572	1571	Зарезервировано
1573	1572	Зарезервировано
1574	1573	Зарезервировано
1575	1574	Зарезервировано
1576	1575	Зарезервировано
1577	1576	Зарезервировано
1578	1577	Зарезервировано
1579	1578	Зарезервировано
1580	1579	Зарезервировано
1581	1580	Зарезервировано
1582	1581	Зарезервировано
1583	1582	Зарезервировано
1584	1583	Зарезервировано
1585	1584	Зарезервировано
1586	1585	Зарезервировано
1587	1586	Зарезервировано
1588	1587	Зарезервировано
1589	1588	Зарезервировано
1590	1589	Зарезервировано
1591	1590	Зарезервировано
1592	1591	Зарезервировано
1593	1592	Зарезервировано
1594	1593	Зарезервировано
1595	1594	Зарезервировано
1596	1595	Зарезервировано
1597	1596	Зарезервировано
1598	1597	Зарезервировано
1599	1598	Зарезервировано
1600	1599	Зарезервировано
1601	1600	Зарезервировано
1602	1601	Зарезервировано
1603	1602	Зарезервировано
1604	1603	Зарезервировано
1605	1604	Зарезервировано
1606	1605	Зарезервировано
1607	1606	Зарезервировано
1608	1607	Зарезервировано
1609	1608	Зарезервировано
1610	1609	Зарезервировано
1611	1610	Зарезервировано
1612	1611	Зарезервировано
1613	1612	Зарезервировано
1614	1613	Зарезервировано
1615	1614	Зарезервировано
1616	1615	Зарезервировано
1617	1616	Зарезервировано
1618	1617	Зарезервировано
1619	1618	Зарезервировано
1620	1619	Зарезервировано
1621	1620	Зарезервировано
1622	1621	Зарезервировано
1623	1622	Зарезервировано
1624	1623	Зарезервировано
1625	1624	Зарезервировано
1626	1625	Зарезервировано
1627	1626	Зарезервировано
1628	1627	Зарезервировано
1629	1628	Зарезервировано
1630	1629	Зарезервировано
1631	1630	Зарезервировано
1632	1631	Зарезервировано
1633	1632	Зарезервировано
1634	1633	Зарезервировано
1635	1634	Зарезервировано
1636	1635	Зарезервировано
1637	1636	Зарезервировано
1638	1637	Зарезервировано
1639	1638	Зарезервировано
1640	1639	Зарезервировано
1641	1640	Зарезервировано
1642	1641	Зарезервировано
1643	1642	Зарезервировано
1644	1643	Зарезервировано
1645	1644	Зарезервировано
1646	1645	Зарезервировано
1647	1646	Зарезервировано
1648	1647	Зарезервировано
1649	1648	Зарезервировано
1650	1649	Зарезервировано
1651	1650	Зарезервировано
1652	1651	Зарезервировано
1653	1652	Зарезервировано
1654	1653	Зарезервировано
1655	1654	Зарезервировано
1656	1655	Зарезервировано
1657	1656	Зарезервировано
1658	1657	Зарезервировано
1659	1658	Зарезервировано
1660	1659	Зарезервировано
1661	1660	Зарезервировано
1662	1661	Зарезервировано
1663	1662	Зарезервировано
1664	1663	Зарезервировано
1665	1664	Зарезервировано
1666	1665	Зарезервировано
1667	1666	Зарезервировано
1668	1667	Зарезервировано
1669	1668	Зарезервировано
1670	1669	Зарезервировано
1671	1670	Зарезервировано
1672	1671	Зарезервировано
1673	1672	Зарезервировано
1674	1673	Зарезервировано
1675	1674	Зарезервировано
1676	1675	Зарезервировано
1677	1676	Зарезервировано
1678	1677	Зарезервировано
1679	1678	Зарезервировано
1680	1679	Зарезервировано
1681	1680	Зарезервировано
1682	1681	Зарезервировано
1683	1682	Зарезервировано
1684	1683	Зарезервировано
1685	1684	Зарезервировано
1686	1685	Зарезервировано
1687	1686	Зарезервировано
1688	1687	Зарезервировано
1689	1688	Зарезервировано
1690	1689	Зарезервировано
1691	1690	Зарезервировано
1692	1691	Зарезервировано
1693	1692	Зарезервировано
1694	1693	Зарезервировано
1695	1694	Зарезервировано
1696	1695	Зарезервировано
1697	1696	Зарезервировано
1698	1697	Зарезервировано
1699	1698	Зарезервировано
1700	1699	Зарезервировано
1701	1700	Зарезервировано
1702	1701	Зарезервировано
1703	1702	Зарезервировано
1704	1703	Зарезервировано
1705	1704	Зарезервировано
1706	1705	Зарезервировано
1707	1706	Зарезервировано
1708	1707	Зарезервировано
1709	1708	Зарезервировано
1710	1709	Зарезервировано
1711	1710	Зарезервировано
1712	1711	Зарезервировано
1713	1712	Зарезервировано
1714	1713	Зарезервировано
1715	1714	Зарезервировано
1716	1715	Зарезервировано
1717	1716	Зарезервировано
1718	1717	Зарезервировано
1719	1718	Зарезервировано
1720	1719	Зарезервировано
1721	1720	Зарезервировано
1722	1721	Зарезервировано
1723	1722	Зарезервировано
1724	1723	Зарезервировано
1725	1724	Зарезервировано
1726	1725	Зарезервировано
1727	1726	Зарезервировано
1728	1727	Зарезервировано
1729	1728	Зарезервировано
1730	1729	Зарезервировано
1731	1730	Зарезервировано
1732	1731	Зарезервировано
1733	1732	Зарезервировано
1734	1733	Зарезервировано
1735	1734	Зарезервировано
1736	1735	Зарезервировано
1737	1736	Зарезервировано
1738	1737	Зарезервировано
1739	1738	Зарезервировано
1740	1739	Зарезервировано
1741	1740	Зарезервировано
1742	1741	Зарезервировано
1743	1742	Зарезервировано
1744	1743	Зарезервировано
1745	1744	Зарезервировано
1746	1745	Зарезервировано
1747	1746	Зарезервировано
1748	1747	Зарезервировано
1749	1748	Зарезервировано
1750	1749	Зарезервировано
1751	1750	Зарезервировано
1752	1751	Зарезервировано
1753	1752	Зарезервировано
1754	1753	Зарезервировано
1755	1754	Зарезервировано
1756	1755	Зарезервировано
1757	1756	Зарезервировано
1758	1757	Зарезервировано
1759	1758	Зарезервировано
1760	1759	Зарезервировано
1761	1760	Зарезервировано
1762	1761	Зарезервировано
1763	1762	Зарезервировано
1764	1763	Зарезервировано
1765	1764	Зарезервировано
1766	1765	Зарезервировано
1767	1766	Зарезервировано
1768	1767	Зарезервировано
1769	1768	Зарезервировано
1770	1769	Зарезервировано
1771	1770	Зарезервировано
1772	1771	Зарезервировано
1773	1772	Зарезервировано
1774	1773	Зарезервировано
1775	1774	Зарезервировано
1776	1775	Зарезервировано
1777	1776	Зарезервировано
1778	1777	Зарезервировано
1779	1778	Зарезервировано
1780	1779	Зарезервировано
1781	1780	Зарезервировано
1782	1781	Зарезервировано
1783	1782	Зарезервировано
1784	1783	Зарезервировано
1785	1784	Зарезервировано
1786	1785	Зарезервировано
1787	1786	Зарезервировано
1788	1787	Зарезервировано
1789	1788	Зарезервировано
1790	1789	Зарезервировано
1791	1790	Зарезервировано
1792	1791	Зарезервировано
1793	1792	Зарезервировано
1794	1793	Зарезервировано
1795	1794	Зарезервировано
1796	1795	Зарезервировано
1797	1796	Зарезервировано
1798	1797	Зарезервировано
1799	1798	Зарезервировано
1800	1799	Зарезервировано
1801	1800	Зарезервировано
1802	1801	Зарезервировано
1803	1802	Зарезервировано
1804	1803	Зарезервировано
1805	1804	Зарезервировано
1806	1805	Зарезервировано
1807	1806	Зарезервировано
1808	1807	Зарезервировано
1809	1808	Зарезервировано
1810	1809	Зарезервировано
1811	1810	Зарезервировано
1812	1811	Зарезервировано
1813	1812	Зарезервировано
1814	1813	Зарезервировано
1815	1814	Зарезервировано
1816	1815	Зарезервировано
1817	1816	Зарезервировано
1818	1817	Зарезервировано
1819	1818	Зарезервировано
1820	1819	Зарезервировано
1821	1820	Зарезервировано
1822	1821	Зарезервировано
1823	1822	Зарезервировано
1824	1823	Зарезервировано
1825	1824	Зарезервировано
1826	1825	Зарезервировано
1827	1826	Зарезервировано
1828	1827	Зарезервировано
1829	1828	Зарезервировано
1830	1829	Зарезервировано
1831	1830	Зарезервировано
1832	1831	Зарезервировано
1833	1832	Зарезервировано
1834	1833	Зарезервировано
1835	1834	Зарезервировано
1836	1835	Зарезервировано
1837	1836	Зарезервировано
1838	1837	Зарезервировано
1839	1838	Зарезервировано
1840	1839	Зарезервировано
1841	1840	Зарезервировано
1842	1841	Зарезервировано
1843	1842	Зарезервировано
1844	1843	Зарезервировано
1845	1844	Зарезервировано
1846	1845	Зарезервировано
1847	1846	Зарезервировано
1848	1847	Зарезервировано
1849	1848	Зарезервировано
1850	1849	Зарезервировано
1851	1850	Зарезервировано
1852	1851	Зарезервировано
1853	1852	Зарезервировано
1854	1853	Зарезервировано
1855	1854	Зарезервировано
1856	1855	Зарезервировано
1857	1856	Зарезервировано
1858	1857	Зарезервировано
1859	1858	Зарезервировано
1860	1859	Зарезервировано
1861	1860	Зарезервировано
1862	1861	Зарезервировано
1863	1862	Зарезервировано
1864	1863	Зарезервировано
1865	1864	Зарезервировано
1866	1865	Зарезервировано
1867	1866	Зарезервировано
1868	1867	Зарезервировано
1869	1868	Зарезервировано
1870	1869	Зарезервировано
1871	1870	Зарезервировано
1872	1871	Зарезервировано
1873	1872	Зарезервировано
1874	1873	Зарезервировано
1875	1874	Зарезервировано
1876	1875	Зарезервировано
1877	1876	Зарезервировано
1878	1877	Зарезервировано
1879	1878	Зарезервировано
1880	1879	Зарезервировано
1881	1880	Зарезервировано
1882	1881	Зарезервировано
1883	1882	Зарезервировано
1884	1883	Зарезервировано
1885	1884	Зарезервировано
1886	1885	Зарезервировано
1887	1886	Зарезервировано
1888	1887	Зарезервировано
1889	1888	Зарезервировано
1890	1889	Зарезервировано
1891	1890	Зарезервировано
1892	1891	Зарезервировано
1893	1892	Зарезервировано
1894	1893	Зарезервировано
1895	1894	Зарезервировано
1896	1895	Зарезервировано
1897	1896	Зарезервировано
1898	1897	Зарезервировано
1899	1898	Зарезервировано
1900	1899	Зарезервировано
1901	1900	Зарезервировано
1902	1901	Зарезервировано
1903	1902	Зарезервировано
1904	1903	Зарезервировано
1905	1904	Зарезервировано
1906	1905	Зарезервировано
1907	1906	Зарезервировано
1908	1907	Зарезервировано
1909	1908	Зарезервировано
1910	1909	Зарезервировано
1911	1910	Зарезервировано
1912	1911	Зарезервировано
1913	1912	Зарезервировано
1914	1913	Зарезервировано
1915	1914	Зарезервировано
1916	1915	Зарезервировано
1917	1916	Зарезервировано
1918	1917	Зарезервировано
1919	1918	Зарезервировано
1920	1919	Зарезервировано
1921	1920	Зарезервировано
1922	1921	Зарезервировано
1923	1922	Зарезервировано
1924	1923	Зарезервировано
1925	1924	Зарезервировано
1926	1925	Зарезервировано
1927	1926	Зарезервировано
1928	1927	Зарезервировано
1929	1928	Зарезервировано
1930	1929	Зарезервировано
1931	1930	Зарезервировано
1932	1931	Зарезервировано
1933	1932	Зарезервировано
1934	1933	Зарезервировано
1935	1934	Зарезервировано
1936	1935	Зарезервировано
1937	1936	Зарезервировано
1938	1937	Зарезервировано
1939	1938	Зарезервировано
1940	1939	Зарезервировано
1941	1940	Зарезервировано
1942	1941	Зарезервировано
1943	1942	Зарезервировано
1944	1943	Зарезервировано
1945	1944	Зарезервировано
1946	1945	Зарезервировано
1947	1946	Зарезервировано
1948	1947	Зарезервировано
1949	1948	Зарезервировано
1950	1949	Зарезервировано
1951	1950	Зарезервировано
1952	1951	Зарезервировано
1953	1952	Зарезервировано
1954	1953	Зарезервировано
1955	1954	Зарезервировано
1956	1955	Зарезервировано
1957	1956	Зарезервировано
1958	1957	Зарезервировано
1959	1958	Зарезервировано
1960	1959	Зарезервировано
1961	1960	Зарезервировано
1962	1961	Зарезервировано
1963	1962	Зарезервировано
1964	1963	Зарезервировано
1965	1964	Зарезервировано
1966	1965	Зарезервировано
1967	1966	Зарезервировано
1968	1967	Зарезервировано
1969	1968	Зарезервировано
1970	1969	Зарезервировано
1971	1970	Зарезервировано
1972	1971	Зарезервировано
1973	1972	Зарезервировано
1974	1973	Зарезервировано
1975	1974	Зарезервировано
1976	1975	Зарезервировано
1977	1976	Зарезервировано
1978	1977	Зарезервировано
1979	1978	Зарезервировано
1980	1979	Зарезервировано
1981	1980	Зарезервировано
1982	1981	Зарезервировано
1983	1982	Зарезервировано
1984	1983	Зарезервировано
1985	1984	Зарезервировано
1986	1985	Зарезервировано
1987	1986	Зарезервировано
1988	1987	Зарезервировано
1989	1988	Зарезервировано
1990	1989	Зарезервировано
1991	1990	Зарезервировано
1992	1991	Зарезервировано
1993	1992	Зарезервировано
1994	1993	Зарезервировано
1995	1994	Зарезервировано
1996	1995	Зарезервировано
1997	1996	Зарезервировано
1998	1997	Зарезервировано
1999	1998	Зарезервировано
2000	1999	Зарезервировано
2001	2000	Зарезервировано
2002	2001	Зарезервировано
2003	2002	Зарезервировано
2004	2003	Зарезервировано
2005	2004	Зарезервировано
2006	2005	Зарезервировано
2007	2006	Зарезервировано
2008	2007	Зарезервировано
2009	2008	Зарезервировано
2010	2009	Зарезервировано
2011	2010	Зарезервировано
2012	2011	Зарезервировано
2013	2012	Зарезервировано
2014	2013	Зарезервировано
2015	2014	Зарезервировано
2016	2015	Зарезервировано
2017	2016	Зарезервировано
2018	2017	Зарезервировано
2019	2018	Зарезервировано
2020	2019	Зарезервировано
2021	2020	Зарезервировано
2022	2021	Зарезервировано
2023	2022	Зарезервировано
2024	2023	Зарезервировано
2025	2024	Зарезервировано
2026	2025	Зарезервировано
2027	2026	Зарезервировано
2028	2027	Зарезервировано
2029	2028	Зарезервировано
2030	2029	Зарезервировано
2031	2030	Зарезервировано
2032	2031	Зарезервировано
2033	2032	Зарезервировано
2034	2033	Зарезервировано
2035	2034	Зарезервировано
2036	2035	Зарезервировано
2037	2036	Зарезервировано
2038	2037	Зарезервировано
2039	2038	Зарезервировано
2040	2039	Зарезервировано
2041	2040	Зарезервировано
2042	2041	Зарезервировано
2043	2042	Зарезервировано
2044	2043	Зарезервировано
2045	2044	Зарезервировано
2046	2045	Зарезервировано
2047	2046	Зарезервировано
2048	2047	Отсутствующее значение
\.


--
-- Name: bufr_code_002151_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002151_seq', 2048, true);


--
-- Data for Name: bufr_code_002152; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002152 (id, bit_number, description) FROM stdin;
1	1	ИК-зонд с высокой разрешающей способностью (HIRS)
2	2	Микроволновый зонд (MSU)
3	3	Станция зондирования атмосферы (SSU)
4	4	Активный микроволновый прибор для режима ветра (AMI)
5	5	Активный микроволновый прибор для режима волн (AMI)
6	6	Активный микроволновый прибор для режима изображения (AMI)
7	7	Альтиметр RADAR
8	8	ATSR
9	9	Прибор для получения изображений, установленный на геостационарном спутнике
10	10	Зонд, установленный на геостационарном спутнике
11	11	Прибор для геостационарного измерения радиации Земли (GERB)
12	12	Многоканальный сканирующий радиометр
13	13	Прибор для получения изображений, установленный на полярно-орбитальном спутнике
14	14	Зарезервировано
15	15	Зарезервировано
16	16	Зарезервировано
17	17	Зарезервировано
18	18	Зарезервировано
19	19	Зарезервировано
20	20	Зарезервировано
21	21	Зарезервировано
22	22	Зарезервировано
23	23	Зарезервировано
24	24	Зарезервировано
25	25	Зарезервировано
26	26	Зарезервировано
27	27	Зарезервировано
28	28	Зарезервировано
29	29	Зарезервировано
30	30	Зарезервировано
31	0	Отсутствующее значение
\.


--
-- Name: bufr_code_002152_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002152_seq', 31, true);


--
-- Data for Name: bufr_code_002158; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002158 (id, bit_number, description) FROM stdin;
1	1	Несоответствие вектора (VEC) избыточности (RED) в HPA
2	2	Несоответствие вектора (VEC) избыточности (RED) в RFSS
3	3	Полоса калибровки PTR 320 МГц (полоса частот Ku)
4	4	Полоса калибровки PTR 80 МГц (полоса частот Ku)
5	5	Полоса калибровки PTR 20 МГц (полоса частот Ku)
6	6	Полоса калибровки PTR 160 МГц (полоса частот S)
7	7	Доступные параметры полетной калибровки в полосе частот Ku
8	8	Доступные параметры полетной калибровки в полосе частот S
9	0	Отсутствующее значение
\.


--
-- Name: bufr_code_002158_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002158_seq', 9, true);


--
-- Data for Name: bufr_code_002159; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002159 (id, bit_number, description) FROM stdin;
1	1	Несовместимость температуры
2	2	Данные отсутствуют
3	3	Резервный канал
4	4	Защита шины питания
5	5	Защита от перенапряжения/перегрузки
6	6	Зарезервировано
7	7	Зарезервировано
8	0	Отсутствующее значение
\.


--
-- Name: bufr_code_002159_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002159_seq', 8, true);


--
-- Data for Name: bufr_code_002160; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002160 (id, code, description) FROM stdin;
1	0	Зарезервировано
2	1	От 10 до менее 20 мм
3	2	Зарезервировано
4	3	От 20 до менее 40 мм
5	4	Зарезервировано
6	5	От 40 до менее 60 мм
7	6	Зарезервировано
8	7	От 60 до менее 90 мм
9	8	От 90 до менее 110 мм
10	9	От 110 мм и больше
11	10	Не используются
12	11	Не используются
13	12	Не используются
14	13	Не используются
15	14	Не используются
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002160_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002160_seq', 16, true);


--
-- Data for Name: bufr_code_002163; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002163 (id, code, description) FROM stdin;
1	0	Авторедактор
2	1	Определение высоты в инфракрасном канале (IRW)
3	2	Определение высоты в канале водяного пара (WV)
4	3	Определение высоты в канале H2O методом перехвата
5	4	Определение высоты в канале СO2 методом слоирования
6	5	Максимальный градиент в элементах изображения с низкой разрешающей способностью
7	6	Максимальный градиент в элементах изображения с более высокой разрешающей способностью
8	7	Предварительное определение высоты
9	8	Определение толщины слоя
10	9	Интегральная функция вклада — высота 10 %
11	10	Интегральная функция вклада — высота 50 %
12	11	Интегральная функция вклада — высота 90 %
13	12	Интегральная функция вклада — высота максимального градиента
14	13	Метод соотношения в инфракрасном канале/двух каналах водяного пара
15	14	Комбинированный способ задания высоты
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002163_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002163_seq', 16, true);


--
-- Data for Name: bufr_code_002164; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002164 (id, code, description) FROM stdin;
1	0	Минимальные нормы LP по методу наименьших квадратов
2	1	Евклидова норма EN с корреляцией излучения
3	2	Взаимная корреляция СС
4	3	Зарезервировано
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_002164_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002164_seq', 8, true);


--
-- Data for Name: bufr_code_002165; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002165 (id, bit_number, description) FROM stdin;
1	1	Траектория над поверхностью, не закрытой облаками
2	2	Траектория над частично закрытой облаками поверхностью
3	3	Траектория над закрытой облаками поверхностью
4	4	Аподизированное
5	5	Неаподизированное
6	6	Восстановленное
7	7	Свободное от облаков
8	8	Зарезервировано
9	9	Зарезервировано
10	10	Зарезервировано
11	11	Зарезервировано
12	12	Зарезервировано
13	13	Зарезервировано
14	14	Зарезервировано
15	0	Отсутствующее значение
\.


--
-- Name: bufr_code_002165_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002165_seq', 15, true);


--
-- Data for Name: bufr_code_002166; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002166 (id, code, description) FROM stdin;
1	0	Тип не определен
2	1	Автоматическая статистическая регрессия
3	2	Безоблачная полоса
4	3	Полоса, частично занятая облаками
5	4	Облачная полоса
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002166_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002166_seq', 16, true);


--
-- Data for Name: bufr_code_002167; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002167 (id, code, description) FROM stdin;
1	0	Метод не определен
2	1	Излучение — приблизительные данные уровня 1b
3	2	Излучение — обработанные данные
4	3	Зарезервировано
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002167_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002167_seq', 16, true);


--
-- Data for Name: bufr_code_002169; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002169 (id, code, description) FROM stdin;
1	0	Чашечный ротор
2	1	Пропеллерный ротор
3	2	Наблюдения ветра с помощью окружающего шума (WOTAN)
4	3	Акустический
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002169_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002169_seq', 16, true);


--
-- Data for Name: bufr_code_002170; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002170 (id, code, sensor_type) FROM stdin;
1	0	SpectraSensors WCSS-II, версия 1
2	1	SpectraSensors WCSS-II, версия 2
3	2	SpectraSensors WCSS-II, версия 3
4	3	Зарезервировано
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Зарезервировано
33	32	Зарезервировано
34	33	Зарезервировано
35	34	Зарезервировано
36	35	Зарезервировано
37	36	Зарезервировано
38	37	Зарезервировано
39	38	Зарезервировано
40	39	Зарезервировано
41	40	Зарезервировано
42	41	Зарезервировано
43	42	Зарезервировано
44	43	Зарезервировано
45	44	Зарезервировано
46	45	Зарезервировано
47	46	Зарезервировано
48	47	Зарезервировано
49	48	Зарезервировано
50	49	Зарезервировано
51	50	Зарезервировано
52	51	Зарезервировано
53	52	Зарезервировано
54	53	Зарезервировано
55	54	Зарезервировано
56	55	Зарезервировано
57	56	Зарезервировано
58	57	Зарезервировано
59	58	Зарезервировано
60	59	Зарезервировано
61	60	Зарезервировано
62	61	Зарезервировано
63	62	Другое
64	63	Отсутствующее значение
\.


--
-- Name: bufr_code_002170_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002170_seq', 64, true);


--
-- Data for Name: bufr_code_002172; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002172 (id, code, description) FROM stdin;
1	0	Зарезервирована
2	1	Восстановлена по надирному зондированию
3	2	Восстановлена по лимбовому зондированию
4	3	Зарезервировано
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Зарезервировано
33	32	Зарезервировано
34	33	Зарезервировано
35	34	Зарезервировано
36	35	Зарезервировано
37	36	Зарезервировано
38	37	Зарезервировано
39	38	Зарезервировано
40	39	Зарезервировано
41	40	Зарезервировано
42	41	Зарезервировано
43	42	Зарезервировано
44	43	Зарезервировано
45	44	Зарезервировано
46	45	Зарезервировано
47	46	Зарезервировано
48	47	Зарезервировано
49	48	Зарезервировано
50	49	Зарезервировано
51	50	Зарезервировано
52	51	Зарезервировано
53	52	Зарезервировано
54	53	Зарезервировано
55	54	Зарезервировано
56	55	Зарезервировано
57	56	Зарезервировано
58	57	Зарезервировано
59	58	Зарезервировано
60	59	Зарезервировано
61	60	Зарезервировано
62	61	Зарезервировано
63	62	Зарезервировано
64	63	Зарезервировано
65	64	Зарезервировано
66	65	Зарезервировано
67	66	Зарезервировано
68	67	Зарезервировано
69	68	Зарезервировано
70	69	Зарезервировано
71	70	Зарезервировано
72	71	Зарезервировано
73	72	Зарезервировано
74	73	Зарезервировано
75	74	Зарезервировано
76	75	Зарезервировано
77	76	Зарезервировано
78	77	Зарезервировано
79	78	Зарезервировано
80	79	Зарезервировано
81	80	Зарезервировано
82	81	Зарезервировано
83	82	Зарезервировано
84	83	Зарезервировано
85	84	Зарезервировано
86	85	Зарезервировано
87	86	Зарезервировано
88	87	Зарезервировано
89	88	Зарезервировано
90	89	Зарезервировано
91	90	Зарезервировано
92	91	Зарезервировано
93	92	Зарезервировано
94	93	Зарезервировано
95	94	Зарезервировано
96	95	Зарезервировано
97	96	Зарезервировано
98	97	Зарезервировано
99	98	Зарезервировано
100	99	Зарезервировано
101	100	Зарезервировано
102	101	Зарезервировано
103	102	Зарезервировано
104	103	Зарезервировано
105	104	Зарезервировано
106	105	Зарезервировано
107	106	Зарезервировано
108	107	Зарезервировано
109	108	Зарезервировано
110	109	Зарезервировано
111	110	Зарезервировано
112	111	Зарезервировано
113	112	Зарезервировано
114	113	Зарезервировано
115	114	Зарезервировано
116	115	Зарезервировано
117	116	Зарезервировано
118	117	Зарезервировано
119	118	Зарезервировано
120	119	Зарезервировано
121	120	Зарезервировано
122	121	Зарезервировано
123	122	Зарезервировано
124	123	Зарезервировано
125	124	Зарезервировано
126	125	Зарезервировано
127	126	Зарезервировано
128	127	Зарезервировано
129	128	Зарезервировано
130	129	Зарезервировано
131	130	Зарезервировано
132	131	Зарезервировано
133	132	Зарезервировано
134	133	Зарезервировано
135	134	Зарезервировано
136	135	Зарезервировано
137	136	Зарезервировано
138	137	Зарезервировано
139	138	Зарезервировано
140	139	Зарезервировано
141	140	Зарезервировано
142	141	Зарезервировано
143	142	Зарезервировано
144	143	Зарезервировано
145	144	Зарезервировано
146	145	Зарезервировано
147	146	Зарезервировано
148	147	Зарезервировано
149	148	Зарезервировано
150	149	Зарезервировано
151	150	Зарезервировано
152	151	Зарезервировано
153	152	Зарезервировано
154	153	Зарезервировано
155	154	Зарезервировано
156	155	Зарезервировано
157	156	Зарезервировано
158	157	Зарезервировано
159	158	Зарезервировано
160	159	Зарезервировано
161	160	Зарезервировано
162	161	Зарезервировано
163	162	Зарезервировано
164	163	Зарезервировано
165	164	Зарезервировано
166	165	Зарезервировано
167	166	Зарезервировано
168	167	Зарезервировано
169	168	Зарезервировано
170	169	Зарезервировано
171	170	Зарезервировано
172	171	Зарезервировано
173	172	Зарезервировано
174	173	Зарезервировано
175	174	Зарезервировано
176	175	Зарезервировано
177	176	Зарезервировано
178	177	Зарезервировано
179	178	Зарезервировано
180	179	Зарезервировано
181	180	Зарезервировано
182	181	Зарезервировано
183	182	Зарезервировано
184	183	Зарезервировано
185	184	Зарезервировано
186	185	Зарезервировано
187	186	Зарезервировано
188	187	Зарезервировано
189	188	Зарезервировано
190	189	Зарезервировано
191	190	Зарезервировано
192	191	Зарезервировано
193	192	Зарезервировано
194	193	Зарезервировано
195	194	Зарезервировано
196	195	Зарезервировано
197	196	Зарезервировано
198	197	Зарезервировано
199	198	Зарезервировано
200	199	Зарезервировано
201	200	Зарезервировано
202	201	Зарезервировано
203	202	Зарезервировано
204	203	Зарезервировано
205	204	Зарезервировано
206	205	Зарезервировано
207	206	Зарезервировано
208	207	Зарезервировано
209	208	Зарезервировано
210	209	Зарезервировано
211	210	Зарезервировано
212	211	Зарезервировано
213	212	Зарезервировано
214	213	Зарезервировано
215	214	Зарезервировано
216	215	Зарезервировано
217	216	Зарезервировано
218	217	Зарезервировано
219	218	Зарезервировано
220	219	Зарезервировано
221	220	Зарезервировано
222	221	Зарезервировано
223	222	Зарезервировано
224	223	Зарезервировано
225	224	Зарезервировано
226	225	Зарезервировано
227	226	Зарезервировано
228	227	Зарезервировано
229	228	Зарезервировано
230	229	Зарезервировано
231	230	Зарезервировано
232	231	Зарезервировано
233	232	Зарезервировано
234	233	Зарезервировано
235	234	Зарезервировано
236	235	Зарезервировано
237	236	Зарезервировано
238	237	Зарезервировано
239	238	Зарезервировано
240	239	Зарезервировано
241	240	Зарезервировано
242	241	Зарезервировано
243	242	Зарезервировано
244	243	Зарезервировано
245	244	Зарезервировано
246	245	Зарезервировано
247	246	Зарезервировано
248	247	Зарезервировано
249	248	Зарезервировано
250	249	Зарезервировано
251	250	Зарезервировано
252	251	Зарезервировано
253	252	Зарезервировано
254	253	Зарезервировано
255	254	Зарезервировано
256	255	Отсутствующее значение
\.


--
-- Name: bufr_code_002172_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002172_seq', 256, true);


--
-- Data for Name: bufr_code_002175; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002175 (id, code, description) FROM stdin;
1	0	Ручные измерения
2	1	Метод опрокидывающегося сосуда
3	2	Метод взвешивания
4	3	Оптический метод
5	4	Метод давления
6	5	Метод поплавкового датчика
7	6	Метод счетчика капель
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Другие
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002175_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002175_seq', 16, true);


--
-- Data for Name: bufr_code_002176; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002176 (id, code, description) FROM stdin;
1	0	Неавтоматизированные наблюдения
2	1	Метод видеокамеры
3	2	Инфракрасный метод
4	3	Лазерный метод
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Другие
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002176_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002176_seq', 16, true);


--
-- Data for Name: bufr_code_002177; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002177 (id, code, description) FROM stdin;
1	0	Неавтоматизированные наблюдения
2	1	Ультразвуковой метод
3	2	Метод видеокамеры
4	3	Лазерный метод
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Другие
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002177_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002177_seq', 16, true);


--
-- Data for Name: bufr_code_002178; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002178 (id, code, description) FROM stdin;
1	0	Неавтоматизированные наблюдения
2	1	Оптический метод
3	2	Ёмкостный метод
4	3	Зарезервировано
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Другие
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002178_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002178_seq', 16, true);


--
-- Data for Name: bufr_code_002179; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002179 (id, code, description) FROM stdin;
1	0	Неавтоматизированные наблюдения
2	1	Алгоритм ВАЙСАЛА
3	2	Алгоритм ASOS (FAA)
4	3	Алгоритм AWOS (Канада)
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Другие
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002179_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002179_seq', 16, true);


--
-- Data for Name: bufr_code_002180; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002180 (id, code, description) FROM stdin;
1	0	Неавтоматизированные наблюдения
2	1	Система оптического рассеяния в сочетании с системой зондирования выпадения осадков
3	2	Система прямого и/или обратного рассеяния видимого излучения
4	3	Система прямого и/или обратного рассеяния инфракрасного излучения
5	4	Система диода инфракрасного излучения (IRED)
6	5	Система доплеровского радиолокатора
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Другие
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002180_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002180_seq', 16, true);


--
-- Data for Name: bufr_code_002181; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002181 (id, code, description) FROM stdin;
1	1	Детектор дождя
2	2	Датчик замерзающего дождя
3	3	Датчик обнаружения льда
4	4	Датчик града и ледяного дождя
5	5	Зарезервировано
6	6	Зарезервировано
7	7	Зарезервировано
8	8	Зарезервировано
9	9	Зарезервировано
10	10	Зарезервировано
11	11	Зарезервировано
12	12	Зарезервировано
13	13	Зарезервировано
14	14	Зарезервировано
15	15	Зарезервировано
16	16	Зарезервировано
17	17	Зарезервировано
18	18	Зарезервировано
19	19	Зарезервировано
20	20	Другие
21	0	Отсутствующее значение
\.


--
-- Name: bufr_code_002181_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002181_seq', 21, true);


--
-- Data for Name: bufr_code_002182; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002182 (id, code, description) FROM stdin;
1	0	Неавтоматизированные наблюдения
2	1	Система трансмиссометра (база ≥ 25 м)
3	2	Система трансмиссометра (база < 25 м)
4	3	Система прямого рассеяния
5	4	Система обратного рассеяния
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Другие
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002182_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002182_seq', 16, true);


--
-- Data for Name: bufr_code_002183; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002183 (id, code, description) FROM stdin;
1	0	Неавтоматизированные наблюдения
2	1	Система облакомера
3	2	Система камеры инфракрасного излучения
4	3	Система микроволновой визуальной камеры
5	4	Система получения изображений неба
6	5	Система видеокамеры замедленной съемки
7	6	Система микроимпульского лидара (MPL)
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Другие
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002183_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002183_seq', 16, true);


--
-- Data for Name: bufr_code_002184; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002184 (id, code, description) FROM stdin;
1	0	Неавтоматизированные наблюдения
2	1	Датчик изображения молний
3	2	Датчик идентификации электрических бурь
4	3	Датчик магнитного пеленгатора
5	4	Датчик ударов молний
6	5	Счетчик вспышек
7	6	Датчик волновой корреляции АТDnet VLF
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Другие
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002184_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002184_seq', 16, true);


--
-- Data for Name: bufr_code_002185; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002185 (id, code, description) FROM stdin;
1	0	Неавтоматизированные измерения
2	1	Метод сбалансированного поплавкового прибора
3	2	Метод давления
4	3	Ультразвуковой метод
5	4	Гидравлический метод
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Другие
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002185_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002185_seq', 16, true);


--
-- Data for Name: bufr_code_002186; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002186 (id, bit_number, description) FROM stdin;
1	0	Тип осадков неизвестен
2	2	Жидкие осадки, незамерзающие
3	3	Жидкие осадки, замерзающие
4	4	Морось
5	5	Дождь
6	6	Твердые осадки
7	7	Снег
8	8	Снежные зерна
9	9	Снежная крупа
10	10	Ледяная крупа
11	11	Ледяные игольчатые кристаллы
12	12	Алмазная пыль
13	13	Мелкий град
14	14	Град
15	15	Гололед
16	16	Изморозь
17	17	Слабая изморозь
18	18	Твердый налет
19	19	Прозрачный лед
20	20	Мокрый снег
21	21	Иней
22	22	Роса
23	23	Замерзшая роса
24	24	Зарезервировано
25	25	Зарезервировано
26	26	Зарезервировано
27	27	Зарезервировано
28	28	Зарезервировано
29	29	Зарезервировано
30	0	Отсутствующее значение
\.


--
-- Name: bufr_code_002186_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002186_seq', 30, true);


--
-- Data for Name: bufr_code_002187; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002187 (id, bit_number, description) FROM stdin;
1	1	Пыльный/песчаный вихрь
2	2	Шквалы
3	3	Песчаная буря
4	4	Пыльная буря
5	5	Молния — от облака к поверхности
6	6	Молния — от облака к облаку
7	7	Молния — отдаленная
8	8	Гроза
9	9	Воронкообразное облако, не достигающее поверхности
10	10	Воронкообразное облако, достигающее поверхности
11	11	Аэрозоль
12	12	Зарезервировано
13	13	Зарезервировано
14	14	Зарезервировано
15	15	Зарезервировано
16	16	Зарезервировано
17	17	Зарезервировано
18	0	Отсутствующее значение
\.


--
-- Name: bufr_code_002187_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002187_seq', 18, true);


--
-- Data for Name: bufr_code_002188; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002188 (id, unknown0, unknown1) FROM stdin;
1	1	Туман
2	2	Ледяной туман
3	3	Туман парения
4	4	Зарезервировано
5	5	Зарезервировано
6	6	Зарезервировано
7	7	Дымка
8	8	Мгла
9	9	Дым
10	10	Вулканический пепел
11	11	Пыль
12	12	Песок
13	13	Снег
14	14	Зарезервировано
15	15	Зарезервировано
16	16	Зарезервировано
17	17	Зарезервировано
18	18	Зарезервировано
19	19	Зарезервировано
20	20	Зарезервировано
21	0	Отсутствующее значение
\.


--
-- Name: bufr_code_002188_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002188_seq', 21, true);


--
-- Data for Name: bufr_code_002189; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002189 (id, bit_number, description) FROM stdin;
1	1	Неавтоматизированные наблюдения
2	2	Все удары молнии без различия
3	3	Удары молнии только от облака к поверхности
4	4	Все удары молнии с различием между молниями от облака к поверхности и от облака к облаку
5	5	Зарезервировано
6	6	Зарезервировано
7	7	Зарезервировано
8	8	Зарезервировано
9	9	Зарезервировано
10	10	Зарезервировано
11	11	Зарезервировано
12	0	Отсутствующее значение
\.


--
-- Name: bufr_code_002189_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002189_seq', 12, true);


--
-- Data for Name: bufr_code_002191; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_002191 (id, code, description) FROM stdin;
1	0	Геопотенциальная высота, рассчитанная по давлению
2	1	Геопотенциальная высота, рассчитанная по высоте, полученной по ГСОМ
3	2	Геопотенциальная высота, рассчитанная по высоте, полученной с помощью радиолокатора
4	3	Зарезервировано
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_002191_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_002191_seq', 16, true);


--
-- Data for Name: bufr_code_004059; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_004059 (id, bit_number, description) FROM stdin;
1	1	00:00 МСВ
2	2	06:00 МСВ
3	3	12:00 МСВ
4	4	18:00 МСВ
5	5	Другие сроки
6	0	Отсутствующее значение
\.


--
-- Name: bufr_code_004059_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_004059_seq', 6, true);


--
-- Data for Name: bufr_code_004080; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_004080 (id, bit_number, description) FROM stdin;
1	0	Точечные величины
2	1	Менее 15 минут
3	2	От 15 до 45 минут
4	3	Более 45 минут
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Данные отсутствуют
11	10	Не используются
12	11	Не используются
13	12	Не используются
14	13	Не используются
15	14	Не используются
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_004080_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_004080_seq', 16, true);


--
-- Data for Name: bufr_code_008001; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008001 (id, bit_number, description) FROM stdin;
1	1	Поверхность
2	2	Стандартный уровень
3	3	Уровень тропопаузы
4	4	Уровень максимального ветра
5	5	Особая точка, температура и/или относительная влажность
6	6	Особая точка, ветер
7	0	Отсутствующее значение
\.


--
-- Name: bufr_code_008001_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008001_seq', 7, true);


--
-- Data for Name: bufr_code_008002; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008002 (id, code, description) FROM stdin;
1	0	Применяются правила кодов FM 12 SYNOP и FM 13 SHIP для наблюдений нижней границы самых низких облаков и типов облаков
2	1	Первый особый слой, облака не относятся к CB
3	2	Второй особый слой, облака не относятся к CB
4	3	Третий особый слой, облака не относятся к CB
5	4	Слой кучево-дождевых облаков
6	5	Потолок
7	6	Облака не обнаруживаются ниже следущих высот
8	7	Нижние облака
9	8	Средние облака
10	9	Облака верхнего яруса
11	10	Слой облачности с нижней границей ниже и верхней границей выше уровня станции
12	11	Слой облачности с нижней и верхней границами ниже уровня станции
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Облачность отсутствует по данным системы обнаружения облаков
22	21	Первый прибор обнаружил слой облачности
23	22	Второй прибор обнаружил слой облачности
24	23	Третий прибор обнаружил слой облачности
25	24	Четвертый прибор обнаружил слой облачности
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Зарезервировано
33	32	Зарезервировано
34	33	Зарезервировано
35	34	Зарезервировано
36	35	Зарезервировано
37	36	Зарезервировано
38	37	Зарезервировано
39	38	Зарезервировано
40	39	Зарезервировано
41	40	Зарезервировано
42	41	Зарезервировано
43	42	Зарезервировано
44	43	Зарезервировано
45	44	Зарезервировано
46	45	Зарезервировано
47	46	Зарезервировано
48	47	Зарезервировано
49	48	Зарезервировано
50	49	Зарезервировано
51	50	Зарезервировано
52	51	Зарезервировано
53	52	Зарезервировано
54	53	Зарезервировано
55	54	Зарезервировано
56	55	Зарезервировано
57	56	Зарезервировано
58	57	Зарезервировано
59	58	Зарезервировано
60	59	Зарезервировано
61	60	Зарезервировано
62	61	Зарезервировано
63	62	Значение не применимо
64	63	Отсутствующее значение
\.


--
-- Name: bufr_code_008002_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008002_seq', 64, true);


--
-- Data for Name: bufr_code_008003; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008003 (id, code, description) FROM stdin;
1	0	Поверхность
2	1	База спутникового зондирования
3	2	Верхняя граница облаков
4	3	Тропопауза
5	4	Осажденная вода
6	5	Зондирующие излучения
7	6	Средние температуры
8	7	Озон
9	8	Облака нижнего яруса
10	9	Облака среднего яруса
11	10	Облака верхнего яруса
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Зарезервировано
33	32	Зарезервировано
34	33	Зарезервировано
35	34	Зарезервировано
36	35	Зарезервировано
37	36	Зарезервировано
38	37	Зарезервировано
39	38	Зарезервировано
40	39	Зарезервировано
41	40	Зарезервировано
42	41	Зарезервировано
43	42	Зарезервировано
44	43	Зарезервировано
45	44	Зарезервировано
46	45	Зарезервировано
47	46	Зарезервировано
48	47	Зарезервировано
49	48	Зарезервировано
50	49	Зарезервировано
51	50	Зарезервировано
52	51	Зарезервировано
53	52	Зарезервировано
54	53	Зарезервировано
55	54	Зарезервировано
56	55	Зарезервировано
57	56	Зарезервировано
58	57	Зарезервировано
59	58	Зарезервировано
60	59	Зарезервировано
61	60	Зарезервировано
62	61	Зарезервировано
63	62	Зарезервировано
64	63	Отсутствующее значение
\.


--
-- Name: bufr_code_008003_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008003_seq', 64, true);


--
-- Data for Name: bufr_code_008004; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008004 (id, code, description) FROM stdin;
1	0	Зарезервировано
2	1	Зарезервировано
3	2	Неустойчивый полет (UNS)
4	3	Горизонтальный полет, обычные наблюдения (LVR)
5	4	Горизонтальный полет, наивысшее встретившееся значение ветра (LVW)
6	5	Наборы высоты (ASC)
7	6	Снижение (DES)
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_008004_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008004_seq', 8, true);


--
-- Data for Name: bufr_code_008005; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008005 (id, code, description) FROM stdin;
1	0	Зарезервирована
2	1	Центр шторма
3	2	Внешний предел или граница шторма
4	3	Местоположение максимального ветра
5	4	Местоположение шторма по результатам анализа с использованием параметров возмущения
6	5	Местоположение шторма по результатам анализа
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_008005_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008005_seq', 16, true);


--
-- Data for Name: bufr_code_008006; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008006 (id, bit_number, description) FROM stdin;
1	1	Приземный слой
2	2	Стандартный уровень
3	3	Уровень тропопаузы
4	4	Заметный максимальный уровень
5	5	Заметный минимальный уровень
6	6	Минимальный уровень давления
7	7	Зарезервирована
8	8	Уровень неопределенной значимости
9	0	Отсутствующее значение
\.


--
-- Name: bufr_code_008006_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008006_seq', 9, true);


--
-- Data for Name: bufr_code_008007; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008007 (id, code, description) FROM stdin;
1	0	Точка
2	1	Линия
3	2	Зона
4	3	Объем
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_008007_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008007_seq', 16, true);


--
-- Data for Name: bufr_code_008008; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008008 (id, bit_number, description) FROM stdin;
1	1	Приземный слой
2	2	Стандартный уровень
3	3	Уровень тропопаузы
4	4	Уровень максимума бета радиации
5	5	Уровень максимума гамма радиации
6	6	Минимальный уровень давления
7	7	Зарезервирована
8	8	Уровень неопределенной значимости
9	0	Отсутствующее значение
\.


--
-- Name: bufr_code_008008_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008008_seq', 9, true);


--
-- Data for Name: bufr_code_008009; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008009 (id, code, description) FROM stdin;
1	1	Горизонтальный полет, обычные наблюдения, неустойчивый полет
2	1	Горизонтальный полет, наивысшее встретившееся значение ветра, неустойчивый полет
3	2	Неустойчивый полет (UNS)
4	3	Горизонтальный полет, обычные наблюдения (LVR)
5	4	Горизонтальный полет, наивысшее встретившееся значение ветра (LVW)
6	5	Набор высоты (ASC)
7	6	Снижение (DES)
8	7	Набор высоты, интервалы наблюдений, выбранные по инкрементам времени
9	8	Набор высоты, интервалы наблюдений, выбранные по инкрементам времени, неустойчивый полет
10	9	Набор высоты, интервалы наблюдений, выбранные по инкрементам давления
11	10	Набор высоты, интервалы наблюдений, выбранные по инкрементам давления, неустойчивый полет
12	11	Снижение, интервалы наблюдений, выбранные по инкрементам времени
13	12	Снижение, интервалы наблюдений, выбранные по инкрементам времени, неустойчивый полет
14	13	Снижение, интервалы наблюдений, выбранные по инкрементам давления
15	14	Снижение, интервалы наблюдений, выбранные по инкрементам давления, неустойчивый полет
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_008009_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008009_seq', 16, true);


--
-- Data for Name: bufr_code_008010; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008010 (id, code, description) FROM stdin;
1	0	Зарезервировано
2	1	Лишенная растительности почва
3	2	Лишенный растительности скалистый грунт
4	3	Земной травяной покров
5	4	Вода (озеро, море)
6	5	Паводковые воды
7	6	Снег
8	7	Лед
9	8	Взлетная полоса или дорога
10	9	Палуба судна или платформа из стали
11	10	Палуба судна или платформа из дерева
12	11	Палуба судна или платформа с частичным резиновым покрытием
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Отсутствующее значение
\.


--
-- Name: bufr_code_008010_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008010_seq', 32, true);


--
-- Data for Name: bufr_code_008011; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008011 (id, code, description) FROM stdin;
1	0	Квазистационарный фронт у поверхности земли
2	1	Верхний квазистационарный фронт
3	2	Теплый фронт у поверхности земли
4	3	Верхний теплый фронт
5	4	Холодный фронт у поверхности земли
6	5	Верхний холодный фронт
7	6	Окклюзия
8	7	Линия неустойчивости
9	8	Внутритропический фронт
10	9	Линия конвергенции
11	10	Струйное течение
12	11	Безоблачное небо
13	12	Облачность
14	13	Турбулентность
15	14	Шторм
16	15	Обледенение фюзеляжа
17	16	Явление
18	17	Вулкан
19	18	Атмосферики
20	19	Зарезервировано
21	20	Особые облака
22	21	Гроза
23	22	Тропический циклон
24	23	Горная волна
25	24	Пыльная буря
26	25	Песчаная буря
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Зарезервировано
33	32	Зарезервировано
34	33	Зарезервировано
35	34	Зарезервировано
36	35	Зарезервировано
37	36	Зарезервировано
38	37	Зарезервировано
39	38	Зарезервировано
40	39	Зарезервировано
41	40	Зарезервировано
42	41	Зарезервировано
43	42	Зарезервировано
44	43	Зарезервировано
45	44	Зарезервировано
46	45	Зарезервировано
47	46	Зарезервировано
48	47	Зарезервировано
49	48	Зарезервировано
50	49	Зарезервировано
51	50	Зарезервировано
52	51	Зарезервировано
53	52	Зарезервировано
54	53	Зарезервировано
55	54	Зарезервировано
56	55	Зарезервировано
57	56	Зарезервировано
58	57	Зарезервировано
59	58	Зарезервировано
60	59	Зарезервировано
61	60	Зарезервировано
62	61	Зарезервировано
63	62	Зарезервировано
64	63	Отсутствующее значение
\.


--
-- Name: bufr_code_008011_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008011_seq', 64, true);


--
-- Data for Name: bufr_code_008012; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008012 (id, code, description) FROM stdin;
1	0	Суша
2	1	Море
3	2	Прибрежный район
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_008012_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008012_seq', 4, true);


--
-- Data for Name: bufr_code_008013; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008013 (id, code, description) FROM stdin;
1	0	Ночь
2	1	День
3	2	Сумерки
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_008013_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008013_seq', 4, true);


--
-- Data for Name: bufr_code_008014; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008014 (id, code, description) FROM stdin;
1	0	10-минутное среднее значение — обычное значение
2	1	10-минутное среднее значение — выше верхнего предела для оценок RVR (P)
3	2	10-минутное среднее значение — ниже нижнего предела для оценок RVR (M)
4	3	1-минутное минимальное значение — обычное значение
5	4	1-минутное минимальное значение — выше верхнего предела для оценок RVR (P)
6	5	1-минутное минимальное значение — ниже нижнего предела для оценок RVR (M)
7	6	1-минутное максимальное значение — обычное значение
8	7	1-минутное максимальное значение — выше верхнего предела для оценок RVR (P)
9	8	1-минутное максимальное значение — ниже нижнего предела для оценок RVR (M)
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_008014_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008014_seq', 16, true);


--
-- Data for Name: bufr_code_008016; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008016 (id, code, description) FROM stdin;
1	0	NOSIG
2	1	BECMG
3	2	TEMPO
4	3	FM
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_008016_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008016_seq', 8, true);


--
-- Data for Name: bufr_code_008017; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008017 (id, code, description) FROM stdin;
1	0	FM
2	1	TL
3	2	AT
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_008017_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008017_seq', 4, true);


--
-- Data for Name: bufr_code_008018; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008018 (id, bit_number, description) FROM stdin;
1	1	Суша присутствует
2	2	Карта поверхностного льда указывает, что лед присутствует
3	3	Зарезервировано
4	4	Зарезервировано
5	5	Зарезервировано
6	6	Зарезервировано
7	7	Зарезервировано
8	8	Зарезервировано
9	9	Зарезервировано
10	10	Зарезервировано
11	11	Данные карты льда отсутствуют
12	12	Данные карты ослабления отстутстуют
13	13	Зарезервировано
14	14	Зарезервировано
15	15	Зарезервировано
16	16	Зарезервировано
17	0	Отсутствующее значение
\.


--
-- Name: bufr_code_008018_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008018_seq', 17, true);


--
-- Data for Name: bufr_code_008019; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008019 (id, bit_number, description) FROM stdin;
1	0	Зарезервировано
2	1	Группа ОВД (обслуживание воздушного движения), обслуживающая РПИ (район полетной информации)
3	2	РПИ (район полетной информации)
4	3	ВРПИ (верхний район полетной информации)
5	4	СТА (диспетчерский район)
6	5	VAAC (Консультативный центр по вулканическому пеплу)
7	6	ОМС (Орган метеорологического слежения), выпускающий SIGMET
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_008019_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008019_seq', 16, true);


--
-- Data for Name: bufr_code_008021; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008021 (id, code, description) FROM stdin;
1	0	Зарезервирована
2	1	Временные ряды
3	2	Усредненные по времени (см. примечание 1)
4	3	Накопленные
5	4	Прогноз
6	5	Прогноз по временным рядам
7	6	Прогноз, усредненный по времени
8	7	Прогноз накопленный
9	8	Усредненная совокупность (см. примечание 2)
10	9	Усредненная совокупность временных рядов
11	10	Усредненная совокупность, усредненная по времени
12	11	Усредненная совокупность, накопленная
13	12	Усредненная совокупность прогнозов
14	13	Усредненная совокупность прогноза временных рядов
15	14	Усредненная совокупность прогноза, усредненного по времени
16	15	Усредненная совокупность накопленных прогнозов
17	16	Анализ
18	17	Начало явления
19	18	Время запуска радиозонда
20	19	Начало орбиты
21	20	Конец орбиты
22	21	Время восходящего узла
23	22	Время появления поворота ветра
24	23	Период мониторинга
25	24	Согласованное ограничение срока для получения сводки
26	25	Номинальный срок сообщений
27	26	Время последней известной позиции
28	27	Первая ориентировочная информация
29	28	Начало сканирования
30	29	Конец сканирования или время окончания
31	30	Время наступления
32	31	Отсутствующее значение
\.


--
-- Name: bufr_code_008021_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008021_seq', 32, true);


--
-- Data for Name: bufr_code_008023; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008023 (id, code, description) FROM stdin;
1	0	Зарезервировано
2	1	Зарезервировано
3	2	Максимальное значение
4	3	Минимальное значение
5	4	Среднее значение
6	5	Значение медианы
7	6	Модальное значение
8	7	Абсолютная средняя ошибка
9	8	Зарезервирована
10	9	Лучшая оценка стандартного отклонения (N–1)
11	10	Стандартное отклонение (N)
12	11	Среднее гармоническое
13	12	Векторная погрешность среднего квадратичного
14	13	Среднее квадратичное
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Зарезервировано
33	32	Векторное среднее
34	33	Зарезервировано для местного использования
35	34	Зарезервировано для местного использования
36	35	Зарезервировано для местного использования
37	36	Зарезервировано для местного использования
38	37	Зарезервировано для местного использования
39	38	Зарезервировано для местного использования
40	39	Зарезервировано для местного использования
41	40	Зарезервировано для местного использования
42	41	Зарезервировано для местного использования
43	42	Зарезервировано для местного использования
44	43	Зарезервировано для местного использования
45	44	Зарезервировано для местного использования
46	45	Зарезервировано для местного использования
47	46	Зарезервировано для местного использования
48	47	Зарезервировано для местного использования
49	48	Зарезервировано для местного использования
50	49	Зарезервировано для местного использования
51	50	Зарезервировано для местного использования
52	51	Зарезервировано для местного использования
53	52	Зарезервировано для местного использования
54	53	Зарезервировано для местного использования
55	54	Зарезервировано для местного использования
56	55	Зарезервировано для местного использования
57	56	Зарезервировано для местного использования
58	57	Зарезервировано для местного использования
59	58	Зарезервировано для местного использования
60	59	Зарезервировано для местного использования
61	60	Зарезервировано для местного использования
62	61	Зарезервировано для местного использования
63	62	Зарезервировано для местного использования
64	63	Отсутствующее значение
\.


--
-- Name: bufr_code_008023_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008023_seq', 64, true);


--
-- Data for Name: bufr_code_008024; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008024 (id, code, description) FROM stdin;
1	0	Зарезервировано
2	1	Зарезервировано
3	2	Сообщенное значение минус максимальное значение
4	3	Сообщенное значение минус минимальное значение
5	4	Сообщенное значение минус среднее значение
6	5	Сообщенное значение минус медиана
7	6	Сообщенное значение минус наиболее вероятное значение
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Сообщенное значение минус климатологическое значение (аномалия)
13	12	Сообщенное значение минус анализированное значение
14	13	Сообщенное значение минус исходное анализированное значение
15	14	Сообщенное значение минус прогнозированное значение**
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Сообщенное значение минус интерполированное значение
23	22	Сообщенное значение минус значение, рассчитанное гидростатическим образом
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Зарезервировано
33	32	Зарезервировано для местного использования
34	33	Зарезервировано для местного использования
35	34	Зарезервировано для местного использования
36	35	Зарезервировано для местного использования
37	36	Зарезервировано для местного использования
38	37	Зарезервировано для местного использования
39	38	Зарезервировано для местного использования
40	39	Зарезервировано для местного использования
41	40	Зарезервировано для местного использования
42	41	Зарезервировано для местного использования
43	42	Зарезервировано для местного использования
44	43	Зарезервировано для местного использования
45	44	Зарезервировано для местного использования
46	45	Зарезервировано для местного использования
47	46	Зарезервировано для местного использования
48	47	Зарезервировано для местного использования
49	48	Зарезервировано для местного использования
50	49	Зарезервировано для местного использования
51	50	Зарезервировано для местного использования
52	51	Зарезервировано для местного использования
53	52	Зарезервировано для местного использования
54	53	Зарезервировано для местного использования
55	54	Зарезервировано для местного использования
56	55	Зарезервировано для местного использования
57	56	Зарезервировано для местного использования
58	57	Зарезервировано для местного использования
59	58	Зарезервировано для местного использования
60	59	Зарезервировано для местного использования
61	60	Зарезервировано для местного использования
62	61	Зарезервировано для местного использования
63	62	Зарезервировано для местного использования
64	63	Отсутствующее значение
\.


--
-- Name: bufr_code_008024_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008024_seq', 64, true);


--
-- Data for Name: bufr_code_008025; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008025 (id, code, description) FROM stdin;
1	0	Международное скоординированное время (МСВ) минус стандартное местное время (СМВ)
2	1	Стандартное местное время
3	2	Международное скоординированное время (МСВ) минус спутниковые датчики времени
4	3	Зарезервировано
5	4	Зарезервировано
6	5	Разница во времени от границы сегмента обработки
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_008025_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008025_seq', 16, true);


--
-- Data for Name: bufr_code_008026; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008026 (id, code, description) FROM stdin;
1	0	Осреднение ядра матрицы
2	1	Корреляционная матрица (C)
3	2	Квадратный корень нижней треугольной корреляционной матрицы (L от C=LLT)
4	3	Обратная величина квадратного корня нижней треугольной корреляционной матрицы (L-1)
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Зарезервировано
33	32	Зарезервировано
34	33	Зарезервировано
35	34	Зарезервировано
36	35	Зарезервировано
37	36	Зарезервировано
38	37	Зарезервировано
39	38	Зарезервировано
40	39	Зарезервировано
41	40	Зарезервировано
42	41	Зарезервировано
43	42	Зарезервировано
44	43	Зарезервировано для местного использования
45	44	Зарезервировано для местного использования
46	45	Зарезервировано для местного использования
47	46	Зарезервировано для местного использования
48	47	Зарезервировано для местного использования
49	48	Зарезервировано для местного использования
50	49	Зарезервировано для местного использования
51	50	Зарезервировано для местного использования
52	51	Зарезервировано для местного использования
53	52	Зарезервировано для местного использования
54	53	Зарезервировано для местного использования
55	54	Зарезервировано для местного использования
56	55	Зарезервировано для местного использования
57	56	Зарезервировано для местного использования
58	57	Зарезервировано для местного использования
59	58	Зарезервировано для местного использования
60	59	Зарезервировано для местного использования
61	60	Зарезервировано для местного использования
62	61	Зарезервировано для местного использования
63	62	Зарезервировано для местного использования
64	63	Отсутствующее или неопределенная значимость
\.


--
-- Name: bufr_code_008026_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008026_seq', 64, true);


--
-- Data for Name: bufr_code_008029; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008029 (id, code, description) FROM stdin;
1	0	Открытый океан или полузакрытое море
2	1	Закрытое море или озеро
3	2	Материковый лед
4	3	Суша
5	4	Низменная территория, удаленная от моря (ниже уровня моря)
6	5	Смесь суши и воды
7	6	Смесь суши и низменной территории, удаленной от моря
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Река
13	12	Озеро
14	13	Море
15	14	Ледник
16	15	Городская земля
17	16	Земли в сельских районах
18	17	Пригородные земли
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Зарезервировано
33	32	Зарезервировано
34	33	Зарезервировано
35	34	Зарезервировано
36	35	Зарезервировано
37	36	Зарезервировано
38	37	Зарезервировано
39	38	Зарезервировано
40	39	Зарезервировано
41	40	Зарезервировано
42	41	Зарезервировано
43	42	Зарезервировано
44	43	Зарезервировано
45	44	Зарезервировано
46	45	Зарезервировано
47	46	Зарезервировано
48	47	Зарезервировано
49	48	Зарезервировано
50	49	Зарезервировано
51	50	Зарезервировано
52	51	Зарезервировано
53	52	Зарезервировано
54	53	Зарезервировано
55	54	Зарезервировано
56	55	Зарезервировано
57	56	Зарезервировано
58	57	Зарезервировано
59	58	Зарезервировано
60	59	Зарезервировано
61	60	Зарезервировано
62	61	Зарезервировано
63	62	Зарезервировано
64	63	Зарезервировано
65	64	Зарезервировано
66	65	Зарезервировано
67	66	Зарезервировано
68	67	Зарезервировано
69	68	Зарезервировано
70	69	Зарезервировано
71	70	Зарезервировано
72	71	Зарезервировано
73	72	Зарезервировано
74	73	Зарезервировано
75	74	Зарезервировано
76	75	Зарезервировано
77	76	Зарезервировано
78	77	Зарезервировано
79	78	Зарезервировано
80	79	Зарезервировано
81	80	Зарезервировано
82	81	Зарезервировано
83	82	Зарезервировано
84	83	Зарезервировано
85	84	Зарезервировано
86	85	Зарезервировано
87	86	Зарезервировано
88	87	Зарезервировано
89	88	Зарезервировано
90	89	Зарезервировано
91	90	Зарезервировано
92	91	Зарезервировано
93	92	Зарезервировано
94	93	Зарезервировано
95	94	Зарезервировано
96	95	Зарезервировано
97	96	Зарезервировано
98	97	Зарезервировано
99	98	Зарезервировано
100	99	Зарезервировано
101	100	Зарезервировано
102	101	Зарезервировано
103	102	Зарезервировано
104	103	Зарезервировано
105	104	Зарезервировано
106	105	Зарезервировано
107	106	Зарезервировано
108	107	Зарезервировано
109	108	Зарезервировано
110	109	Зарезервировано
111	110	Зарезервировано
112	111	Зарезервировано
113	112	Зарезервировано
114	113	Зарезервировано
115	114	Зарезервировано
116	115	Зарезервировано
117	116	Зарезервировано
118	117	Зарезервировано
119	118	Зарезервировано
120	119	Зарезервировано
121	120	Зарезервировано
122	121	Зарезервировано
123	122	Зарезервировано
124	123	Зарезервировано
125	124	Зарезервировано
126	125	Зарезервировано
127	126	Зарезервировано
128	127	Зарезервировано
129	128	Зарезервировано
130	129	Зарезервировано
131	130	Зарезервировано
132	131	Зарезервировано
133	132	Зарезервировано
134	133	Зарезервировано
135	134	Зарезервировано
136	135	Зарезервировано
137	136	Зарезервировано
138	137	Зарезервировано
139	138	Зарезервировано
140	139	Зарезервировано
141	140	Зарезервировано
142	141	Зарезервировано
143	142	Зарезервировано
144	143	Зарезервировано
145	144	Зарезервировано
146	145	Зарезервировано
147	146	Зарезервировано
148	147	Зарезервировано
149	148	Зарезервировано
150	149	Зарезервировано
151	150	Зарезервировано
152	151	Зарезервировано
153	152	Зарезервировано
154	153	Зарезервировано
155	154	Зарезервировано
156	155	Зарезервировано
157	156	Зарезервировано
158	157	Зарезервировано
159	158	Зарезервировано
160	159	Зарезервировано
161	160	Зарезервировано
162	161	Зарезервировано
163	162	Зарезервировано
164	163	Зарезервировано
165	164	Зарезервировано
166	165	Зарезервировано
167	166	Зарезервировано
168	167	Зарезервировано
169	168	Зарезервировано
170	169	Зарезервировано
171	170	Зарезервировано
172	171	Зарезервировано
173	172	Зарезервировано
174	173	Зарезервировано
175	174	Зарезервировано
176	175	Зарезервировано
177	176	Зарезервировано
178	177	Зарезервировано
179	178	Зарезервировано
180	179	Зарезервировано
181	180	Зарезервировано
182	181	Зарезервировано
183	182	Зарезервировано
184	183	Зарезервировано
185	184	Зарезервировано
186	185	Зарезервировано
187	186	Зарезервировано
188	187	Зарезервировано
189	188	Зарезервировано
190	189	Зарезервировано
191	190	Зарезервировано
192	191	Зарезервировано
193	192	Зарезервировано
194	193	Зарезервировано
195	194	Зарезервировано
196	195	Зарезервировано
197	196	Зарезервировано
198	197	Зарезервировано
199	198	Зарезервировано
200	199	Зарезервировано
201	200	Зарезервировано
202	201	Зарезервировано
203	202	Зарезервировано
204	203	Зарезервировано
205	204	Зарезервировано
206	205	Зарезервировано
207	206	Зарезервировано
208	207	Зарезервировано
209	208	Зарезервировано
210	209	Зарезервировано
211	210	Зарезервировано
212	211	Зарезервировано
213	212	Зарезервировано
214	213	Зарезервировано
215	214	Зарезервировано
216	215	Зарезервировано
217	216	Зарезервировано
218	217	Зарезервировано
219	218	Зарезервировано
220	219	Зарезервировано
221	220	Зарезервировано
222	221	Зарезервировано
223	222	Зарезервировано
224	223	Зарезервировано
225	224	Зарезервировано
226	225	Зарезервировано
227	226	Зарезервировано
228	227	Зарезервировано
229	228	Зарезервировано
230	229	Зарезервировано
231	230	Зарезервировано
232	231	Зарезервировано
233	232	Зарезервировано
234	233	Зарезервировано
235	234	Зарезервировано
236	235	Зарезервировано
237	236	Зарезервировано
238	237	Зарезервировано
239	238	Зарезервировано
240	239	Зарезервировано
241	240	Зарезервировано
242	241	Зарезервировано
243	242	Зарезервировано
244	243	Зарезервировано
245	244	Зарезервировано
246	245	Зарезервировано
247	246	Зарезервировано
248	247	Зарезервировано
249	248	Зарезервировано
250	249	Зарезервировано
251	250	Зарезервировано
252	251	Зарезервировано
253	252	Зарезервировано
254	253	Зарезервировано
255	254	Зарезервировано
256	255	Отсутствующее значение
\.


--
-- Name: bufr_code_008029_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008029_seq', 256, true);


--
-- Data for Name: bufr_code_008033; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008033 (id, code, description) FROM stdin;
1	0	Зарезервирована
2	1	Процент достоверности, рассчитанный с использованием фракции облака
3	2	Процент достоверности, рассчитанный с использованием стандартного отклонения температуры
4	3	Процент достоверности, рассчитанный с использованием вероятности загрязнения облаков
5	4	Процент достоверности, рассчитанный с использованием нормальности распределения
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Зарезервировано
33	32	Зарезервировано
34	33	Зарезервировано
35	34	Зарезервировано
36	35	Зарезервировано
37	36	Зарезервировано
38	37	Зарезервировано
39	38	Зарезервировано
40	39	Зарезервировано
41	40	Зарезервировано
42	41	Зарезервировано
43	42	Зарезервировано
44	43	Зарезервировано
45	44	Зарезервировано
46	45	Зарезервировано
47	46	Зарезервировано
48	47	Зарезервировано
49	48	Зарезервировано
50	49	Зарезервировано
51	50	Зарезервировано
52	51	Зарезервировано
53	52	Зарезервировано
54	53	Зарезервировано
55	54	Зарезервировано
56	55	Зарезервировано
57	56	Зарезервировано
58	57	Зарезервировано
59	58	Зарезервировано
60	59	Зарезервировано
61	60	Зарезервировано
62	61	Зарезервировано
63	62	Зарезервировано
64	63	Зарезервировано
65	64	Зарезервировано
66	65	Зарезервировано
67	66	Зарезервировано
68	67	Зарезервировано
69	68	Зарезервировано
70	69	Зарезервировано
71	70	Зарезервировано
72	71	Зарезервировано
73	72	Зарезервировано
74	73	Зарезервировано
75	74	Зарезервировано
76	75	Зарезервировано
77	76	Зарезервировано
78	77	Зарезервировано
79	78	Зарезервировано
80	79	Зарезервировано
81	80	Зарезервировано
82	81	Зарезервировано
83	82	Зарезервировано
84	83	Зарезервировано
85	84	Зарезервировано
86	85	Зарезервировано
87	86	Зарезервировано
88	87	Зарезервировано
89	88	Зарезервировано
90	89	Зарезервировано
91	90	Зарезервировано
92	91	Зарезервировано
93	92	Зарезервировано
94	93	Зарезервировано
95	94	Зарезервировано
96	95	Зарезервировано
97	96	Зарезервировано
98	97	Зарезервировано
99	98	Зарезервировано
100	99	Зарезервировано
101	100	Зарезервировано
102	101	Зарезервировано
103	102	Зарезервировано
104	103	Зарезервировано
105	104	Зарезервировано
106	105	Зарезервировано
107	106	Зарезервировано
108	107	Зарезервировано
109	108	Зарезервировано
110	109	Зарезервировано
111	110	Зарезервировано
112	111	Зарезервировано
113	112	Зарезервировано
114	113	Зарезервировано
115	114	Зарезервировано
116	115	Зарезервировано
117	116	Зарезервировано
118	117	Зарезервировано
119	118	Зарезервировано
120	119	Зарезервировано
121	120	Зарезервировано
122	121	Зарезервировано
123	122	Зарезервировано
124	123	Зарезервировано
125	124	Зарезервировано
126	125	Зарезервировано
127	126	Зарезервировано
128	127	Отсутствующее значение
\.


--
-- Name: bufr_code_008033_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008033_seq', 128, true);


--
-- Data for Name: bufr_code_008035; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008035 (id, code, description) FROM stdin;
1	0	Глобальный
2	1	Региональный
3	2	Национальный
4	3	Специальный
5	4	Двусторонний
6	5	Зарезервировано
7	6	Зарезервирована
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_008035_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008035_seq', 8, true);


--
-- Data for Name: bufr_code_008036; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008036 (id, code, description) FROM stdin;
1	0	Секретариат ВМО
2	1	ВМО
3	2	РСМЦ
4	3	НМЦ
5	4	РУТ
6	5	Пункт наблюдений
7	6	Прочие
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_008036_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008036_seq', 8, true);


--
-- Data for Name: bufr_code_008039; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008039 (id, code, description) FROM stdin;
1	0	Время выпуска прогноза
2	1	Время начала периода прогноза
3	2	Время окончания периода прогноза
4	3	Прогнозируемое время максимальной температуры
5	4	Прогнозируемое время минимальной температуры
6	5	Время начала изменения прогноза
7	6	Время окончания изменения прогноза
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Зарезервировано
33	32	Зарезервировано
34	33	Зарезервировано
35	34	Зарезервировано
36	35	Зарезервировано
37	36	Зарезервировано
38	37	Зарезервировано
39	38	Зарезервировано
40	39	Зарезервировано
41	40	Зарезервировано
42	41	Зарезервировано
43	42	Зарезервировано
44	43	Зарезервировано
45	44	Зарезервировано
46	45	Зарезервировано
47	46	Зарезервировано
48	47	Зарезервировано
49	48	Зарезервировано
50	49	Зарезервировано
51	50	Зарезервировано
52	51	Зарезервировано
53	52	Зарезервировано
54	53	Зарезервировано
55	54	Зарезервировано
56	55	Зарезервировано
57	56	Зарезервировано
58	57	Зарезервировано
59	58	Зарезервировано
60	59	Зарезервировано
61	60	Зарезервировано
62	61	Зарезервировано
63	62	Зарезервировано
64	63	Отсутствующее значение
\.


--
-- Name: bufr_code_008039_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008039_seq', 64, true);


--
-- Data for Name: bufr_code_008040; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008040 (id, code, description) FROM stdin;
1	0	Образец данных с высоким разрешением
2	1	В пределах 20 гПа от поверхности
3	2	Давление менее 10 гПа (т. е. 9, 8, 7 и т. д.), когда отсутствует какая-либо другая причина
4	3	Базовый уровень давления для индекса стабильности
5	4	Начало сомнительных данных о температуре, высоте
6	5	Начало отсутствующих данных (все элементы)
7	6	Начало отсутствующих данных об относительной влажности
8	7	Начало отсутствующих данных о температуре
9	8	Наивысший уровень, достигнутый до снижения шара-зонда из-за обледенения или турбулентности
10	9	Конец сомнительных данных о температуре, высоте
11	10	Конец отсутствующих данных (все элементы)
12	11	Конец отсутствующих данных об относительной влажности
13	12	Конец отсутствующих данных о температуре
14	13	Пересечение(ия) нулевой изотермы для RADAT
15	14	Стандартная изобарическая поверхность
16	15	Добавленный оператором уровень
17	16	Исключенный оператором уровень
18	17	Повторный подъем шара-зонда выше предыдущего самого высокого уровня
19	18	Особая точка по относительной влажности
20	19	Прекращение выбора уровня относительной влажности
21	20	Уровень поверхности
22	21	Особая точка по температуре
23	22	Обязательный уровень по температуре
24	23	Уровень прекращения полета
25	24	Тропопауза(ы)
26	25	Сводка с борта воздушного судна
27	26	Интерполированный (выведенный) уровень
28	27	Обязательный уровень ветра
29	28	Особая точка по ветру
30	29	Уровень максимального ветра
31	30	Дополнительный уровень ветра (фиксированный региональный)
32	31	Дополнительный уровень высоты (выведенный)
33	32	Уровень прекращения ветра
34	33	Давление 100–110 гПа, когда отсутствуют какие-либо другие причины
35	34	Нижний уровень замерзания
36	35	Верхний уровень замерзания
37	36	Нижний эшелон полета
38	37	Верхний эшелон полета
39	38	Зарезервировано
40	39	Зарезервировано
41	40	Особая термодинамическая точка (инверсия)
42	41	Особая точка по относительной влажности (согласно критериям NCDC)
43	42	Особая точка по температуре (согласно NCDC)
44	43	Начало отсутствующих данных о ветре
45	44	Конец отсутствующих данных о ветре
46	45	Зарезервировано
47	46	Зарезервировано
48	47	Зарезервировано
49	48	Зарезервировано
50	49	Зарезервировано
51	50	Зарезервировано
52	51	Зарезервировано
53	52	Зарезервировано
54	53	Зарезервировано
55	54	Зарезервировано
56	55	Зарезервировано
57	56	Зарезервировано
58	57	Зарезервировано
59	58	Зарезервировано
60	59	Зарезервировано
61	60	Уровень изотахи 80 узлов над струйным течением
62	61	Уровень изотахи 80 узлов под струйным течением
63	62	Другие
64	63	Отсутствующее значение
\.


--
-- Name: bufr_code_008040_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008040_seq', 64, true);


--
-- Data for Name: bufr_code_008041; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008041 (id, code, description) FROM stdin;
1	0	Основной пункт
2	1	Пункт наблюдений
3	2	Дата изготовления оболочки
4	3	Пункт запуска шара-зонда
5	4	Приземное наблюдение
6	5	Перемещение приземного наблюдения из пункта запуска
7	6	Наблюдение на эшелоне полета
8	7	Точка изменения эшелона полета
9	8	Потолок и видимость, ППП
10	9	Горные явления, ухудшающие видимость
11	10	Сильный приземный ветер
12	11	Уровень замерзания
13	12	Уровень многократного замерзания
14	13	Дата изготовления прибора
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Отсутствующее значение
\.


--
-- Name: bufr_code_008041_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008041_seq', 32, true);


--
-- Data for Name: bufr_code_008042; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008042 (id, bit_number, description) FROM stdin;
1	0	Поверхность
2	2	Стандартный уровень
3	3	Уровень тропопаузы
4	4	Уровень максимального ветра
5	5	Значимый уровень температуры
6	6	Значимый уровень влажности
7	7	Значимый уровень ветра
8	8	Начало отсутствующих данных о температуре
9	9	Конец отсутствующих данных о температуре
10	10	Начало отсутствующих данных о влажности
11	11	Конец отсутствующих данных о влажности
12	12	Начало отсутствующих данных о ветре
13	13	Конец отсутствующих данных о ветре
14	14	Зондирование ветра в верхней точке
15	15	Уровень, определяемый решением на региональном уровне
16	16	Зарезервирован
17	17	Уровень давления, первоначально указанный посредством высоты как вертикальной
18	0	Отсутствующее значение
\.


--
-- Name: bufr_code_008042_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008042_seq', 18, true);


--
-- Data for Name: bufr_code_008043; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008043 (id, code, name, formula, cas_number) FROM stdin;
55	54	Зарезервировано	\N	\N
1	0	Озон	O3	10028-15-6
56	55	Зарезервировано	\N	\N
2	1	Водяной пар	H2O	7732-18-5
57	56	Зарезервировано	\N	\N
3	2	Метан	CH4	74-82-8
58	57	Зарезервировано	\N	\N
4	3	Двуокись углерода	CO2	124-38-9
59	58	Зарезервировано	\N	\N
5	4	Оксид углерода	CO	630-08-0
60	59	Зарезервировано	\N	\N
6	5	Двуокись азота	NO2	10102-44-0
61	60	Зарезервировано	\N	\N
7	6	Закись азота	N2O	10024-97-2
62	61	Зарезервировано	\N	\N
8	7	Формальдегид	HCHO	50-00-0
63	62	Зарезервировано	\N	\N
9	8	Диоксид серы	SO2	7446-09-5
10	9	Зарезервировано	\N	\N
11	10	Зарезервировано	\N	\N
12	11	Зарезервировано	\N	\N
13	12	Зарезервировано	\N	\N
14	13	Зарезервировано	\N	\N
15	14	Зарезервировано	\N	\N
16	15	Зарезервировано	\N	\N
17	16	Зарезервировано	\N	\N
18	17	Зарезервировано	\N	\N
19	18	Зарезервировано	\N	\N
20	19	Зарезервировано	\N	\N
21	20	Зарезервировано	\N	\N
22	21	Зарезервировано	\N	\N
23	22	Зарезервировано	\N	\N
24	23	Зарезервировано	\N	\N
25	24	Зарезервировано	\N	\N
26	25	Твердые частицы < 1,0 микрона	\N	\N
27	26	Твердые частицы < 2,5 микрон	\N	\N
28	27	Твердые частицы < 10 микрон	\N	\N
29	28	Аэрозоли (в общем)	\N	\N
30	29	Дым (в общем)	\N	\N
31	30	Вещество земной коры (пыль в общем)	\N	\N
32	31	Вулканический пепел	\N	\N
33	32	Зарезервировано	\N	\N
34	33	Зарезервировано	\N	\N
35	34	Зарезервировано	\N	\N
36	35	Зарезервировано	\N	\N
37	36	Зарезервировано	\N	\N
38	37	Зарезервировано	\N	\N
39	38	Зарезервировано	\N	\N
40	39	Зарезервировано	\N	\N
41	40	Зарезервировано	\N	\N
42	41	Зарезервировано	\N	\N
43	42	Зарезервировано	\N	\N
44	43	Зарезервировано	\N	\N
45	44	Зарезервировано	\N	\N
46	45	Зарезервировано	\N	\N
47	46	Зарезервировано	\N	\N
48	47	Зарезервировано	\N	\N
49	48	Зарезервировано	\N	\N
50	49	Зарезервировано	\N	\N
51	50	Зарезервировано	\N	\N
52	51	Зарезервировано	\N	\N
53	52	Зарезервировано	\N	\N
54	53	Зарезервировано	\N	\N
64	63	Зарезервировано	\N	\N
65	64	Зарезервировано	\N	\N
66	65	Зарезервировано	\N	\N
67	66	Зарезервировано	\N	\N
68	67	Зарезервировано	\N	\N
69	68	Зарезервировано	\N	\N
70	69	Зарезервировано	\N	\N
71	70	Зарезервировано	\N	\N
72	71	Зарезервировано	\N	\N
73	72	Зарезервировано	\N	\N
74	73	Зарезервировано	\N	\N
75	74	Зарезервировано	\N	\N
76	75	Зарезервировано	\N	\N
77	76	Зарезервировано	\N	\N
78	77	Зарезервировано	\N	\N
79	78	Зарезервировано	\N	\N
80	79	Зарезервировано	\N	\N
81	80	Зарезервировано	\N	\N
82	81	Зарезервировано	\N	\N
83	82	Зарезервировано	\N	\N
84	83	Зарезервировано	\N	\N
85	84	Зарезервировано	\N	\N
86	85	Зарезервировано	\N	\N
87	86	Зарезервировано	\N	\N
88	87	Зарезервировано	\N	\N
89	88	Зарезервировано	\N	\N
90	89	Зарезервировано	\N	\N
91	90	Зарезервировано	\N	\N
92	91	Зарезервировано	\N	\N
93	92	Зарезервировано	\N	\N
94	93	Зарезервировано	\N	\N
95	94	Зарезервировано	\N	\N
96	95	Зарезервировано	\N	\N
97	96	Зарезервировано	\N	\N
98	97	Зарезервировано	\N	\N
99	98	Зарезервировано	\N	\N
100	99	Зарезервировано	\N	\N
101	100	Зарезервировано	\N	\N
102	101	Зарезервировано	\N	\N
103	102	Зарезервировано	\N	\N
104	103	Зарезервировано	\N	\N
105	104	Зарезервировано	\N	\N
106	105	Зарезервировано	\N	\N
107	106	Зарезервировано	\N	\N
108	107	Зарезервировано	\N	\N
109	108	Зарезервировано	\N	\N
110	109	Зарезервировано	\N	\N
111	110	Зарезервировано	\N	\N
112	111	Зарезервировано	\N	\N
113	112	Зарезервировано	\N	\N
114	113	Зарезервировано	\N	\N
115	114	Зарезервировано	\N	\N
116	115	Зарезервировано	\N	\N
117	116	Зарезервировано	\N	\N
118	117	Зарезервировано	\N	\N
119	118	Зарезервировано	\N	\N
120	119	Зарезервировано	\N	\N
121	120	Зарезервировано	\N	\N
122	121	Зарезервировано	\N	\N
123	122	Зарезервировано	\N	\N
124	123	Зарезервировано	\N	\N
125	124	Зарезервировано	\N	\N
126	125	Зарезервировано	\N	\N
127	126	Зарезервировано	\N	\N
128	127	Зарезервировано	\N	\N
129	128	Зарезервировано	\N	\N
130	129	Зарезервировано	\N	\N
131	130	Зарезервировано	\N	\N
132	131	Зарезервировано	\N	\N
133	132	Зарезервировано	\N	\N
134	133	Зарезервировано	\N	\N
135	134	Зарезервировано	\N	\N
136	135	Зарезервировано	\N	\N
137	136	Зарезервировано	\N	\N
138	137	Зарезервировано	\N	\N
139	138	Зарезервировано	\N	\N
140	139	Зарезервировано	\N	\N
141	140	Зарезервировано	\N	\N
142	141	Зарезервировано	\N	\N
143	142	Зарезервировано	\N	\N
144	143	Зарезервировано	\N	\N
145	144	Зарезервировано	\N	\N
146	145	Зарезервировано	\N	\N
147	146	Зарезервировано	\N	\N
148	147	Зарезервировано	\N	\N
149	148	Зарезервировано	\N	\N
150	149	Зарезервировано	\N	\N
151	150	Зарезервировано	\N	\N
152	151	Зарезервировано	\N	\N
153	152	Зарезервировано	\N	\N
154	153	Зарезервировано	\N	\N
155	154	Зарезервировано	\N	\N
156	155	Зарезервировано	\N	\N
157	156	Зарезервировано	\N	\N
158	157	Зарезервировано	\N	\N
159	158	Зарезервировано	\N	\N
160	159	Зарезервировано	\N	\N
161	160	Зарезервировано	\N	\N
162	161	Зарезервировано	\N	\N
163	162	Зарезервировано	\N	\N
164	163	Зарезервировано	\N	\N
165	164	Зарезервировано	\N	\N
166	165	Зарезервировано	\N	\N
167	166	Зарезервировано	\N	\N
168	167	Зарезервировано	\N	\N
169	168	Зарезервировано	\N	\N
170	169	Зарезервировано	\N	\N
171	170	Зарезервировано	\N	\N
172	171	Зарезервировано	\N	\N
173	172	Зарезервировано	\N	\N
174	173	Зарезервировано	\N	\N
175	174	Зарезервировано	\N	\N
176	175	Зарезервировано	\N	\N
177	176	Зарезервировано	\N	\N
178	177	Зарезервировано	\N	\N
179	178	Зарезервировано	\N	\N
180	179	Зарезервировано	\N	\N
181	180	Зарезервировано	\N	\N
182	181	Зарезервировано	\N	\N
183	182	Зарезервировано	\N	\N
184	183	Зарезервировано	\N	\N
185	184	Зарезервировано	\N	\N
186	185	Зарезервировано	\N	\N
187	186	Зарезервировано	\N	\N
188	187	Зарезервировано	\N	\N
189	188	Зарезервировано	\N	\N
190	189	Зарезервировано	\N	\N
191	190	Зарезервировано	\N	\N
192	191	Зарезервировано	\N	\N
193	192	Зарезервировано	\N	\N
194	193	Зарезервировано	\N	\N
195	194	Зарезервировано	\N	\N
196	195	Зарезервировано	\N	\N
197	196	Зарезервировано	\N	\N
198	197	Зарезервировано	\N	\N
199	198	Зарезервировано	\N	\N
200	199	Зарезервировано	\N	\N
201	200	Зарезервировано	\N	\N
202	201	Зарезервировано для местного использования	\N	\N
203	202	Зарезервировано для местного использования	\N	\N
204	203	Зарезервировано для местного использования	\N	\N
205	204	Зарезервировано для местного использования	\N	\N
206	205	Зарезервировано для местного использования	\N	\N
207	206	Зарезервировано для местного использования	\N	\N
208	207	Зарезервировано для местного использования	\N	\N
209	208	Зарезервировано для местного использования	\N	\N
210	209	Зарезервировано для местного использования	\N	\N
211	210	Зарезервировано для местного использования	\N	\N
212	211	Зарезервировано для местного использования	\N	\N
213	212	Зарезервировано для местного использования	\N	\N
214	213	Зарезервировано для местного использования	\N	\N
215	214	Зарезервировано для местного использования	\N	\N
216	215	Зарезервировано для местного использования	\N	\N
217	216	Зарезервировано для местного использования	\N	\N
218	217	Зарезервировано для местного использования	\N	\N
219	218	Зарезервировано для местного использования	\N	\N
220	219	Зарезервировано для местного использования	\N	\N
221	220	Зарезервировано для местного использования	\N	\N
222	221	Зарезервировано для местного использования	\N	\N
223	222	Зарезервировано для местного использования	\N	\N
224	223	Зарезервировано для местного использования	\N	\N
225	224	Зарезервировано для местного использования	\N	\N
226	225	Зарезервировано для местного использования	\N	\N
227	226	Зарезервировано для местного использования	\N	\N
228	227	Зарезервировано для местного использования	\N	\N
229	228	Зарезервировано для местного использования	\N	\N
230	229	Зарезервировано для местного использования	\N	\N
231	230	Зарезервировано для местного использования	\N	\N
232	231	Зарезервировано для местного использования	\N	\N
233	232	Зарезервировано для местного использования	\N	\N
234	233	Зарезервировано для местного использования	\N	\N
235	234	Зарезервировано для местного использования	\N	\N
236	235	Зарезервировано для местного использования	\N	\N
237	236	Зарезервировано для местного использования	\N	\N
238	237	Зарезервировано для местного использования	\N	\N
239	238	Зарезервировано для местного использования	\N	\N
240	239	Зарезервировано для местного использования	\N	\N
241	240	Зарезервировано для местного использования	\N	\N
242	241	Зарезервировано для местного использования	\N	\N
243	242	Зарезервировано для местного использования	\N	\N
244	243	Зарезервировано для местного использования	\N	\N
245	244	Зарезервировано для местного использования	\N	\N
246	245	Зарезервировано для местного использования	\N	\N
247	246	Зарезервировано для местного использования	\N	\N
248	247	Зарезервировано для местного использования	\N	\N
249	248	Зарезервировано для местного использования	\N	\N
250	249	Зарезервировано для местного использования	\N	\N
251	250	Зарезервировано для местного использования	\N	\N
252	251	Зарезервировано для местного использования	\N	\N
253	252	Зарезервировано для местного использования	\N	\N
254	253	Зарезервировано для местного использования	\N	\N
255	254	Зарезервировано для местного использования	\N	\N
256	255	Отсутствующее значение	\N	\N
\.


--
-- Name: bufr_code_008043_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008043_seq', 256, true);


--
-- Data for Name: bufr_code_008050; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008050 (id, code, description) FROM stdin;
1	0	Зарезервировано
2	1	Давление
3	2	Температура
4	3	Экстремальная температура
5	4	Давление пара
6	5	Осадки
7	6	Продолжительность солнечного сияния
8	7	Максимальная температура
9	8	Минимальная температура
10	9	Ветер
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_008050_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008050_seq', 16, true);


--
-- Data for Name: bufr_code_008051; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008051 (id, code, description) FROM stdin;
1	1	Давление
2	2	Температура
3	3	Экстремальная температура
4	4	Давление водяного пара
5	5	Осадки
6	6	Продолжительность солнечного сияния
7	7	Отсутствующее значение
\.


--
-- Name: bufr_code_008051_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008051_seq', 7, true);


--
-- Data for Name: bufr_code_008052; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008052 (id, code, description) FROM stdin;
1	0	Средняя скорость ветра, наблюдаемая или зарегистрированная в течение 10-минутного периода, равная или более 10 м.с-1 или 20 узлам
2	1	Средняя скорость ветра, наблюдаемая или зарегистрированная в течение 10-минутного периода, равная или более 20 м.с-1 или 40 узлам
3	2	Средняя скорость ветра, наблюдаемая или зарегистрированная в течение 10-минутного периода, равная или более 30 м.с-1 или 60 узлам
4	3	Максимальная температура менее 273,15 K
5	4	Максимальная температура, равная или более 298,15 K
6	5	Максимальная температура, равная или более 303,15 K
7	6	Максимальная температура, равная или более 308,15 K
8	7	Максимальная температура, равная или более 313,15 K
9	8	Минимальная температура менее 273,15 K
10	9	Максимальная температура, равная или более 273,15 K
11	10	Осадки, равные или более 1,0 кг.м-2
12	11	Осадки, равные или более 5,0 кг.м-2
13	12	Осадки, равные или более 10,0 кг.м-2
14	13	Осадки, равные или более 50,0 кг.м-2
15	14	Осадки, равные или более 100,0 кг.м-2
16	15	Осадки, равные или более 150,0 кг.м-2
17	16	Высота снежного покрова более 0,00 м
18	17	Высота снежного покрова более 0,01 м
19	18	Высота снежного покрова более 0,10 м
20	19	Высота снежного покрова более 0,50 м
21	20	Горизонтальная видимость менее 50 м
22	21	Горизонтальная видимость менее 100 м
23	22	Горизонтальная видимость менее 1 000 м
24	23	Град
25	24	Гроза
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Отсутствующее значение
\.


--
-- Name: bufr_code_008052_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008052_seq', 32, true);


--
-- Data for Name: bufr_code_008053; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008053 (id, code, description) FROM stdin;
1	0	Величина, появившаяся только один день в месяце
2	1	Величина, появившаяся более чем один день в месяце
3	2	Зарезервирована
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_008053_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008053_seq', 4, true);


--
-- Data for Name: bufr_code_008054; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008054 (id, code, description) FROM stdin;
1	0	Скорость ветра или порыва соответствует сообщению
2	1	Скорость ветра больше, чем в сообщении (P в METAR/TAF/SPECI)
3	2	Зарезервировано
4	3	Зарезервировано
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_008054_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008054_seq', 8, true);


--
-- Data for Name: bufr_code_008060; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008060 (id, code, description) FROM stdin;
1	0	Зарезервирована
2	1	Расстояние
3	2	Азимут
4	3	Горизонталь
5	4	Вертикаль
6	5	Север/юг
7	6	Восток/запад
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_008060_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008060_seq', 16, true);


--
-- Data for Name: bufr_code_008065; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008065 (id, code, description) FROM stdin;
1	0	Нет солнечных бликов
2	1	Солнечные блики
3	2	Зарезервировано
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_008065_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008065_seq', 4, true);


--
-- Data for Name: bufr_code_008066; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008066 (id, code, description) FROM stdin;
1	0	Непрозрачный
2	1	Полупрозрачный
3	2	Зарезервировано
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_008066_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008066_seq', 4, true);


--
-- Data for Name: bufr_code_008070; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008070 (id, code, description) FROM stdin;
1	0	Зарезервирована
2	1	Зарезервирована
3	2	Показатели приборов, расположенных на поверхности земли, коэффициенты калибровки и обслуживание (уровень 1b)
4	3	Калиброванные данные излучения на поверхности земли (уровень 1с)
5	4	Приведенные к зоне обслуживания общего спутника калиброванные данные излучения на поверхности земли (уровень 1d)
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_008070_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008070_seq', 16, true);


--
-- Data for Name: bufr_code_008072; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008072 (id, code, description) FROM stdin;
1	0	Неполная облачность
2	1	Ясное небо
3	2	Облачность
4	3	Вероятно, ясное небо
5	4	Вероятно, облачное небо
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_008072_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008072_seq', 8, true);


--
-- Data for Name: bufr_code_008074; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008074 (id, code, description) FROM stdin;
1	0	Открытый океан или полузакрытое море
2	1	Сигнал, отраженный не от поверхности океана
3	2	Зарезервировано
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_008074_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008074_seq', 4, true);


--
-- Data for Name: bufr_code_008075; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008075 (id, code, description) FROM stdin;
1	0	Восходящая орбита
2	1	Нисходящая орбита
3	2	Зарезервирована
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_008075_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008075_seq', 4, true);


--
-- Data for Name: bufr_code_008076; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008076 (id, code, description) FROM stdin;
1	0	Ku
2	1	C
3	2	Длинноволновая инфракрасная
4	3	Средневолновая инфракрасная
5	4	Коротковолновая инфракрасная
6	5	М
7	6	I
8	7	День/ночь
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Зарезервировано
33	32	Зарезервировано
34	33	Зарезервировано
35	34	Зарезервировано
36	35	Зарезервировано
37	36	Зарезервировано
38	37	Зарезервировано
39	38	Зарезервировано
40	39	Зарезервировано
41	40	Зарезервировано
42	41	Зарезервировано
43	42	Зарезервировано
44	43	Зарезервировано
45	44	Зарезервировано
46	45	Зарезервировано
47	46	Зарезервировано
48	47	Зарезервировано
49	48	Зарезервировано
50	49	Зарезервировано
51	50	Зарезервировано
52	51	Зарезервировано
53	52	Зарезервировано
54	53	Зарезервировано
55	54	Зарезервировано
56	55	Зарезервировано
57	56	Зарезервировано
58	57	Зарезервировано
59	58	Зарезервировано
60	59	Зарезервировано
61	60	Зарезервировано
62	61	Зарезервировано
63	62	Зарезервировано
64	63	Отсутствующее значение
\.


--
-- Name: bufr_code_008076_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008076_seq', 64, true);


--
-- Data for Name: bufr_code_008077; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008077 (id, code, description) FROM stdin;
1	0	Суша
2	1	Море
3	2	Берег
4	3	Открытый океан или полузамкнутое море
5	4	Внутреннее море или озеро
6	5	Материковый лед
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Зарезервировано
33	32	Зарезервировано
34	33	Зарезервировано
35	34	Зарезервировано
36	35	Зарезервировано
37	36	Зарезервировано
38	37	Зарезервировано
39	38	Зарезервировано
40	39	Зарезервировано
41	40	Зарезервировано
42	41	Зарезервировано
43	42	Зарезервировано
44	43	Зарезервировано
45	44	Зарезервировано
46	45	Зарезервировано
47	46	Зарезервировано
48	47	Зарезервировано
49	48	Зарезервировано
50	49	Зарезервировано
51	50	Зарезервировано
52	51	Зарезервировано
53	52	Зарезервировано
54	53	Зарезервировано
55	54	Зарезервировано
56	55	Зарезервировано
57	56	Зарезервировано
58	57	Зарезервировано
59	58	Зарезервировано
60	59	Зарезервировано
61	60	Зарезервировано
62	61	Зарезервировано
63	62	Зарезервировано
64	63	Зарезервировано
65	64	Зарезервировано
66	65	Зарезервировано
67	66	Зарезервировано
68	67	Зарезервировано
69	68	Зарезервировано
70	69	Зарезервировано
71	70	Зарезервировано
72	71	Зарезервировано
73	72	Зарезервировано
74	73	Зарезервировано
75	74	Зарезервировано
76	75	Зарезервировано
77	76	Зарезервировано
78	77	Зарезервировано
79	78	Зарезервировано
80	79	Зарезервировано
81	80	Зарезервировано
82	81	Зарезервировано
83	82	Зарезервировано
84	83	Зарезервировано
85	84	Зарезервировано
86	85	Зарезервировано
87	86	Зарезервировано
88	87	Зарезервировано
89	88	Зарезервировано
90	89	Зарезервировано
91	90	Зарезервировано
92	91	Зарезервировано
93	92	Зарезервировано
94	93	Зарезервировано
95	94	Зарезервировано
96	95	Зарезервировано
97	96	Зарезервировано
98	97	Зарезервировано
99	98	Зарезервировано
100	99	Зарезервировано
101	100	Зарезервировано
102	101	Зарезервировано
103	102	Зарезервировано
104	103	Зарезервировано
105	104	Зарезервировано
106	105	Зарезервировано
107	106	Зарезервировано
108	107	Зарезервировано
109	108	Зарезервировано
110	109	Зарезервировано
111	110	Зарезервировано
112	111	Зарезервировано
113	112	Зарезервировано
114	113	Зарезервировано
115	114	Зарезервировано
116	115	Зарезервировано
117	116	Зарезервировано
118	117	Зарезервировано
119	118	Зарезервировано
120	119	Зарезервировано
121	120	Зарезервировано
122	121	Зарезервировано
123	122	Зарезервировано
124	123	Зарезервировано
125	124	Зарезервировано
126	125	Зарезервировано
127	126	Зарезервировано
128	127	Отсутствующее значение
\.


--
-- Name: bufr_code_008077_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008077_seq', 128, true);


--
-- Data for Name: bufr_code_008079; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008079 (id, code, description) FROM stdin;
1	0	Регулярный выпуск
2	1	Исправление в ранее выпущенной продукции (COR)
3	2	Поправка к ранее выпущенной продукции (AMD)
4	3	Исправление в ранее выпущенной продукции, содержащей поправку (COR AMD)
5	4	Отмена ранее выпущенной продукции (CNL)
6	5	Продукция отсутствует (NIL)
7	6	Специальная сводка (SPECI)
8	7	Специальная сводка с поправкой (SPECI COR)
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение или не применимо
\.


--
-- Name: bufr_code_008079_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008079_seq', 16, true);


--
-- Data for Name: bufr_code_008080; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008080 (id, code, description) FROM stdin;
1	0	Общий профиль давления воды
2	1	Общий профиль температуры воды
3	2	Общий профиль солености воды
4	3	Общий профиль проводимости воды
5	4	Общая глубина воды
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Давление воды на горизонте
12	11	Температура воды на горизонте
13	12	Соленость на горизонте
14	13	Глубина воды на горизонте
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Местоположение
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Зарезервировано
33	32	Зарезервировано
34	33	Зарезервировано
35	34	Зарезервировано
36	35	Зарезервировано
37	36	Зарезервировано
38	37	Зарезервировано
39	38	Зарезервировано
40	39	Зарезервировано
41	40	Зарезервировано
42	41	Зарезервировано
43	42	Зарезервировано
44	43	Зарезервировано
45	44	Зарезервировано
46	45	Зарезервировано
47	46	Зарезервировано
48	47	Зарезервировано
49	48	Зарезервировано
50	49	Зарезервировано
51	50	Зарезервировано
52	51	Зарезервировано
53	52	Зарезервировано
54	53	Зарезервировано
55	54	Зарезервировано
56	55	Зарезервировано
57	56	Зарезервировано
58	57	Зарезервировано
59	58	Зарезервировано
60	59	Зарезервировано
61	60	Зарезервировано
62	61	Зарезервировано
63	62	Зарезервировано
64	63	Отсутствующее значение
\.


--
-- Name: bufr_code_008080_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008080_seq', 64, true);


--
-- Data for Name: bufr_code_008081; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008081 (id, code, description) FROM stdin;
1	0	Датчик
2	1	Передатчик
3	2	Приемник
4	3	Наблюдательная платформа
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Зарезервировано
33	32	Зарезервировано
34	33	Зарезервировано
35	34	Зарезервировано
36	35	Зарезервировано
37	36	Зарезервировано
38	37	Зарезервировано
39	38	Зарезервировано
40	39	Зарезервировано
41	40	Зарезервировано
42	41	Зарезервировано
43	42	Зарезервировано
44	43	Зарезервировано
45	44	Зарезервировано
46	45	Зарезервировано
47	46	Зарезервировано
48	47	Зарезервировано
49	48	Зарезервировано
50	49	Зарезервировано
51	50	Зарезервировано
52	51	Зарезервировано
53	52	Зарезервировано
54	53	Зарезервировано
55	54	Зарезервировано
56	55	Зарезервировано
57	56	Зарезервировано
58	57	Зарезервировано
59	58	Зарезервировано
60	59	Зарезервировано
61	60	Зарезервировано
62	61	Зарезервировано
63	62	Зарезервировано
64	63	Отсутствующее значение
\.


--
-- Name: bufr_code_008081_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008081_seq', 64, true);


--
-- Data for Name: bufr_code_008082; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008082 (id, code, description) FROM stdin;
1	0	Высота датчика не скорректирована
2	1	Высота датчика скорректирована к стандартному уровню*
3	2	Зарезервировано
4	3	Зарезервировано
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_008082_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008082_seq', 8, true);


--
-- Data for Name: bufr_code_008083; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008083 (id, code, description) FROM stdin;
1	1	Скорректировано в отношении репрезентативной высоты датчика над местным уровнем земли (или над палубой морской платформы)
2	2	Скорректировано в отношении репрезентативной высоты датчика над поверхностью воды
3	3	Скорректировано в отношении стандартной шероховатости поверхности
4	4	Скорректировано в отношении скорости ветра
5	5	Скорректировано в отношении температуры
6	6	Скорректировано в отношении давления
7	7	Скорректировано в отношении влажности
8	8	Скорректировано в отношении испарения
9	9	Скорректировано в отношении потерь в увлажнении
10	10	Зарезервировано
11	11	Зарезервировано
12	12	Зарезервировано
13	13	Зарезервировано
14	14	Зарезервировано
15	0	Отсутствующее значение
\.


--
-- Name: bufr_code_008083_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008083_seq', 15, true);


--
-- Data for Name: bufr_code_008085; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008085 (id, code, description) FROM stdin;
1	0	Передний луч
2	1	Средний луч
3	2	Задний луч
4	3	Зарезервировано
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_008085_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008085_seq', 8, true);


--
-- Data for Name: bufr_code_008086; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_008086 (id, bit_number, description) FROM stdin;
1	1	Поверхность «земли» в модели
2	2	Стандартный уровень
3	3	Уровень тропопаузы
4	4	Уровень максимального ветра
5	5	Особая точка по температуре
6	6	Особая точка по влажности
7	7	Особая точка по ветру
8	8	Вертикально интерполированный уровень (он должен быть задан как 1 для точек на вертикальном профиле, которые находятся между собственными вертикальными модельными уровнями)
9	9	Виртуальная высота станции
10	10	Зарезервировано
11	11	Зарезервировано
12	0	Отсутствующее значение
\.


--
-- Name: bufr_code_008086_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_008086_seq', 12, true);


--
-- Data for Name: bufr_code_010063; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_010063 (id, code, description) FROM stdin;
1	0	Рост, затем падение; атмосферное давление такое же или выше, чем 3 часа назад
2	1	Рост, затем ровный ход; или рост, затем более слабый рост
3	2	Рост (равномерный или неравномерный)
4	3	Падение или ровный ход, затем рост; затем более слабый рост
5	4	Ровный ход; атмосферное давление такое же, как и 3 часа назад
6	5	Падение, затем рост; атмосферное давление такое же или ниже, чем 3 часа назад
7	6	Падение, затем ровный ход; или падение, затем более слабое падение
8	7	Падение (равномерное или неравномерное)
9	8	Ровный ход или рост, затем падение; или падение, затем падение более сильное
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_010063_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_010063_seq', 16, true);


--
-- Data for Name: bufr_code_010064; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_010064 (id, code, description) FROM stdin;
1	0	Дозвуковой
2	1	Околозвуковой
3	2	Сверхзвуковой
4	3	Зарезервировано
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_010064_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_010064_seq', 8, true);


--
-- Data for Name: bufr_code_011030; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_011030 (id, code, description) FROM stdin;
1	0	Ноль
2	1	Легкая
3	2	Умеренная
4	3	Сильная
5	4	Ноль
6	5	Легкая
7	6	Умеренная
8	7	Сильная
9	8	Ноль
10	9	Легкая
11	10	Умеренная
12	11	Сильная
13	12	Экстремальная при ясном небе
14	13	Экстремальная при облачном небе
15	14	Экстремальная, облачное/ясное небо не указано
16	15	Легкая, в отдельных случаях умеренная
17	16	Легкая, иногда умеренная
18	17	Легкая, часто умеренная
19	18	Умеренная, в отдельных случаях сильная
20	19	Умеренная, иногда сильная
21	20	Умеренная, часто сильная
22	21	Сильная, в отдельных случаях экстремальная
23	22	Сильная, иногда экстремальная
24	23	Сильная, часто экстремальная
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Зарезервировано
33	32	Зарезервировано
34	33	Зарезервировано
35	34	Зарезервировано
36	35	Зарезервировано
37	36	Зарезервировано
38	37	Зарезервировано
39	38	Зарезервировано
40	39	Зарезервировано
41	40	Зарезервировано
42	41	Зарезервировано
43	42	Зарезервировано
44	43	Зарезервировано
45	44	Зарезервировано
46	45	Зарезервировано
47	46	Зарезервировано
48	47	Зарезервировано
49	48	Зарезервировано
50	49	Зарезервировано
51	50	Зарезервировано
52	51	Зарезервировано
53	52	Зарезервировано
54	53	Зарезервировано
55	54	Зарезервировано
56	55	Зарезервировано
57	56	Зарезервировано
58	57	Зарезервировано
59	58	Зарезервировано
60	59	Зарезервировано
61	60	Зарезервировано
62	61	Зарезервировано
63	62	Зарезервировано
64	63	Отсутствующее значение
\.


--
-- Name: bufr_code_011030_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_011030_seq', 64, true);


--
-- Data for Name: bufr_code_011031; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_011031 (id, code, description) FROM stdin;
1	0	Ноль
2	1	Легкая
3	2	Умеренная
4	3	Сильная
5	4	Ноль
6	5	Легкая
7	6	Умеренная
8	7	Сильная
9	8	Ноль
10	9	Легкая
11	10	Умеренная
12	11	Сильная
13	12	Экстремальная при ясном небе
14	13	Экстремальная при облачном небе
15	14	Экстремальная, облачное/ясное небо не указано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_011031_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_011031_seq', 16, true);


--
-- Data for Name: bufr_code_011037; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_011037 (id, code, unknown1, unknown2) FROM stdin;
1	0	ave < 0,1	peak < 0,1
44	43	Зарезервировано	Зарезервировано
2	1	ave < 0,1	0,1 ≤ peak < 0,2
3	2	0,1 ≤	ave < 0,2
62	61	Зарезервировано	Зарезервировано
4	3	ave < 0,1	0,2 ≤ peak < 0,3
45	44	Зарезервировано	Зарезервировано
5	4	0,1 ≤	ave < 0,2
6	5	0,2 ≤	ave < 0,3
7	6	ave < 0,1	0,3 ≤ peak < 0,4
46	45	Зарезервировано	Зарезервировано
8	7	0,1 ≤	ave < 0,2
9	8	0,2 ≤	ave < 0,3
10	9	0,3 ≤	ave < 0,4
47	46	Зарезервировано	Зарезервировано
11	10	ave < 0,1	0,4 ≤ peak < 0,5
12	11	0,1 ≤	ave < 0,2
63	62	Зарезервировано	Зарезервировано
13	12	0,2 ≤	ave < 0,3
48	47	Зарезервировано	Зарезервировано
14	13	0,3 ≤	ave < 0,4
15	14	0,4 ≤	ave < 0,5
16	15	ave < 0,1	0,5 ≤ peak < 0,8
49	48	Зарезервировано	Зарезервировано
17	16	0,1 ≤	ave < 0,2
18	17	0,2 ≤	ave < 0,3
19	18	0,3 ≤	ave < 0,4
50	49	Зарезервировано	Зарезервировано
20	19	0,4 ≤	ave < 0,5
21	20	0,5 ≤	ave < 0,8
64	63	Отсутствующее значение	Отсутствующее значение
22	21	ave < 0,1	0,8 ≤ peak
51	50	Зарезервировано	Зарезервировано
23	22	0,1 ≤	ave < 0,2
24	23	0,2 ≤	ave < 0,3
25	24	0,3 ≤	ave < 0,4
52	51	Зарезервировано	Зарезервировано
26	25	0,4 ≤	ave < 0,5
27	26	0,5 ≤	ave < 0,8
28	27	0,8 ≤	ave
53	52	Зарезервировано	Зарезервировано
29	28	Нуль	Нуль
30	29	Зарезервировано	Зарезервировано
31	30	Зарезервировано	Зарезервировано
54	53	Зарезервировано	Зарезервировано
32	31	Зарезервировано	Зарезервировано
33	32	Зарезервировано	Зарезервировано
34	33	Зарезервировано	Зарезервировано
55	54	Зарезервировано	Зарезервировано
35	34	Зарезервировано	Зарезервировано
36	35	Зарезервировано	Зарезервировано
37	36	Зарезервировано	Зарезервировано
56	55	Зарезервировано	Зарезервировано
38	37	Зарезервировано	Зарезервировано
39	38	Зарезервировано	Зарезервировано
40	39	Зарезервировано	Зарезервировано
57	56	Зарезервировано	Зарезервировано
41	40	Зарезервировано	Зарезервировано
42	41	Зарезервировано	Зарезервировано
43	42	Зарезервировано	Зарезервировано
58	57	Зарезервировано	Зарезервировано
59	58	Зарезервировано	Зарезервировано
60	59	Зарезервировано	Зарезервировано
61	60	Зарезервировано	Зарезервировано
\.


--
-- Name: bufr_code_011037_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_011037_seq', 64, true);


--
-- Data for Name: bufr_code_011038; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_011038 (id, code, supervision_time_before) FROM stdin;
1	0	min < 1
2	1	1 ≤ min < 2
3	2	2 ≤ min < 3
4	3	3 ≤ min < 4
5	4	4 ≤ min < 5
6	5	5 ≤ min < 6
7	6	6 ≤ min < 7
8	7	7 ≤ min < 8
9	8	8 ≤ min < 9
10	9	9 ≤ min < 10
11	10	10 ≤ min < 11
12	11	11 ≤ min < 12
13	12	12 ≤ min < 13
14	13	13 ≤ min < 14
15	14	14 ≤ min < 15
16	15	Информации о времени не имеется
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Отсутствующее значение
\.


--
-- Name: bufr_code_011038_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_011038_seq', 32, true);


--
-- Data for Name: bufr_code_011039; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_011039 (id, code, supervision_time_before) FROM stdin;
1	0	min < 1
2	1	1 ≤ min < 2
3	2	2 ≤ min < 3
4	3	3 ≤ min < 4
5	4	4 ≤ min < 5
6	5	5 ≤ min < 6
7	6	6 ≤ min < 7
8	7	7 ≤ min < 8
9	8	8 ≤ min < 9
10	9	9 ≤ min < 10
11	10	10 ≤ min < 11
12	11	11 ≤ min < 12
13	12	12 ≤ min < 13
14	13	13 ≤ min < 14
15	14	14 ≤ min < 15
16	15	Как и выше, до значения 59 ≤ min < 60
17	16	Как и выше, до значения 59 ≤ min < 60
18	17	Как и выше, до значения 59 ≤ min < 60
19	18	Как и выше, до значения 59 ≤ min < 60
20	19	Как и выше, до значения 59 ≤ min < 60
21	20	Как и выше, до значения 59 ≤ min < 60
22	21	Как и выше, до значения 59 ≤ min < 60
23	22	Как и выше, до значения 59 ≤ min < 60
24	23	Как и выше, до значения 59 ≤ min < 60
25	24	Как и выше, до значения 59 ≤ min < 60
26	25	Как и выше, до значения 59 ≤ min < 60
27	26	Как и выше, до значения 59 ≤ min < 60
28	27	Как и выше, до значения 59 ≤ min < 60
29	28	Как и выше, до значения 59 ≤ min < 60
30	29	Как и выше, до значения 59 ≤ min < 60
31	30	Как и выше, до значения 59 ≤ min < 60
32	31	Как и выше, до значения 59 ≤ min < 60
33	32	Как и выше, до значения 59 ≤ min < 60
34	33	Как и выше, до значения 59 ≤ min < 60
35	34	Как и выше, до значения 59 ≤ min < 60
36	35	Как и выше, до значения 59 ≤ min < 60
37	36	Как и выше, до значения 59 ≤ min < 60
38	37	Как и выше, до значения 59 ≤ min < 60
39	38	Как и выше, до значения 59 ≤ min < 60
40	39	Как и выше, до значения 59 ≤ min < 60
41	40	Как и выше, до значения 59 ≤ min < 60
42	41	Как и выше, до значения 59 ≤ min < 60
43	42	Как и выше, до значения 59 ≤ min < 60
44	43	Как и выше, до значения 59 ≤ min < 60
45	44	Как и выше, до значения 59 ≤ min < 60
46	45	Как и выше, до значения 59 ≤ min < 60
47	46	Как и выше, до значения 59 ≤ min < 60
48	47	Как и выше, до значения 59 ≤ min < 60
49	48	Как и выше, до значения 59 ≤ min < 60
50	49	Как и выше, до значения 59 ≤ min < 60
51	50	Как и выше, до значения 59 ≤ min < 60
52	51	Как и выше, до значения 59 ≤ min < 60
53	52	Как и выше, до значения 59 ≤ min < 60
54	53	Как и выше, до значения 59 ≤ min < 60
55	54	Как и выше, до значения 59 ≤ min < 60
56	55	Как и выше, до значения 59 ≤ min < 60
57	56	Как и выше, до значения 59 ≤ min < 60
58	57	Как и выше, до значения 59 ≤ min < 60
59	58	Как и выше, до значения 59 ≤ min < 60
60	59	Как и выше, до значения 59 ≤ min < 60
61	60	Информации о времени не имеется
62	61	Зарезервировано
63	62	Зарезервировано
64	63	Отсутствующее значение
\.


--
-- Name: bufr_code_011039_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_011039_seq', 64, true);


--
-- Data for Name: bufr_code_013038; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_013038 (id, code, description) FROM stdin;
1	0	Несверхадиабатический
2	1	Сверхадиабатический
3	2	Зарезервировано
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_013038_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_013038_seq', 4, true);


--
-- Data for Name: bufr_code_013039; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_013039 (id, code, description) FROM stdin;
1	0	Морской лед
2	1	Снег на суше
3	2	Зарезервировано
4	3	Зарезервировано
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_013039_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_013039_seq', 8, true);


--
-- Data for Name: bufr_code_013040; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_013040 (id, code, description) FROM stdin;
1	0	Суша
2	1	Зарезервировано
3	2	Близко к берегу
4	3	Лед
5	4	Возможно, лед
6	5	Океан
7	6	Берег
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_013040_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_013040_seq', 16, true);


--
-- Data for Name: bufr_code_013041; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_013041 (id, code, description) FROM stdin;
1	1	A
2	2	A–B
3	3	B
4	4	B–C
5	5	C
6	6	D
7	7	E
8	8	F
9	9	G
10	10	Зарезервировано
11	11	Зарезервировано
12	12	Зарезервировано
13	13	Зарезервировано
14	14	Зарезервировано
15	15	Отсутствующее значение
\.


--
-- Name: bufr_code_013041_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_013041_seq', 15, true);


--
-- Data for Name: bufr_code_013051; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_013051 (id, code, description) FROM stdin;
1	0	Меньше, чем любое значение за 30-летний период
2	1	В первой квантили
3	2	Во второй квантили
4	3	В третьей квантили
5	4	В четвертой квантили
6	5	В пятой квантили
7	6	Больше, чем любое значение за 30-летний период
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_013051_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_013051_seq', 16, true);


--
-- Data for Name: bufr_code_013056; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_013056 (id, code, description) FROM stdin;
1	0	Без осадков
2	1	Незначительные, с перерывами
3	2	Умеренные, с перерывами
4	3	Сильные, с перерывами
5	4	Очень сильные, с перерывами
6	5	Незначительные, непрерывные
7	6	Умеренные, непрерывные
8	7	Сильные, непрерывные
9	8	Очень сильные, непрерывные
10	9	Переменной интенсивности — чередование незначительных и сильных
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_013056_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_013056_seq', 16, true);


--
-- Data for Name: bufr_code_013057; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_013057 (id, code, description) FROM stdin;
1	0	Без осадков
2	1	В пределах последнего часа
3	2	От 1 до 2 часов назад
4	3	От 2 до 3 часов назад
5	4	От 3 до 4 часов назад
6	5	От 4 до 5 часов назад
7	6	От 5 до 6 часов назад
8	7	От 6 до 8 часов назад
9	8	От 8 до 10 часов назад
10	9	Более 10 часов назад
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_013057_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_013057_seq', 16, true);


--
-- Data for Name: bufr_code_015025; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_015025 (id, code, description) FROM stdin;
1	0	Озон
2	1	Зарезервировано
3	2	Зарезервировано
4	3	Зарезервировано
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Мелкие твердые частицы (диаметр < 2,5 микронов)
13	12	Мелкие твердые частицы (диаметр < 10 микронов)
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_015025_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_015025_seq', 16, true);


--
-- Data for Name: bufr_code_019001; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_019001 (id, code, description) FROM stdin;
1	0	Депрессия или область низкого давления (внетропическая)
2	1	Тропическая депрессия
3	2	Тропический шторм
4	3	Сильный тропический шторм
5	4	Тайфун
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Пыльная/песчаная буря
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Зарезервировано
33	32	Зарезервировано
34	33	Зарезервировано
35	34	Зарезервировано
36	35	Зарезервировано
37	36	Зарезервировано
38	37	Зарезервировано
39	38	Зарезервировано
40	39	Зарезервировано
41	40	Зарезервировано
42	41	Зарезервировано
43	42	Зарезервировано
44	43	Зарезервировано
45	44	Зарезервировано
46	45	Зарезервировано
47	46	Зарезервировано
48	47	Зарезервировано
49	48	Зарезервировано
50	49	Зарезервировано
51	50	Зарезервировано
52	51	Зарезервировано
53	52	Зарезервировано
54	53	Зарезервировано
55	54	Зарезервировано
56	55	Зарезервировано
57	56	Зарезервировано
58	57	Зарезервировано
59	58	Зарезервировано
60	59	Зарезервировано
61	60	Зарезервировано
62	61	Зарезервировано
63	62	Зарезервировано
64	63	Отсутствующее значение
\.


--
-- Name: bufr_code_019001_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_019001_seq', 64, true);


--
-- Data for Name: bufr_code_019008; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_019008 (id, code, description) FROM stdin;
1	0	Зарезервирована
2	1	Тонкое (верхняя граница циркуляции ниже уровня в 700 гПа)
3	2	Среднее (верхняя граница между уровнями в 700 и 400 гПа)
4	3	Глубокое (верхняя граница выше уровня в 400 гПа)
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_019008_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_019008_seq', 8, true);


--
-- Data for Name: bufr_code_019010; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_019010 (id, code, description) FROM stdin;
1	1	Минимальное значение давления на уровне моря
2	2	Максимальное значение относительной завихренности на уровне 850 гПа
3	3	Зарезервировано
4	4	Зарезервировано
5	5	Зарезервировано
6	6	Зарезервировано
7	7	Зарезервировано
8	8	Зарезервировано
9	9	Зарезервировано
10	10	Зарезервировано
11	11	Зарезервировано
12	12	Зарезервировано
13	13	Зарезервировано
14	14	Зарезервировано
15	15	Отсутствующее значение
\.


--
-- Name: bufr_code_019010_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_019010_seq', 15, true);


--
-- Data for Name: bufr_code_019100; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_019100 (id, code, description) FROM stdin;
1	0	Не используются
2	1	Не используются
3	2	Не используются
4	3	В течение предшествующих 15 минут
5	4	В течение предшествующих 30 минут
6	5	В течение предшествующего 1 часа
7	6	В течение предшествующих 2 часов
8	7	В течение предшествующих 3 часов
9	8	В течение предшествующих 6 часов
10	9	В течение периода более 6 часов
11	10	Не определен
12	11	Не используются
13	12	Не используются
14	13	Не используются
15	14	Не используются
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_019100_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_019100_seq', 16, true);


--
-- Data for Name: bufr_code_019101; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_019101 (id, code, description) FROM stdin;
1	0	Зарезервировано
2	1	Глаз, видимый на экране радиолокатора, точность хорошая (в пределах 10 км)
3	2	Глаз, видимый на экране радиолокатора, точность посредственная (в пределах 30 км)
4	3	Глаз, видимый на экране радиолокатора, точность плохая (в пределах 50 км)
5	4	Местоположение центра в пределах района, охватываемого радиусом действия радиолокатора, определение посредством наложения спиральных полос, точность хорошая (в пределах 10 км)
6	5	Местоположение центра в пределах района, охватываемого радиусом действия радиолокатора, определение посредством наложения спиральных полос, точность посредственная (в пределах
7	6	Местоположение центра в пределах района, охватываемого радиусом действия радиолокатора, определение посредством наложения спиральных полос, точность плохая (в пределах 50 км)
8	7	Местоположение центра за пределами района, охватываемого радиусом действия радиолокатора, экстраполяция посредством наложения спиральных полос
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Точность не определена
12	11	Не используются
13	12	Не используются
14	13	Не используются
15	14	Не используются
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_019101_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_019101_seq', 16, true);


--
-- Data for Name: bufr_code_019102; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_019102 (id, code, description) FROM stdin;
1	0	Круглая
2	1	Эллиптическая — длина малой оси не менее 3/4 длины большой оси
3	2	Эллиптическая — длина малой оси менее 3/4 длины большой оси
4	3	Видимый двойной глаз
5	4	Другая форма
6	5	Нечетко определена
7	6	Не определена
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_019102_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_019102_seq', 8, true);


--
-- Data for Name: bufr_code_019103; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_019103 (id, code, description) FROM stdin;
1	0	Менее 5 км
2	1	От 5 до менее 10 км
3	2	От 10 до менее 15 км
4	3	От 15 до менее 20 км
5	4	От 20 до менее 25 км
6	5	От 25 до менее 30 км
7	6	От 30 до менее 35 км
8	7	От 35 до менее 40 км
9	8	От 40 до менее 50 км
10	9	50 км и больше
11	10	Не определен
12	11	Не используются
13	12	Не используются
14	13	Не используются
15	14	Не используются
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_019103_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_019103_seq', 16, true);


--
-- Data for Name: bufr_code_019104; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_019104 (id, code, description) FROM stdin;
1	0	Глаз впервые стал видимым в течение последних 30 минут
2	1	Никакого существенного изменения в характеристиках или размере глаза
3	2	Глаз уменьшился без какого-либо другого существенного изменения в его характеристиках
4	3	Глаз увеличился без какого-либо другого существенного изменения в его характеристиках
5	4	Глаз стал менее отчетливым без какого-либо существенного изменения в размере
6	5	Глаз стал менее отчетливым и уменьшился в размере
7	6	Глаз стал менее отчетливым и увеличился в размере
8	7	Глаз стал более отчетливым без какого-либо существенного изменения в размере
9	8	Глаз стал более отчетливым и уменьшился в размере
10	9	Глаз стал более отчетливым и увеличился в размере
11	10	Изменения в характере и размере глаза определить невозможно
12	11	Не используются
13	12	Не используются
14	13	Не используются
15	14	Не используются
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_019104_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_019104_seq', 16, true);


--
-- Data for Name: bufr_code_019105; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_019105 (id, code, description) FROM stdin;
1	0	От 0 до менее 100 км
2	1	От 100 до менее 200 км
3	2	От 200 до менее 300 км
4	3	От 300 до менее 400 км
5	4	От 400 до менее 500 км
6	5	От 500 до менее 600 км
7	6	От 600 до менее 800 км
8	7	800 км или больше
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Сомнительное или неопределенное
12	11	Не используются
13	12	Не используются
14	13	Не используются
15	14	Не используются
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_019105_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_019105_seq', 16, true);


--
-- Data for Name: bufr_code_019107; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_019107 (id, code, description) FROM stdin;
1	0	Менее 1 часа
2	1	От 1 до менее 2 часов
3	2	От 2 до менее 3 часов
4	3	От 3 до менее 6 часов
5	4	От 6 до менее 9 часов
6	5	От 9 до менее 12 часов
7	6	От 12 до менее 15 часов
8	7	От 15 до менее 18 часов
9	8	От 18 до менее 21 часа
10	9	От 21 до менее 30 часов
11	10	Не используются
12	11	Не используются
13	12	Не используются
14	13	Не используются
15	14	Не используются
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_019107_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_019107_seq', 16, true);


--
-- Data for Name: bufr_code_019108; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_019108 (id, code, description) FROM stdin;
1	0	Центр циклона в пределах 10 км от переданного положения
2	1	Центр циклона в пределах 20 км от переданного положения
3	2	Центр циклона в пределах 50 км от переданного положения
4	3	Центр циклона в пределах 100 км от переданного положения
5	4	Центр циклона в пределах 200 км от переданного положения
6	5	Центр циклона в пределах 300 км от переданного положения
7	6	Центр циклона не определен
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_019108_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_019108_seq', 8, true);


--
-- Data for Name: bufr_code_019109; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_019109 (id, code, description) FROM stdin;
1	0	Меньше 1° широты
2	1	От 1° до менее 2° широты
3	2	От 2° до менее 3° широты
4	3	От 3° до менее 4° широты
5	4	От 4° до менее 5° широты
6	5	От 5° до менее 6° широты
7	6	От 6° до менее 7° широты
8	7	От 7° до менее 8° широты
9	8	От 8° до менее 9° широты
10	9	9° широты или более
11	10	Не определен
12	11	Не используются
13	12	Не используются
14	13	Не используются
15	14	Не используются
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_019109_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_019109_seq', 16, true);


--
-- Data for Name: bufr_code_019110; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_019110 (id, code, description) FROM stdin;
1	0	Значительное ослабление
2	1	Ослабление
3	2	Без изменений
4	3	Усиление
5	4	Значительное усиление
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Ранее не наблюдалось
11	10	Не определено
12	11	Не используются
13	12	Не используются
14	13	Не используются
15	14	Не используются
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_019110_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_019110_seq', 16, true);


--
-- Data for Name: bufr_code_019113; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_019113 (id, code, type) FROM stdin;
1	1	Изогнутая полоса
2	2	Сдвиг
3	3	Глаз
4	4	Слоистообразный глаз
5	5	Центральная плотная сплошная облачность (ЦПСО)
6	6	Смешанный центр
7	7	Холодная облачность по центру (ХОЦ)
8	8	Зарезервировано
9	9	Зарезервировано
10	10	Зарезервировано
11	11	Зарезервировано
12	12	Зарезервировано
13	13	Зарезервировано
14	14	Зарезервировано
15	15	Отсутствующее значение
\.


--
-- Name: bufr_code_019113_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_019113_seq', 15, true);


--
-- Data for Name: bufr_code_019117; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_019117 (id, code, type) FROM stdin;
1	1	A (изогнутая полоса)
2	2	B (ЦПСО)
3	3	C (сдвиг)
4	4	Зарезервировано
5	5	Зарезервировано
6	6	Зарезервировано
7	7	Отсутствующее значение
\.


--
-- Name: bufr_code_019117_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_019117_seq', 7, true);


--
-- Data for Name: bufr_code_019119; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_019119 (id, code, type) FROM stdin;
1	1	Номер ТД
2	2	Номер ТМ
3	3	Номер ОТМ
4	4	Зарезервировано
5	5	Зарезервировано
6	6	Зарезервировано
7	7	Отсутствующее значение
\.


--
-- Name: bufr_code_019119_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_019119_seq', 7, true);


--
-- Data for Name: bufr_code_020003; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020003 (id, code, description) FROM stdin;
1	0	Развитие облачности не наблюдалось или неразличимо
2	1	Облака в целом рассеиваются или становятся менее развитыми
3	2	Состояние неба в общем не изменилось
4	3	Облака в целом формируются или развиваются
5	4	Видимость ухудшена дымом, например: от степных или лесных пожаров, промышленных предприятий или вулканическим пеплом
6	5	Мгла
7	6	Пыль, взвешенная в воздухе на обширном пространстве, но не поднятая ветром на или вблизи станции в срок наблюдения
8	7	Пыль или песок, поднятые ветром на или вблизи станции в срок наблюдения, но нет хорошо развитого пыльного или песчаного вихря (вихрей), и никакой пыльной бури или песчаной бури
9	8	Хорошо развитый пыльный или песчаный вихрь (вихри) на или вблизи станции в течение последнего часа или в срок наблюдения, но пыльной или песчаной бури нет
10	9	Пыльная или песчаная буря в поле зрения в срок наблюдения или на станции в течение последнего часа
11	10	Дымка
12	11	Клочья
13	12	Более или менее сплошной слой
14	13	Видна молния, грома не слышно
15	14	Осадки в поле зрения, не достигающие поверхности земли или моря
16	15	Осадки в поле зрения, достигающие поверхности земли или моря на расстоянии более 5 км от станции
17	16	Осадки в поле зрения, достигающие поверхности земли или моря поблизости, но не на самой станции
18	17	Гроза, но без осадков в срок наблюдения
19	18	Шквалы
20	19	Воронкообразное(ые) облако(а)**
21	20	Морось (незамерзающая) или снежные зерна
22	21	Дождь (незамерзающий)
23	22	Снег
24	23	Дождь со снегом или ледяной дождь
25	24	Замерзающая морось или замерзающий дождь
26	25	Ливневой дождь
27	26	Ливневой снег или ливневой дождь и снег
28	27	Ливневой град* или ливневой дождь и град*
29	28	Туман или ледяной туман
30	29	Гроза (с осадками или без них)
31	30	Слабая или умеренная пыльная или песчаная буря
32	31	Слабая или умеренная пыльная или песчаная буря
33	32	Слабая или умеренная пыльная или песчаная буря
34	33	Суровая пыльная или песчаная буря
35	34	Суровая пыльная или песчаная буря
36	35	Суровая пыльная или песчаная буря
37	36	Слабый или умеренный поземок
38	37	Сильный поземок
39	38	Слабая или умеренная снежная низовая метель
40	39	Сильная снежная низовая метель
41	40	Туман или ледяной туман на расстоянии в срок наблюдения, но не на станции во время последнего часа; туман или ледяной туман, распространяющийся до уровня выше того, на котором находитсянаблюдатель
42	41	Туман или ледяной туман местами
43	42	Туман или ледяной туман, небо видно
44	43	Туман или ледяной туман, неба не видно
45	44	Туман или ледяной туман, небо видно
46	45	Туман или ледяной туман, неба не видно
47	46	Туман или ледяной туман, небо видно
48	47	Туман или ледяной туман, неба не видно
49	48	Туман с отложением изморози, небо видно
50	49	Туман с отложением изморози, неба не видно
51	50	Осадки на станции в срок наблюдения
52	51	Осадки на станции в срок наблюдения
53	52	Осадки на станции в срок наблюдения
54	53	Осадки на станции в срок наблюдения
55	54	Осадки на станции в срок наблюдения
56	55	Осадки на станции в срок наблюдения
57	56	Осадки на станции в срок наблюдения
58	57	Осадки на станции в срок наблюдения
59	58	Осадки на станции в срок наблюдения
60	59	Осадки на станции в срок наблюдения
61	60	Осадки на станции в срок наблюдения
378	297	Не используются
62	61	Осадки на станции в срок наблюдения
63	62	Осадки на станции в срок наблюдения
64	63	Осадки на станции в срок наблюдения
65	64	Осадки на станции в срок наблюдения
66	65	Осадки на станции в срок наблюдения
67	66	Осадки на станции в срок наблюдения
68	67	Осадки на станции в срок наблюдения
69	68	Осадки на станции в срок наблюдения
70	69	Осадки на станции в срок наблюдения
71	70	Осадки на станции в срок наблюдения
72	71	Осадки на станции в срок наблюдения
73	72	Осадки на станции в срок наблюдения
74	73	Осадки на станции в срок наблюдения
75	74	Осадки на станции в срок наблюдения
76	75	Осадки на станции в срок наблюдения
77	76	Осадки на станции в срок наблюдения
78	77	Осадки на станции в срок наблюдения
79	78	Осадки на станции в срок наблюдения
80	79	Осадки на станции в срок наблюдения
81	80	Осадки на станции в срок наблюдения
82	81	Осадки на станции в срок наблюдения
83	82	Осадки на станции в срок наблюдения
84	83	Осадки на станции в срок наблюдения
85	84	Осадки на станции в срок наблюдения
86	85	Осадки на станции в срок наблюдения
87	86	Осадки на станции в срок наблюдения
88	87	Осадки на станции в срок наблюдения
89	88	Осадки на станции в срок наблюдения
90	89	Осадки на станции в срок наблюдения
91	90	Осадки на станции в срок наблюдения
92	91	Осадки на станции в срок наблюдения
93	92	Осадки на станции в срок наблюдения
94	93	Осадки на станции в срок наблюдения
95	94	Осадки на станции в срок наблюдения
96	95	Осадки на станции в срок наблюдения
97	96	Осадки на станции в срок наблюдения
98	97	Осадки на станции в срок наблюдения
99	98	Осадки на станции в срок наблюдения
100	99	Осадки на станции в срок наблюдения
101	50	Морось
102	51	Морось
103	52	Морось
104	53	Морось
105	54	Морось
106	55	Морось
107	56	Морось
108	57	Морось
109	58	Морось
110	59	Морось
111	50	Морось незамерзающая с перерывами
112	51	Морось незамерзающая непрерывная
113	52	Морось незамерзающая с перерывами
114	53	Морось незамерзающая непрерывная
115	54	Морось незамерзающая с перерывами
116	55	Морось незамерзающая непрерывная
117	56	Морось замерзающая слабая
118	57	Морось замерзающая умеренная или сильная
119	58	Морось и дождь слабые
120	59	Морось и дождь умеренные или сильные
121	60	Дождь
122	61	Дождь
123	62	Дождь
124	63	Дождь
125	64	Дождь
126	65	Дождь
127	66	Дождь
128	67	Дождь
129	68	Дождь
130	69	Дождь
131	60	Дождь незамерзающий с перерывами
132	61	Дождь незамерзающий непрерывный
133	62	Дождь незамерзающий с перерывами
134	63	Дождь незамерзающий непрерывный
135	64	Дождь незамерзающий с перерывами
136	65	Дождь незамерзающий непрерывный
137	66	Дождь замерзающий слабый
138	67	Дождь замерзающий умеренный или сильный
139	68	Дождь или морось со снегом слабые
140	69	Дождь или морось со снегом умеренные или сильные
141	70	Твердые осадки, неливневые
142	71	Твердые осадки, неливневые
143	72	Твердые осадки, неливневые
144	73	Твердые осадки, неливневые
145	74	Твердые осадки, неливневые
146	75	Твердые осадки, неливневые
147	76	Твердые осадки, неливневые
148	77	Твердые осадки, неливневые
149	78	Твердые осадки, неливневые
150	79	Твердые осадки, неливневые
151	70	Снегопад с перерывами
152	71	Снегопад непрерывный
153	72	Снегопад с перерывами
154	73	Снегопад непрерывный
155	74	Снегопад с перерывами
156	75	Снегопад непрерывный
157	76	Алмазная пыль (с туманом или без него)
158	77	Снежные зерна (с туманом или без него)
159	78	Отдельные кристаллы снега в виде звездочек (с туманом или без него)
160	79	Ледяной дождь
161	80	Ливневой(ые) дождь(и) слабый(ые)
162	81	Ливневой(ые) дождь(и) умеренный(ые) или сильный(ые)
163	82	Ливневой(ые) дождь(и) очень сильный(ые)
164	83	Ливневой(ые) дождь(и) со снегом слабый(ые)
165	84	Ливневой(ые) дождь(и) со снегом умеренный(ые) или сильный(ые)
166	85	Ливневой снег слабый
167	86	Ливневой снег умеренный или сильный
168	87	Ливневая снежная крупа или небольшой град с дождем или без него или дождь со снегом
169	88	Ливневая снежная крупа или небольшой град с дождем или без него или дождь со снегом
170	89	Ливневой град с дождем или без него, или дождь со снегом без грома
171	90	Ливневой град с дождем или без него, или дождь со снегом без грома
172	91	Слабый дождь в срок наблюдения
173	92	Умеренный или сильный дождь в срок наблюдения
174	93	Слабый снег или дождь со снегом или град* в срок наблюдения
175	94	Умеренный или сильный снег или дождь со снегом, или
176	95	Гроза слабая или умеренная без града*, но
177	96	Гроза слабая или умеренная с градом* в срок наблюдения
178	97	Гроза сильная без града*, но с дождем и/или снегом в
179	98	Гроза вместе с пыльной или песчаной бурей в срок наблюдения
180	99	Гроза сильная с градом* в срок наблюдения
181	100	Значительных изменений в погоде не наблюдалось
182	101	Облака в целом рассеиваются или становятся менее развитыми за прошедший час
183	102	Состояние неба в целом не изменилось за прошедший час
184	103	Облака в целом формируются или становятся более развитыми за прошедший час
185	104	Дымка или дым, или пыль, взвешенная в воздухе; видимость равна или более 1 км
186	105	Дымка или дым, или пыль, взвешенная в воздухе; видимость менее 1 км
187	106	Зарезервировано
188	107	Зарезервировано
189	108	Зарезервировано
190	109	Зарезервировано
191	110	Дымка
192	111	Алмазная пыль
193	112	Отдаленная молния
194	113	Зарезервировано
195	114	Зарезервировано
196	115	Зарезервировано
197	116	Зарезервировано
198	117	Зарезервировано
199	118	Шквалы
200	119	Зарезервирована
201	120	Туман
202	121	ОСАДКИ
203	122	Морось (незамерзающая) или снежные зерна
204	123	Дождь (незамерзающий)
205	124	Снег
206	125	Замерзающая морось или замерзающий дождь
207	126	Гроза (с осадками или без них)
208	127	СНЕЖНАЯ НИЗОВАЯ МЕТЕЛЬ ИЛИ ПОЗЕМОК, ИЛИ ПЕСЧАНЫЙ ПОЗЕМОК
209	128	Снежная низовая метель или поземок, или песчаный поземок, видимость равна или более 1 км
210	129	Снежная низовая метель или поземок, или песчаный поземок, видимость менее 1 км
211	130	ТУМАН
212	131	Туман или ледяной туман местами
213	132	Туман или ледяной туман ослабел за последний час
214	133	Туман или ледяной туман без заметного изменения интенсивности в течение последнего часа
374	293	Ливень(и) или гроза над горами
215	134	Туман или ледяной туман начался или усилился в течение последнего часа
216	135	Туман с отложением изморози
217	136	Зарезервировано
218	137	Зарезервировано
219	138	Зарезервировано
220	139	Зарезервировано
221	140	ОСАДКИ
222	141	Осадки слабые или умеренные
223	142	Осадки сильные
224	143	Жидкие осадки слабые или умеренные
225	144	Жидкие осадки сильные
226	145	Твердые осадки слабые или умеренные
227	146	Твердые осадки сильные
228	147	Замерзающие осадки слабые или умеренные
229	148	Замерзающие осадки сильные
230	149	Зарезервирована
231	150	МОРОСЬ
232	151	Морось незамерзающая слабая
233	152	Морось незамерзающая умеренная
234	153	Морось незамерзающая сильная
235	154	Морось замерзающая слабая
236	155	Морось замерзающая умеренная
237	156	Морось замерзающая сильная
238	157	Морось и дождь слабые
239	158	Морось и дождь умеренные или сильные
240	159	Зарезервирована
241	160	ДОЖДЬ
242	161	Дождь незамерзающий слабый
243	162	Дождь незамерзающий умеренный
244	163	Дождь незамерзающий сильный
245	164	Дождь замерзающий слабый
246	165	Дождь замерзающий умеренный
247	166	Дождь замерзающий сильный
248	167	Дождь (или морось) и снег слабые
249	168	Дождь (или морось) и снег умеренные или сильные
250	169	Зарезервирована
251	170	СНЕГ
252	171	Снег слабый
253	172	Снег умеренный
254	173	Снег сильный
255	174	Ледяной дождь слабый
256	175	Ледяной дождь умеренный
257	176	Ледяной дождь сильный
258	177	Снежные зерна
259	178	Ледяные кристаллы
260	179	Зарезервирована
261	180	ЛИВЕНЬ или ОСАДКИ С ПЕРЕРЫВАМИ
262	181	Ливневой дождь или дождь с перерывами слабый
263	182	Ливневой дождь или дождь с перерывами умеренный
264	183	Ливневой дождь или дождь с перерывами сильный
265	184	Ливневой дождь или дождь с перерывами очень сильный
266	185	Ливневой снег или снег с перерывами слабый
267	186	Ливневой снег или снег с перерывами умеренный
268	187	Ливневой снег или снег с перерывами сильный
269	188	Зарезервирована
270	189	Град
271	190	ГРОЗА
272	191	Гроза слабая или умеренная без осадков
273	192	Гроза слабая или умеренная с ливневыми дождями и/или ливневым снегом
274	193	Гроза слабая или умеренная с градом
275	194	Гроза сильная без осадков
276	195	Гроза сильная с ливневым дождем и/или ливневым снегом
277	196	Гроза сильная с градом
278	197	Зарезервировано
279	198	Зарезервировано
280	199	Торнадо
281	200	Не используются
282	201	Не используются
283	202	Не используются
284	203	Не используются
285	204	Вулканический пепел, взвешенный в верхних слоях воздуха
286	205	Не используется
287	206	Сильная пыльная дымка, видимость менее 1 км
288	207	Водяная пыль на станции
289	208	Пыльный (песчаный) поземок
290	209	Стена пыли или песка на расстоянии (подобная хабубу)
291	210	Снежная дымка
292	211	Белая мгла
293	212	Не используется
294	213	Молния от облака до поверхности земли
295	214	Не используются
296	215	Не используются
297	216	Не используются
298	217	Сухая гроза
299	218	Не используется
375	294	Не используются
376	295	Не используются
300	219	Облако торнадо (разрушающее) на станции или в зоне видимости станции в течение часа, предшествовавшего сроку наблюдения или в срок наблюдения
301	220	Отложение вулканического пепла
302	221	Отложение пыли или песка
303	222	Отложение росы
304	223	Отложение мокрого снега
305	224	Отложение зернистой изморози
306	225	Отложение кристаллической изморози
307	226	Отложение инея
308	227	Отложение гололедного типа
309	228	Отложение в виде лядяной корки (ледяной пленки)
310	229	Не используется
311	230	Пыльная или песчаная буря при температуре ниже 0 °C
312	231	Не используются
313	232	Не используются
314	233	Не используются
315	234	Не используются
316	235	Не используются
317	236	Не используются
318	237	Не используются
319	238	Не используются
320	239	Снежная низовая метель, невозможно определить, выпадает ли снег
321	240	Не используется
322	241	Туман на море
323	242	Туман в долинах
324	243	Арктический или антарктический туман парения
325	244	Туман парения (море, озеро или река)
326	245	Туман парения (суша)
327	246	Туман над ледяным или снежным покровом
328	247	Плотный туман, видимость 60–90 м
329	248	Плотный туман, видимость 30–60 м
330	249	Плотный туман, видимость менее 30 м
331	250	Плотный туман, видимость
332	251	Плотный туман, видимость 0,10–0,19 мм.ч-1
333	252	Плотный туман, видимость 0,20–0,39 мм.ч-1
334	253	Морось; интенсивность выпадения 0,40–0,79 мм.ч--1
335	254	Морось; интенсивность выпадения 0,80–1,59 мм.ч-1
336	255	Морось; интенсивность выпадения 1,60–3,19 мм.ч-1
337	256	Морось; интенсивность выпадения 3,20–6,39 мм.ч-1
338	257	Морось; интенсивность выпадения
339	258	Не используется
340	259	Морось и снег
341	260	Морось и снег менее 1,0 мм.ч-1
342	261	Морось и снег 1,0– 1,9 мм.ч-1
343	262	Морось и снег 2,0– 3,9 мм.ч-1
344	263	Дождь; интенсивность выпадения 4,0– 7,9 мм.ч-1
345	264	Дождь; интенсивность выпадения
346	265	Дождь; интенсивность выпадения 16,0–31,9 мм.ч-1
347	266	Дождь; интенсивность выпадения 32,0–63,9 мм.ч-1
348	267	Дождь; интенсивность выпадения
349	268	Не используются
350	269	Не используются
351	270	Снег; интенсивность выпадения менее 1,0 см.ч-1
352	271	Снег; интенсивность выпадения 1,0– 1,9 см.ч-1
353	272	Снег; интенсивность выпадения 2,0– 3,9 см.ч-1
354	273	Снег; интенсивность выпадения 4,0– 7,9 см.ч-1
355	274	Снег; интенсивность выпадения 8,0–15,9 см.ч-1
356	275	Снег; интенсивность выпадения 16,0–31,9 см.ч-1
357	276	Снег; интенсивность выпадения 32,0–63,9 см.ч-1
358	277	Снег; интенсивность выпадения
359	278	Выпадение осадков в виде снега или ледяных кристаллов при ясном небе
360	279	Мокрый снег, замерзающий при касании
361	280	Осадки в виде дождя (кодовые цифры = 87–99)
362	281	Осадки в виде дождя, замерзающие (кодовые цифры = 80–82)
363	282	Смешанные осадки в виде дождя и снега
364	283	Осадки в виде снега
365	284	Осадки в виде снежной крупы или небольшого града
366	285	Осадки в виде снежной крупы или небольшого града с дождем
367	286	Осадки в виде снежной крупы или небольшого града с дождем и снегом
368	287	Осадки в виде снежной крупы или небольшого града со снегом
369	288	Осадки в виде града
370	289	Осадки в виде града с дождем
371	290	Осадки в виде града с дождем и снегом
372	291	Осадки в виде града со снегом
373	292	Ливень(и) или гроза над морем
377	296	Не используются
379	298	Не используются
380	299	Не используются
381	300	Зарезервировано
382	301	Зарезервировано
383	302	Зарезервировано
384	303	Зарезервировано
385	304	Зарезервировано
386	305	Зарезервировано
387	306	Зарезервировано
388	307	Зарезервировано
389	308	Зарезервировано
390	309	Зарезервировано
391	310	Зарезервировано
392	311	Зарезервировано
393	312	Зарезервировано
394	313	Зарезервировано
395	314	Зарезервировано
396	315	Зарезервировано
397	316	Зарезервировано
398	317	Зарезервировано
399	318	Зарезервировано
400	319	Зарезервировано
401	320	Зарезервировано
402	321	Зарезервировано
403	322	Зарезервировано
404	323	Зарезервировано
405	324	Зарезервировано
406	325	Зарезервировано
407	326	Зарезервировано
408	327	Зарезервировано
409	328	Зарезервировано
410	329	Зарезервировано
411	330	Зарезервировано
412	331	Зарезервировано
413	332	Зарезервировано
414	333	Зарезервировано
415	334	Зарезервировано
416	335	Зарезервировано
417	336	Зарезервировано
418	337	Зарезервировано
419	338	Зарезервировано
420	339	Зарезервировано
421	340	Зарезервировано
422	341	Зарезервировано
423	342	Зарезервировано
424	343	Зарезервировано
425	344	Зарезервировано
426	345	Зарезервировано
427	346	Зарезервировано
428	347	Зарезервировано
429	348	Зарезервировано
430	349	Зарезервировано
431	350	Зарезервировано
432	351	Зарезервировано
433	352	Зарезервировано
434	353	Зарезервировано
435	354	Зарезервировано
436	355	Зарезервировано
437	356	Зарезервировано
438	357	Зарезервировано
439	358	Зарезервировано
440	359	Зарезервировано
441	360	Зарезервировано
442	361	Зарезервировано
443	362	Зарезервировано
444	363	Зарезервировано
445	364	Зарезервировано
446	365	Зарезервировано
447	366	Зарезервировано
448	367	Зарезервировано
449	368	Зарезервировано
450	369	Зарезервировано
451	370	Зарезервировано
452	371	Зарезервировано
453	372	Зарезервировано
454	373	Зарезервировано
455	374	Зарезервировано
456	375	Зарезервировано
457	376	Зарезервировано
458	377	Зарезервировано
459	378	Зарезервировано
460	379	Зарезервировано
461	380	Зарезервировано
462	381	Зарезервировано
463	382	Зарезервировано
464	383	Зарезервировано
465	384	Зарезервировано
466	385	Зарезервировано
467	386	Зарезервировано
468	387	Зарезервировано
469	388	Зарезервировано
470	389	Зарезервировано
471	390	Зарезервировано
472	391	Зарезервировано
473	392	Зарезервировано
474	393	Зарезервировано
475	394	Зарезервировано
476	395	Зарезервировано
477	396	Зарезервировано
478	397	Зарезервировано
479	398	Зарезервировано
480	399	Зарезервировано
481	400	Зарезервировано
482	401	Зарезервировано
483	402	Зарезервировано
484	403	Зарезервировано
485	404	Зарезервировано
486	405	Зарезервировано
487	406	Зарезервировано
488	407	Зарезервировано
489	408	Зарезервировано
490	409	Зарезервировано
491	410	Зарезервировано
492	411	Зарезервировано
493	412	Зарезервировано
494	413	Зарезервировано
495	414	Зарезервировано
496	415	Зарезервировано
497	416	Зарезервировано
498	417	Зарезервировано
499	418	Зарезервировано
500	419	Зарезервировано
501	420	Зарезервировано
502	421	Зарезервировано
503	422	Зарезервировано
504	423	Зарезервировано
505	424	Зарезервировано
506	425	Зарезервировано
507	426	Зарезервировано
508	427	Зарезервировано
509	428	Зарезервировано
510	429	Зарезервировано
511	430	Зарезервировано
512	431	Зарезервировано
513	432	Зарезервировано
514	433	Зарезервировано
515	434	Зарезервировано
516	435	Зарезервировано
517	436	Зарезервировано
518	437	Зарезервировано
519	438	Зарезервировано
520	439	Зарезервировано
521	440	Зарезервировано
522	441	Зарезервировано
523	442	Зарезервировано
524	443	Зарезервировано
525	444	Зарезервировано
526	445	Зарезервировано
527	446	Зарезервировано
528	447	Зарезервировано
529	448	Зарезервировано
530	449	Зарезервировано
531	450	Зарезервировано
532	451	Зарезервировано
533	452	Зарезервировано
534	453	Зарезервировано
535	454	Зарезервировано
536	455	Зарезервировано
537	456	Зарезервировано
538	457	Зарезервировано
539	458	Зарезервировано
540	459	Зарезервировано
541	460	Зарезервировано
542	461	Зарезервировано
543	462	Зарезервировано
544	463	Зарезервировано
545	464	Зарезервировано
546	465	Зарезервировано
547	466	Зарезервировано
548	467	Зарезервировано
549	468	Зарезервировано
550	469	Зарезервировано
551	470	Зарезервировано
552	471	Зарезервировано
553	472	Зарезервировано
554	473	Зарезервировано
555	474	Зарезервировано
556	475	Зарезервировано
557	476	Зарезервировано
558	477	Зарезервировано
559	478	Зарезервировано
560	479	Зарезервировано
561	480	Зарезервировано
562	481	Зарезервировано
563	482	Зарезервировано
564	483	Зарезервировано
565	484	Зарезервировано
566	485	Зарезервировано
567	486	Зарезервировано
568	487	Зарезервировано
569	488	Зарезервировано
570	489	Зарезервировано
571	490	Зарезервировано
572	491	Зарезервировано
573	492	Зарезервировано
574	493	Зарезервировано
575	494	Зарезервировано
576	495	Зарезервировано
577	496	Зарезервировано
578	497	Зарезервировано
579	498	Зарезервировано
580	499	Зарезервировано
581	500	Зарезервировано
582	501	Зарезервировано
583	502	Зарезервировано
584	503	Зарезервировано
585	504	Зарезервировано
586	505	Зарезервировано
587	506	Зарезервировано
588	507	Зарезервировано
589	508	Значительных явлений для передачи не имеется, текущая и прошедшая погода опущены
590	509	Наблюдения не проводились, данных не имеется, текущая и прошедшая погода опущены
591	510	Текущая и прошедшая погода отсутствуют, но ожидаются
592	511	Отсутствующее значение
\.


--
-- Name: bufr_code_020003_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020003_seq', 592, true);


--
-- Data for Name: bufr_code_020004; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020004 (id, code, description) FROM stdin;
1	0	Облачность, покрывающая менее половины или половину неба на протяжении соответствующего периода
2	1	Облачность, покрывающая более половины неба на протяжении части соответствующего периода и покрывающая менее половины или половину в течение части периода
3	2	Облачность, покрывающая более половины неба на протяжении соответствующего периода
4	3	Песчаная буря, пыльная буря или снежная низовая метель
5	4	Туман или ледяной туман или сильная мгла
6	5	Морось
7	6	Дождь
8	7	Снег или снег с дождем
9	8	Ливень(ливни)
10	9	Гроза(ы) с осадками или без них
11	10	Особых явлений погоды не наблюдалось
12	11	ПОНИЖЕННАЯ ВИДИМОСТЬ
13	12	Явление, связанное с поднятием в воздух ветром твердых или жидких частиц (метель, песчаная буря; брызги, переносимые ветром), видимость понижена
14	13	ТУМАН (см. примечание)
15	14	ОСАДКИ (см. примечание)
16	15	Морось
17	16	Дождь
18	17	Снег или снежная крупа
19	18	Ливневые или перемежающиеся осадки
20	19	Гроза
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Отсутствующее значение
\.


--
-- Name: bufr_code_020004_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020004_seq', 32, true);


--
-- Data for Name: bufr_code_020005; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020005 (id, code, description) FROM stdin;
1	0	Облачность, покрывающая менее половины или половину неба на протяжении соответствующего периода
2	1	Облачность, покрывающая более половины неба на протяжении части соответствующего периода и покрывающая менее половины или половину в течение части периода
3	2	Облачность, покрывающая более половины неба на протяжении соответствующего периода
4	3	Песчаная буря, пыльная буря или снежная низовая метель
5	4	Туман или ледяной туман или сильная мгла
6	5	Морось
7	6	Дождь
8	7	Снег или снег с дождем
9	8	Ливень(ливни)
10	9	Гроза(ы) с осадками или без них
11	10	Особых явлений погоды не наблюдалось
12	11	ПОНИЖЕННАЯ ВИДИМОСТЬ
13	12	Явление, связанное с поднятием в воздух ветром твердых или жидких частиц (метель, песчаная буря; брызги, переносимые ветром), видимость понижена
14	13	ТУМАН (см. примечание)
15	14	ОСАДКИ (см. примечание)
16	15	Морось
17	16	Дождь
18	17	Снег или снежная крупа
19	18	Ливневые или перемежающиеся осадки
20	19	Гроза
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Отсутствующее значение
\.


--
-- Name: bufr_code_020005_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020005_seq', 32, true);


--
-- Data for Name: bufr_code_020006; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020006 (id, code, description) FROM stdin;
1	0	Правила полетов по приборам на малой высоте — Потолок < 500 футов и/или видимость < 1 мили
2	1	Правила полетов по приборам — Потолок < 1 000 футов и/или видимость < 3 миль
3	2	Правила визуальных полетов в пределах допуска — 1 000 футов < = Потолок < 3 000 футов и/или 3 миль < = видимость < 5 миль
4	3	Правила визуальных полетов — Потолок > = 3 000 футов и/или видимость > = 5 миль
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_020006_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020006_seq', 8, true);


--
-- Data for Name: bufr_code_020008; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020008 (id, code, description) FROM stdin;
1	0	Ясное небо
2	1	Малооблачно
3	2	Рассеянные
4	3	Разорванные
5	4	Сплошная облачность
6	5	Зарезервирована
7	6	Рассеянные/разорванные
8	7	Разорванные облака/
9	8	Отдельные
10	9	Отдельные, смешанные
11	10	Случайные
12	11	Случайные, смешанные
13	12	Частые
14	13	Плотные
15	14	Слои
16	15	Закрытое (OBSC)
17	16	Смешанные (EMBD)
18	17	Часто смешанные
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Отсутствующее значение
\.


--
-- Name: bufr_code_020008_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020008_seq', 32, true);


--
-- Data for Name: bufr_code_020009; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020009 (id, code, description) FROM stdin;
1	0	Зарезервирована
2	1	Отсутствие особой облачности (NSC)
3	2	CAVOK
4	3	Ясное небо (SKC)
5	4	Отсутствие особых явлений погоды (NSW)
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_020009_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020009_seq', 16, true);


--
-- Data for Name: bufr_code_020011; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020011 (id, code, description) FROM stdin;
1	0	0. 0
2	1	1 окта или менее, но не 0. 1/10 или менее, но не 0
3	2	2 окты. 2/10 – 3/10
4	3	3 окты. 4/10
5	4	4 окты. 5/10
6	5	5 окт. 6/10
7	6	6 окт. 7/10 – 8/10
8	7	7 или более окт, но не 8. 9/10 или более, но не 10/10
9	8	8 окт. 10/10
10	9	Небо закрыто туманом и/или другими метеорологическими явлениями
11	10	Небо частично закрыто туманом и/или другими метеорологическими явлениями
12	11	Рассеянные
13	12	Разорванные
14	13	Малооблачно
15	14	Зарезервирована
16	15	Облачный покров неразличим по причине, отличной от тумана или другого метеорологического явления; или наблюдения не проведено
\.


--
-- Name: bufr_code_020011_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020011_seq', 16, true);


--
-- Data for Name: bufr_code_020012; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020012 (id, code, description) FROM stdin;
1	0	Перистые (Ci)
2	1	Перисто-кучевые (Cc)
3	2	Перисто-слоистые (Cs)
4	3	Высококучевые (Ac)
5	4	Высокослоистые (As)
6	5	Слоисто-дождевые (Ns)
7	6	Слоисто-кучевые (Sc)
8	7	Слоистые (St)
9	8	Кучевые (Cu)
10	9	Кучево-дождевые (Cb)
11	10	Облаков CH нет
12	11	Перистые, нитевидные, иногда когтевидные, не распространяющиеся по небу
13	12	Перистые, плотные, в виде клочьев или скрученных пучков, количество которых обычно не увеличивается, иногда могут представляться остатками верхней части кучево-дождевых; или перистые, башенкообразные, или перистые хлопьевидные
14	13	Перистые плотные, образовавшиеся от кучево-дождевых
15	14	Перистые, когтевидные или волокнистые, или и те и другие, постепенно заполняющие небосвод; при этом, в целом, эти облака уплотняются
16	15	Перистые (часто в виде полос) и перисто-слоистые, или одни перисто-слоистые, постепенно заполняющие небосвод; при этом, в целом, эти облака уплотняются, но сплошная пелена поднимается над горизонтом менее чем на 45°
17	16	Перистые (часто в виде полос) и перисто-слоистые, или одни перисто-слоистые, постепенно заполняющие небосвод; при этом, в целом, эти облака уплотняются, сплошная пелена поднимается над горизонтом менее чем на 45°, но не покрывает все небо
18	17	Перисто-слоистые, покрывающие все небо
19	18	Перисто-слоистые, не заполняющие постепенно небосвод и не покрывающие его полностью
20	19	Перисто-кучевые одни или перисто-кучевые, преобладающие среди облаков CH
21	20	Облаков CM нет
22	21	Высокослоистые просвечивающие
23	22	Высокослоистые непросвечивающие или слоисто-дождевые
24	23	Высококучевые просвечивающие, расположенные на одном уровне
25	24	Клочья (часто чечевицеобразные) высококучевых просвечивающих непрерывно изменяющихся; расположены на одном или более уровнях
26	25	Высококучевые просвечивающие, расположенные полосами, или один или несколько слоев высоко кучевых просвечивающих или непросвечивающих, постепенно заполняющие небосвод; этивысоко-кучевые облака в целом уплотняются
27	26	Высококучевые, образовавшиеся из кучевых (или кучево-дождевых)
28	27	Высококучевые просвечивающие или плотные в двух или более слоях, или высококучевые, плотные в одном слое, не заполняющие постепенно небосвод, либо высококучевые с высокослоистыми или слоистодождевыми
29	28	Высококучевые, башенкообразные или хлопьевидные
30	29	Высококучевые при хаотическом виде неба, обычно расположенные на нескольких уровнях
31	30	Облаков CL нет
32	31	Кучевые плоские или кучевые разорванные, или те и другие вместе, не относящиеся к облакам плохой погоды*
33	32	Кучевые средние или мощные, или вместе с кучевыми разорванными, или с кучевыми плоскими, или со слоисто-кучевыми, либо без них; основания всех этих облаков расположены на одном уровне
34	33	Кучево-дождевые лысые с кучевыми, слоисто-кучевыми или слоистыми, либо без них
35	34	Слоисто-кучевые, образовавшиеся из кучевых
36	35	Слоисто-кучевые, образовавшиеся не из кучевых
37	36	Слоистые туманообразные или слоистые разорванные, либо те и другие, но не относящиеся к облакам плохой погоды*
38	37	Слоистые разорванные или кучевые разорванные облака плохой погоды*, либо те и другие в месте (разорванно-дождевые); обычно расположены под высокослоистыми или слоисто-дождевымиоблаками
39	38	Кучевые и слоисто-кучевые (но не слоисто-кучевые, образовавшиеся из кучевых), с основаниями, расположенными на разных уровнях
40	39	Кучево-дождевые волокнистые (часто с наковальней), либо с кучево-дождевыми лысыми, кучевыми, слоисто-кучевыми, слоистыми, разорванно-дождевыми, либо без них
41	40	CH
42	41	CM
43	42	CL
44	43	Зарезервировано
45	44	Зарезервировано
46	45	Зарезервировано
47	46	Зарезервировано
48	47	Зарезервировано
49	48	Зарезервировано
50	49	Зарезервировано
51	50	Зарезервировано
52	51	Зарезервировано
53	52	Зарезервировано
54	53	Зарезервировано
55	54	Зарезервировано
56	55	Зарезервировано
57	56	Зарезервировано
58	57	Зарезервировано
59	58	Зарезервировано
60	59	Облака не видны из-за темноты, тумана, пыльной или песчаной бури или других аналогичных явлений
61	60	Облака CH не видны из-за темноты, тумана, пыльной или песчаной бури или других аналогичных явлений
62	61	Облака CM не видны из-за темноты, тумана, пыльной или песчаной бури или других аналогичных явлений, или из-за сплошного слоя более низких облаков
63	62	Облака CL не видны из-за темноты, тумана, пыльной или песчаной бури или других аналогичных явлений
64	63	Отсутствующее значение
\.


--
-- Name: bufr_code_020012_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020012_seq', 64, true);


--
-- Data for Name: bufr_code_020017; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020017 (id, code, description) FROM stdin;
1	0	Отдельные облака или фрагменты облаков
2	1	Сплошная облачность
3	2	Разорванные облака с небольшими просветами вершины плоские
4	3	Разорванные облака с большими просветами
5	4	Сплошная облачность
6	5	Разорванные облака с небольшими просветами вершины волнистые
7	6	Разорванные облака с большими просветами
8	7	Сплошные или почти сплошные волны с вытянутыми вверх вершинами над поверхностью слоя
9	8	Группы волн с клубящимися облаками над верхней границей слоя
10	9	Два или более слоев на разных уровнях
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_020017_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020017_seq', 16, true);


--
-- Data for Name: bufr_code_020018; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020018 (id, code, description) FROM stdin;
1	0	Увеличивающаяся (U)
2	1	Уменьшающаяся (D)
3	2	Явного изменения нет (N)
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_020018_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020018_seq', 4, true);


--
-- Data for Name: bufr_code_020021; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020021 (id, bit_number, description) FROM stdin;
1	1	Тип осадков неизвестен
2	2	Осадки в жидком виде, незамерзающие
3	3	Осадки в жидком виде, замерзающие
4	4	Морось
5	5	Дождь
6	6	Осадки в твердом виде
7	7	Снег
8	8	Снежные зерна
9	9	Снежная крупа
10	10	Ледяная крупа
11	11	Ледяные кристаллы
12	12	Алмазная пыль
13	13	Мелкий град
14	14	Град
15	15	Гололед
16	16	Изморозь
17	17	Слабая изморось
18	18	Твердый налет
19	19	Прозрачный лед
20	20	Мокрый снег
21	21	Иней
22	22	Роса
23	23	Замерзшая роса
24	24	Зарезервировано
25	25	Зарезервировано
26	26	Зарезервировано
27	27	Зарезервировано
28	28	Зарезервировано
29	29	Зарезервировано
30	0	Отсутствующее значение
\.


--
-- Name: bufr_code_020021_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020021_seq', 30, true);


--
-- Data for Name: bufr_code_020022; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020022 (id, code, description) FROM stdin;
1	0	Осадки отсутствуют
2	1	Непрерывные
3	2	Периодически прекращающиеся
4	3	Обильные
5	4	Не достигающие земли
6	5	Осаждение
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_020022_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020022_seq', 16, true);


--
-- Data for Name: bufr_code_020023; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020023 (id, bit_number, description) FROM stdin;
1	1	Пыльный/песчаный вихрь
2	2	Шквалы
3	3	Песчаная буря
4	4	Пыльная буря
5	5	Молния — от облака к поверхности
6	6	Молния — от облака к облаку
7	7	Молния — отдаленная
8	8	Гроза
9	9	Воронкообразное облако, не достигающее поверхности
10	10	Воронкообразное облако, достигающее поверхности
11	11	Аэрозоль
12	12	Водяной смерч
13	13	Сдвиг ветра
14	14	Пыльные вихри
15	15	Зарезервировано
16	16	Зарезервировано
17	17	Зарезервировано
18	0	Отсутствующее значение
\.


--
-- Name: bufr_code_020023_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020023_seq', 18, true);


--
-- Data for Name: bufr_code_020024; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020024 (id, code, description) FROM stdin;
1	0	Отсутствие явления
2	1	Слабая
3	2	Умеренная
4	3	Сильная
5	4	Чрезвычайно сильная
6	5	Суровое
7	6	Очень суровое
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_020024_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020024_seq', 8, true);


--
-- Data for Name: bufr_code_020025; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020025 (id, bit_number, description) FROM stdin;
1	1	Туман
2	2	Ледяной туман
3	3	Туман парения
4	4	Зарезервировано
5	5	Зарезервировано
6	6	Зарезервировано
7	7	Дымка
8	8	Мгла
9	9	Дым
10	10	Вулканический пепел
11	11	Пыль
12	12	Песок
13	13	Снег
14	14	Облака
15	15	Осадки
16	16	Невозможно определить, идет снег или нет
17	17	Зарезервировано
18	18	Зарезервировано
19	19	Зарезервировано
20	20	Зарезервировано
21	0	Отсутствующее значение
\.


--
-- Name: bufr_code_020025_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020025_seq', 21, true);


--
-- Data for Name: bufr_code_020026; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020026 (id, code, description) FROM stdin;
1	0	Нет изменений
2	1	Поверхностное
3	2	Участками
4	3	Частичное
5	4	Замерзание
6	5	Низко перемещающееся
7	6	Гонимое ветром
8	7	Возрастающее
9	8	Уменьшающееся
10	9	Взвесь в воздухе
11	10	«Стена»
12	11	Плотное
13	12	Белая мгла
14	13	Перемещающееся или гонимое ветром
15	14	Зарезервирована
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_020026_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020026_seq', 16, true);


--
-- Data for Name: bufr_code_020027; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020027 (id, bit_number, description) FROM stdin;
1	1	Во время наблюдения
2	2	В последний час
3	3	В период времени для прошедшей погоды W1W2
4	4	В определенный период времени
5	5	Зарезервирован
6	6	Ниже уровня станции
7	7	На станции (см. примечание 1)
8	8	Поблизости от станции (см. примечание 2)
9	0	Отсутствующее значение
\.


--
-- Name: bufr_code_020027_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020027_seq', 9, true);


--
-- Data for Name: bufr_code_020028; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020028 (id, code, description) FROM stdin;
1	0	Без изменений (NC)
2	1	Прогноз к ослаблению (WKN)
3	2	Прогноз к усилению (INTSF)
4	3	Зарезервировано
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_020028_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020028_seq', 8, true);


--
-- Data for Name: bufr_code_020029; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020029 (id, code, description) FROM stdin;
1	0	Без осадков
2	1	Дождь
3	2	Зарезервирована
4	3	Отсутствующие значение
\.


--
-- Name: bufr_code_020029_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020029_seq', 4, true);


--
-- Data for Name: bufr_code_020032; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020032 (id, code, description) FROM stdin;
1	0	Лед не нарастает
2	1	Лед нарастает медленно
3	2	Лед нарастает быстро
4	3	Лед тает или обламывается медленно
5	4	Лед быстро тает или обламывается
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_020032_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020032_seq', 8, true);


--
-- Data for Name: bufr_code_020033; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020033 (id, bit_number, description) FROM stdin;
1	1	Обледенение в результате брызг с поверхности океана
2	2	Обледенение из-за тумана
3	3	Обледенение из-за дождя
4	0	Отсутствующее значение
\.


--
-- Name: bufr_code_020033_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020033_seq', 4, true);


--
-- Data for Name: bufr_code_020034; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020034 (id, code, description) FROM stdin;
1	0	Лед в поле зрения не наблюдается
2	1	Судно находится в открытом канале шириной более 1 морской мили или в припае, граница которого находится вне поля зрения
3	2	Наблюдается морской лед, сплоченность менее 3/10 (3/8), чистая вода или редкий лед
4	3	Разреженный лед, от 4/10 до 6/10 (от 3/8 до менее 6/8)
5	4	Сплоченный лед, от 7/10 до 8/10 (от 6/8 до менее 7/8),
6	5	Очень слоченный лед, 9/10 или более,но не 10/10 (7/8, но не менее 8/8)
7	6	Полосы и пятна дрейфующего льда,чистая вода между ними
8	7	Полосы и пятна сплоченного или очень сплоченного льда, междуними наблюдаются районы меньшей сплоченности
9	8	Припай и чистая вода, разреженный
10	9	Припай, сплоченный или оченьсплоченный лед в сторону моряот границы льда
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Определение льда затруднено вследствие темноты, плохой видимости или вследствие того, чтосудно находится на расстоянии более 0,5 морской мили от кромки льда
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Отсутствующее значение
\.


--
-- Name: bufr_code_020034_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020034_seq', 32, true);


--
-- Data for Name: bufr_code_020035; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020035 (id, code, description) FROM stdin;
1	0	Лед материкового происхождения отсутствует
2	1	1–5 айсбергов, нет кусков или обломков айсбергов
3	2	6–10 айсбергов, нет кусков или обломков айсбергов
4	3	11–20 айсбергов, нет кусков или обломков айсбергов
5	4	До и включая 10 кусков и обломков айсберга — айсбергов нет
6	5	Более 10 кусков или обломков айсберга — айсбергов нет
7	6	1–5 айсбергов с кусками или обломками айсбергов
8	7	6–10 айсбергов с кусками или обломками айсбергов
9	8	11–20 айсбергов с кусками или обломками айсбергов
10	9	Более 20 айсбергов с кусками и обломками айсбергов — значительная опасность для навигации
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Сводка не подготовлена вследствие темноты, плохой видимости или так как виден толькоморской лед
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_020035_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020035_seq', 16, true);


--
-- Data for Name: bufr_code_020036; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020036 (id, code, description) FROM stdin;
1	0	Судно в чистой воде с плавучим льдом в поле зрения
2	1	Судно в легкопроходимом льде; условия улучшаются
3	2	Судно в легкопроходимом льде; условия не меняются
4	3	Судно в легкопроходимом льде; условия ухудшаются
5	4	Судно в труднопроходимом льде; условия улучшаются
6	5	Судно в труднопроходимом льде; условия не меняются
7	6	Судно в труднопроходимом льде и условия ухудшаются; формирование льда и смерзаниеледяных полей
8	7	Судно в труднопроходимом льде и условия ухудшаются; лед под небольшим давлением
9	8	Судно в труднопроходимом льде и условия ухудшаются; лед под умеренным или сильнымдавлением
10	9	Судно в труднопроходимом льде и условия ухудшаются; судно зажато льдами
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Определение льда затруднено вследствие темноты или плохой видимости
32	31	Отсутствующее значение
\.


--
-- Name: bufr_code_020036_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020036_seq', 32, true);


--
-- Data for Name: bufr_code_020037; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020037 (id, code, description) FROM stdin;
1	0	Только начальные виды льдов (ледяные иглы, ледяное сало, снежура, шуга)
2	1	Нилас или склянка, толщина менее 10 см
3	2	Молодые льды (серый лед, серо-белый лед), толщина 10–30 см
4	3	Преимущественно начальные виды льдов и/или молодые льды с небольшим количеством одно-летнего льда
5	4	Преимущественно тонкий однолетний лед с небольшим количеством начальных видов льдови/или молодых льдов
6	5	Только тонкий однолетний лед (30–70 см)
7	6	Преимущественно средний однолетний лед (70–120 см) и толстый однолетний лед (толщинабольше 120 см) с небольшим количеством более тонкого (молодого) однолетнего льда
8	7	Только средний и толстый однолетний лед
9	8	Преимущественно средний и толстый однолетний лед с небольшим количеством старого льда(обычно толщина более 2 м)
10	9	Преимущественно старый лед
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Определение льда затруднено вследствие темноты, плохой видимости или потому что видентолько лед, образовавшийся на суше, или вследствие того, что судно находится на расстоянииболее 0,5 морской мили от кромки льда
32	31	Отсутствующее значение
\.


--
-- Name: bufr_code_020037_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020037_seq', 32, true);


--
-- Data for Name: bufr_code_020040; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020040 (id, code, description) FROM stdin;
1	0	Поземок закончился до срока наблюдения
2	1	Интенсивность уменьшается
3	2	Без изменений
4	3	Интенсивность увеличивается
5	4	Продолжается поле перерыва, который продлился менее 30 минут
6	5	Метель превратилась в поземок
7	6	Поземок превратился в метель
8	7	Поземок начался снова после перерыва, который продлился более 30 минут
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_020040_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020040_seq', 16, true);


--
-- Data for Name: bufr_code_020041; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020041 (id, code, description) FROM stdin;
1	0	Обледенения нет
2	1	Слабое обледенение
3	2	Слабое обледенение в облаках
4	3	Слабое обледенение в осадках
5	4	Умеренное обледенение
6	5	Умеренное обледенение в облаках
7	6	Умеренное обледенение в осадках
8	7	Сильное обледенение
9	8	Сильное обледенение в облаках
10	9	Сильное обледенение в осадках
11	10	Следы обледенения
12	11	Следы обледенения в облаках
13	12	Следы обледенения в осадках
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_020041_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020041_seq', 16, true);


--
-- Data for Name: bufr_code_020042; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020042 (id, code, description) FROM stdin;
1	0	Обледенение отсутствует
2	1	Обледенение присутствует
3	2	Зарезервировано
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_020042_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020042_seq', 4, true);


--
-- Data for Name: bufr_code_020045; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020045 (id, code, description) FROM stdin;
1	0	Условия SLD отсутствуют
2	1	Условия SLD присутствуют
3	2	Зарезервировано
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_020045_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020045_seq', 4, true);


--
-- Data for Name: bufr_code_020048; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020048 (id, code, description) FROM stdin;
1	0	Стабильность
2	1	Уменьшение
3	2	Усиление
4	3	Неизвестна
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_020048_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020048_seq', 16, true);


--
-- Data for Name: bufr_code_020050; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020050 (id, code, description) FROM stdin;
1	0	Зарезервировано
2	1	Первый нижний ярус облаков
3	2	Второй нижний ярус облаков
4	3	Третий нижний ярус облаков
5	4	Первый средний ярус облаков
6	5	Второй средний ярус облаков
7	6	Третий средний ярус облаков
8	7	Первый верхний ярус облаков
9	8	Второй верхний ярус облаков
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Зарезервировано
33	32	Зарезервировано
34	33	Зарезервировано
35	34	Зарезервировано
36	35	Зарезервировано
37	36	Зарезервировано
38	37	Зарезервировано
39	38	Зарезервировано
40	39	Зарезервировано
41	40	Зарезервировано
42	41	Зарезервировано
43	42	Зарезервировано
44	43	Зарезервировано
45	44	Зарезервировано
46	45	Зарезервировано
47	46	Зарезервировано
48	47	Зарезервировано
49	48	Зарезервировано
50	49	Зарезервировано
51	50	Зарезервировано
52	51	Зарезервировано
53	52	Зарезервировано
54	53	Зарезервировано
55	54	Зарезервировано
56	55	Зарезервировано
57	56	Зарезервировано
58	57	Зарезервировано
59	58	Зарезервировано
60	59	Зарезервировано
61	60	Зарезервировано
62	61	Зарезервировано
63	62	Зарезервировано
64	63	Зарезервировано
65	64	Зарезервировано
66	65	Зарезервировано
67	66	Зарезервировано
68	67	Зарезервировано
69	68	Зарезервировано
70	69	Зарезервировано
71	70	Зарезервировано
72	71	Зарезервировано
73	72	Зарезервировано
74	73	Зарезервировано
75	74	Зарезервировано
76	75	Зарезервировано
77	76	Зарезервировано
78	77	Зарезервировано
79	78	Зарезервировано
80	79	Зарезервировано
81	80	Зарезервировано
82	81	Зарезервировано
83	82	Зарезервировано
84	83	Зарезервировано
85	84	Зарезервировано
86	85	Зарезервировано
87	86	Зарезервировано
88	87	Зарезервировано
89	88	Зарезервировано
90	89	Зарезервировано
91	90	Зарезервировано
92	91	Зарезервировано
93	92	Зарезервировано
94	93	Зарезервировано
95	94	Зарезервировано
96	95	Зарезервировано
97	96	Зарезервировано
98	97	Зарезервировано
99	98	Зарезервировано
100	99	Зарезервировано
101	100	Зарезервировано
102	101	Зарезервировано
103	102	Зарезервировано
104	103	Зарезервировано
105	104	Зарезервировано
106	105	Зарезервировано
107	106	Зарезервировано
108	107	Зарезервировано
109	108	Зарезервировано
110	109	Зарезервировано
111	110	Зарезервировано
112	111	Зарезервировано
113	112	Зарезервировано
114	113	Зарезервировано
115	114	Зарезервировано
116	115	Зарезервировано
117	116	Зарезервировано
118	117	Зарезервировано
119	118	Зарезервировано
120	119	Зарезервировано
121	120	Зарезервировано
122	121	Зарезервировано
123	122	Зарезервировано
124	123	Зарезервировано
125	124	Зарезервировано
126	125	Зарезервировано
127	126	Зарезервировано
128	127	Зарезервировано
129	128	Зарезервировано
130	129	Зарезервировано
131	130	Зарезервировано
132	131	Зарезервировано
133	132	Зарезервировано
134	133	Зарезервировано
135	134	Зарезервировано
136	135	Зарезервировано
137	136	Зарезервировано
138	137	Зарезервировано
139	138	Зарезервировано
140	139	Зарезервировано
141	140	Зарезервировано
142	141	Зарезервировано
143	142	Зарезервировано
144	143	Зарезервировано
145	144	Зарезервировано
146	145	Зарезервировано
147	146	Зарезервировано
148	147	Зарезервировано
149	148	Зарезервировано
150	149	Зарезервировано
151	150	Зарезервировано
152	151	Зарезервировано
153	152	Зарезервировано
154	153	Зарезервировано
155	154	Зарезервировано
156	155	Зарезервировано
157	156	Зарезервировано
158	157	Зарезервировано
159	158	Зарезервировано
160	159	Зарезервировано
161	160	Зарезервировано
162	161	Зарезервировано
163	162	Зарезервировано
164	163	Зарезервировано
165	164	Зарезервировано
166	165	Зарезервировано
167	166	Зарезервировано
168	167	Зарезервировано
169	168	Зарезервировано
170	169	Зарезервировано
171	170	Зарезервировано
172	171	Зарезервировано
173	172	Зарезервировано
174	173	Зарезервировано
175	174	Зарезервировано
176	175	Зарезервировано
177	176	Зарезервировано
178	177	Зарезервировано
179	178	Зарезервировано
180	179	Зарезервировано
181	180	Зарезервировано
182	181	Зарезервировано
183	182	Зарезервировано
184	183	Зарезервировано
185	184	Зарезервировано
186	185	Зарезервировано
187	186	Зарезервировано
188	187	Зарезервировано
189	188	Зарезервировано
190	189	Зарезервировано
191	190	Зарезервировано
192	191	Зарезервировано
193	192	Зарезервировано
194	193	Зарезервировано
195	194	Зарезервировано
196	195	Зарезервировано
197	196	Зарезервировано
198	197	Зарезервировано
199	198	Зарезервировано
200	199	Зарезервировано
201	200	Зарезервировано
202	201	Зарезервировано
203	202	Зарезервировано
204	203	Зарезервировано
205	204	Зарезервировано
206	205	Зарезервировано
207	206	Зарезервировано
208	207	Зарезервировано
209	208	Зарезервировано
210	209	Зарезервировано
211	210	Зарезервировано
212	211	Зарезервировано
213	212	Зарезервировано
214	213	Зарезервировано
215	214	Зарезервировано
216	215	Зарезервировано
217	216	Зарезервировано
218	217	Зарезервировано
219	218	Зарезервировано
220	219	Зарезервировано
221	220	Зарезервировано
222	221	Зарезервировано
223	222	Зарезервировано
224	223	Зарезервировано
225	224	Зарезервировано
226	225	Зарезервировано
227	226	Зарезервировано
228	227	Зарезервировано
229	228	Зарезервировано
230	229	Зарезервировано
231	230	Зарезервировано
232	231	Зарезервировано
233	232	Зарезервировано
234	233	Зарезервировано
235	234	Зарезервировано
236	235	Зарезервировано
237	236	Зарезервировано
238	237	Зарезервировано
239	238	Зарезервировано
240	239	Зарезервировано
241	240	Зарезервировано
242	241	Зарезервировано
243	242	Зарезервировано
244	243	Зарезервировано
245	244	Зарезервировано
246	245	Зарезервировано
247	246	Зарезервировано
248	247	Зарезервировано
249	248	Зарезервировано
250	249	Зарезервировано
251	250	Зарезервировано
252	251	Зарезервировано
253	252	Зарезервировано
254	253	Зарезервировано
255	254	Зарезервировано
256	255	Отсутствующее значение
\.


--
-- Name: bufr_code_020050_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020050_seq', 256, true);


--
-- Data for Name: bufr_code_020055; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020055 (id, code, description) FROM stdin;
1	0	Кучевые облака относительно малых размеров, если они присутствуют как таковые; в основном охватывают менее 2/8 неба, кроме наветренной стороны склонов приподнятой местности;средняя ширина облаков по крайней мере равна их мощности по вертикали.
2	1	Кучевые облака средних размеров, охватывающие менее 5/8 неба; средняя ширина облаков больше их мощности по вертикали; в виде вертикальных башен, с признаками незначительныхосадков или без них, кроме наветренной стороны склонов приподнятой местности; обычнооблака среднего и верхнего ярусов отсутствуют.
3	2	Развивающиеся кучевые облака с быстро растущими в высоту высокими башенками, уменьшающиеся в размере, вершины которых стремятся отделиться от нижней части облака и рассеиваются через несколько минут после отделения.
4	3	Развивающиеся кучевые облака с башнями, которые явно «заваливаются» в подветренную сторону; вертикальная мощность облаков более чем в полтора раза превышает их среднюю ширину.
5	4	Развивающиеся кучевые облака с башнями, которые явно «заваливаются» в наветренную сторону; вертикальная мощность облаков более чем в полтора раза превышает их среднюю ширину.
6	5	Высокие мощные кучевые облака, вертикальная мощность которых в 2 раза больше их средней ширины; скоплений или гряд не образуют; один или более облачных слоев протянулся от облачных башен, хотя постоянных слоев не наблюдается (см. примечание).
7	6	Отдельные кучево-дождевые облака или большое скопление башенок кучевых облаков, разделенных широкими просветами; основания облаков обычно темные, почти все ячейки ливневогохарактера; могут наблюдаться рассеянные облака верхнего и среднего ярусов; высота отдельныхячеек кучевых облаков в 1–2 раза больше их ширины.
8	7	Многочисленные кучевые облака, простирающиеся в средней тропосфере, с разорванными илисплошными слоями облаков среднего яруса и/или перисто-слоистых облаков; башни кучевыхоблаков с высотой обычно не уменьшаются в размере; неровные темные основания облаков,в которых встречаются ячейки ливневого характера.
9	8	Сплошная плотная облачность среднего яруса и/или слои перисто-слоистых облаков с неболь-шим количеством больших отдельных кучево-дождевых или мощных кучевых облаков, прони-кающих в эти слои; временами выпадает слабый дождь из высокослоистых облаков; основаниякучево-дождевых облаков неровные и темные с видимыми ячейками ливневого характера (см.примечание).
10	9	Сплошные слои облаков среднего яруса и/или перисто-слоистых облаков с кучево-дождевымии мощными кучевыми облаками, выстроившимися в гряды или образующие полосы облаков;дождь обычно выпадает из слоев высокослоистых облаков, а сильные ливневые дожди — изкучево-дождевых облаков; ветер порывистый.
11	10	Состояние неба неизвестно или не описывается ни одной из приведенных выше характеристик.
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_020055_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020055_seq', 16, true);


--
-- Data for Name: bufr_code_020056; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020056 (id, code, description) FROM stdin;
1	0	Неизвестно
2	1	Вода
3	2	Лед
4	3	Смешанная
5	4	Ясно
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_020056_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020056_seq', 8, true);


--
-- Data for Name: bufr_code_020062; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020062 (id, code, description) FROM stdin;
1	0	Поверхность почвы сухая (без трещин и без заметного количества пыли или рыхлого песка)
2	1	Поверхность почвы сырая
3	2	Поверхность почвы влажная (вода застаивается на поверхности и образует малые или большие лужи)
4	3	Затопленная
5	4	Поверхность почвы замерзшая
6	5	Гололед на поверхности почвы
7	6	Рыхлая сухая пыль или песок, не покрывающие поверхность почвы полностью
8	7	Тонкий слой рыхлой сухой пыли или песка, покрывающий поверхность почвы полностью
9	8	Умеренный или толстый слой сухой пыли или песка,покрывающий поверхность почвы полностью
10	9	Чрезвычайно сухая, с трещинами
11	10	Поверхность земли преимущественно покрыта льдом
12	11	Слежавшийся или мокрый снег (со льдом или без него), покрывающий менее половины поверхности почвы
13	12	Слежавшийся или мокрый снег (со льдом или без него), покрывающий по крайней мере половину поверхности почвы, но почва не покрыта полностью
14	13	Ровный слой слежавшегося или мокрого снега,покрывающий поверхность почвы полностью
15	14	Неровный слой слежавшегося или мокрого снега, покрывающий поверхность почвы полностью
16	15	Сухой рассыпчатый снег, покрывающий менее половины поверхности почвы
17	16	Сухой рассыпчатый снег, покрывающий по крайней мере половину поверхности почвы (но не полностью)
18	17	Ровный слой сухого рассыпчатого снега, покрывающий поверхность почвы полностью
19	18	Неровный слой сухого рассыпчатого снега, покрывающий поверхность почвы полностью
20	19	Снег, покрывающий поверхность земли полностью; глубокие сугробы
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Отсутствующее значение
\.


--
-- Name: bufr_code_020062_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020062_seq', 32, true);


--
-- Data for Name: bufr_code_020063; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020063 (id, code, description) FROM stdin;
1	0	Зарезервировано
2	1	Порывы ветра наибольшей скорости, превышающей 11,5 м/с
3	2	Наибольшая средняя скорость ветра, превышающая 17,5 м/с
4	3	Зарезервировано
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Видимость более чем 100 000 м
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Мираж — спецификации нет
12	11	Мираж — приподнятое изображение удаленного объекта (имеющего неясные очертания)
13	12	Мираж — четкое изображение удаленного объекта, приподнятого над горизонтом
14	13	Мираж — перевернутое изображение удаленного объекта
15	14	Мираж — сложные, многократно повторяемые изображения удаленного объекта (изображения
16	15	Мираж — сложные, многократно повторяемые изображения удаленного объекта (некоторые
17	16	Мираж — солнце или луна, наблюдаемые заметно искаженными
18	17	Мираж — солнце является видимым, хотя астрономически находится ниже горизонта
19	18	Мираж — луна является видимой, хотя астрономически находится ниже горизонта
20	19	Зарезервировано
21	20	Сильное ухудшение освещенности в дневное время, наиболее сильное в указанном направлении
22	21	Очень сильное ухудшение освещенности в дневное время, наиболее сильное в указанном направ
23	22	Наступление темноты в дневное время, наиболее сильное в указанном направлении
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Слабая окраска облаков при восходе солнца, связанных с тропическим возмущением
33	32	Темно-красная окраска облаков при восходе солнца, связанных с тропическим возмущением
34	33	Слабая окраска облаков при восходе солнца, связанных с тропическим возмущением
35	34	Темно-красная окраска облаков при заходе солнца, связанных с тропическим возмущением
36	35	Конвергенция облаков CH в точке ниже 45°, формирующихся или растущих и связанных
37	36	Конвергенция облаков CH в точке выше 45°, связанных с тропическим возмущением
38	37	Конвергенция облаков CH в точке ниже 45°, рассеивающихся или уменьшающихся и связанных
39	38	Конвергенция облаков CH в точке выше 45°, связанных с тропическим возмущением
40	39	Зарезервировано
41	40	Иней на горизонтальных поверхностях
42	41	Иней на горизонтальных и вертикальных поверхностях
43	42	Осадки, содержащие песок или пыль, принесенные из пустыни
44	43	Осадки, содержащие вулканический пепел
45	44	Зарезервировано
46	45	Зарезервировано
47	46	Зарезервировано
48	47	Зарезервировано
49	48	Зарезервировано
50	49	Зарезервировано
51	50	Штиль или легкий ветер, за которым последовал шквал
52	51	Штиль или легкий ветер, за которым последовала серия шквалов
53	52	Ветреная погода, за которой последовал шквал
54	53	Порывистый ветер, за которым последовала серия шквалов
55	54	Шквал, за которым последовал порывистый ветер
56	55	Преобладающая ветреная погода, временами шквалы
57	56	Шквал, приближающийся к станции
58	57	Фронтальный шквал
59	58	Шквал с пыльным или песчаным поземком или с пыльной или песчаной бурей
60	59	Фронтальный шквал с пыльным или песчаным поземком или с пыльной или песчаной бурей
61	60	Температура устойчивая
62	61	Температура падает, не понижаясь ниже 0 °C
144	143	Зарезервировано
63	62	Температура поднимается, не повышаясь выше 0 °C
64	63	Температура падает до величины ниже 0 °C
65	64	Температура поднимается до величины выше 0 °C
66	65	Неравномерное изменение, колебания температуры с переходом через 0 °C
67	66	Неравномерное изменение, колебания температуры без перехода через 0 °C
68	67	Изменение температуры не наблюдалось
69	68	Не выделено
70	69	Изменение температуры неизвестно из-за отсутствия термографа
71	70	Видимость не изменяется (солнце или небо (если солнце за горизонтом), или луна, или звезды ночью видно) в указанном направлении
72	71	Видимость не изменяется (солнце или небо (если солнце за горизонтом), или луна, или звезды ночью не видно) в указанном направлении
73	72	Видимость увеличилась (солнце или небо (если солнце за горизонтом), или луна, или звезды ночью видно) в указанном направлении
74	73	Видимость увеличилась (солнце или небо (если солнце за горизонтом), или луна, или звезды ночью не видно) в указанном направлении
75	74	Видимость уменьшилась (солнце или небо (если солнце за горизонтом), или луна, или звезды ночью видно) в указанном направлении
76	75	Видимость уменьшилась (солнце или небо (если солнце за горизонтом), или луна, или звезды ночью не видно) в указанном направлении
77	76	Туман, перемещающийся от указанного направления
78	77	Туман поднялся, не рассеиваясь
79	78	Туман рассеялся безотносительно направления
80	79	Движущиеся обрывки или гряды тумана
81	80	Разорванный спектр
82	81	Радуга
83	82	Гало вокруг Солнца или вокруг Луны
84	83	Ложные солнца или противосолнца
85	84	Солнечный столб
86	85	Венец
87	86	Сумеречное свечение атмосферы
88	87	Сумеречное свечение в горах (Alpenglühen)
89	88	Мираж
90	89	Зодиакальный свет
91	90	Огни Святого Эльма
92	91	Зарезервировано
93	92	Зарезервировано
94	93	Зарезервировано
95	94	Зарезервировано
96	95	Зарезервировано
97	96	Зарезервировано
98	97	Зарезервировано
99	98	Зарезервировано
100	99	Зарезервировано
101	100	Зарезервировано
102	101	Зарезервировано
103	102	Зарезервировано
104	103	Зарезервировано
105	104	Зарезервировано
106	105	Зарезервировано
107	106	Зарезервировано
108	107	Зарезервировано
109	108	Зарезервировано
110	109	Зарезервировано
111	110	Зарезервировано
112	111	Зарезервировано
113	112	Зарезервировано
114	113	Зарезервировано
115	114	Зарезервировано
116	115	Зарезервировано
117	116	Зарезервировано
118	117	Зарезервировано
119	118	Зарезервировано
120	119	Зарезервировано
121	120	Зарезервировано
122	121	Зарезервировано
123	122	Зарезервировано
124	123	Зарезервировано
125	124	Зарезервировано
126	125	Зарезервировано
127	126	Зарезервировано
128	127	Зарезервировано
129	128	Зарезервировано
130	129	Зарезервировано
131	130	Зарезервировано
132	131	Зарезервировано
133	132	Зарезервировано
134	133	Зарезервировано
135	134	Зарезервировано
136	135	Зарезервировано
137	136	Зарезервировано
138	137	Зарезервировано
139	138	Зарезервировано
140	139	Зарезервировано
141	140	Зарезервировано
142	141	Зарезервировано
143	142	Зарезервировано
145	144	Зарезервировано
146	145	Зарезервировано
147	146	Зарезервировано
148	147	Зарезервировано
149	148	Зарезервировано
150	149	Зарезервировано
151	150	Зарезервировано
152	151	Зарезервировано
153	152	Зарезервировано
154	153	Зарезервировано
155	154	Зарезервировано
156	155	Зарезервировано
157	156	Зарезервировано
158	157	Зарезервировано
159	158	Зарезервировано
160	159	Зарезервировано
161	160	Зарезервировано
162	161	Зарезервировано
163	162	Зарезервировано
164	163	Зарезервировано
165	164	Зарезервировано
166	165	Зарезервировано
167	166	Зарезервировано
168	167	Зарезервировано
169	168	Зарезервировано
170	169	Зарезервировано
171	170	Зарезервировано
172	171	Зарезервировано
173	172	Зарезервировано
174	173	Зарезервировано
175	174	Зарезервировано
176	175	Зарезервировано
177	176	Зарезервировано
178	177	Зарезервировано
179	178	Зарезервировано
180	179	Зарезервировано
181	180	Зарезервировано
182	181	Зарезервировано
183	182	Зарезервировано
184	183	Зарезервировано
185	184	Зарезервировано
186	185	Зарезервировано
187	186	Зарезервировано
188	187	Зарезервировано
189	188	Зарезервировано
190	189	Зарезервировано
191	190	Зарезервировано
192	191	Зарезервировано
193	192	Зарезервировано
194	193	Зарезервировано
195	194	Зарезервировано
196	195	Зарезервировано
197	196	Зарезервировано
198	197	Зарезервировано
199	198	Зарезервировано
200	199	Зарезервировано
201	200	Зарезервировано
202	201	Зарезервировано
203	202	Зарезервировано
204	203	Зарезервировано
205	204	Зарезервировано
206	205	Зарезервировано
207	206	Зарезервировано
208	207	Зарезервировано
209	208	Зарезервировано
210	209	Зарезервировано
211	210	Зарезервировано
212	211	Зарезервировано
213	212	Зарезервировано
214	213	Зарезервировано
215	214	Зарезервировано
216	215	Зарезервировано
217	216	Зарезервировано
218	217	Зарезервировано
219	218	Зарезервировано
220	219	Зарезервировано
221	220	Зарезервировано
222	221	Зарезервировано
223	222	Зарезервировано
224	223	Зарезервировано
225	224	Зарезервировано
226	225	Зарезервировано
227	226	Зарезервировано
228	227	Зарезервировано
229	228	Зарезервировано
230	229	Зарезервировано
231	230	Зарезервировано
232	231	Зарезервировано
233	232	Зарезервировано
234	233	Зарезервировано
235	234	Зарезервировано
236	235	Зарезервировано
237	236	Зарезервировано
238	237	Зарезервировано
239	238	Зарезервировано
240	239	Зарезервировано
241	240	Зарезервировано
242	241	Зарезервировано
243	242	Зарезервировано
244	243	Зарезервировано
245	244	Зарезервировано
246	245	Зарезервировано
247	246	Зарезервировано
248	247	Зарезервировано
249	248	Зарезервировано
250	249	Зарезервировано
251	250	Зарезервировано
252	251	Зарезервировано
253	252	Зарезервировано
254	253	Зарезервировано
255	254	Зарезервировано
256	255	Зарезервировано
257	256	Зарезервировано
258	257	Зарезервировано
259	258	Зарезервировано
260	259	Зарезервировано
261	260	Зарезервировано
262	261	Зарезервировано
263	262	Зарезервировано
264	263	Зарезервировано
265	264	Зарезервировано
266	265	Зарезервировано
267	266	Зарезервировано
268	267	Зарезервировано
269	268	Зарезервировано
270	269	Зарезервировано
271	270	Зарезервировано
272	271	Зарезервировано
273	272	Зарезервировано
274	273	Зарезервировано
275	274	Зарезервировано
276	275	Зарезервировано
277	276	Зарезервировано
278	277	Зарезервировано
279	278	Зарезервировано
280	279	Зарезервировано
281	280	Зарезервировано
282	281	Зарезервировано
283	282	Зарезервировано
284	283	Зарезервировано
285	284	Зарезервировано
286	285	Зарезервировано
287	286	Зарезервировано
288	287	Зарезервировано
289	288	Зарезервировано
290	289	Зарезервировано
291	290	Зарезервировано
292	291	Зарезервировано
293	292	Зарезервировано
294	293	Зарезервировано
295	294	Зарезервировано
296	295	Зарезервировано
297	296	Зарезервировано
298	297	Зарезервировано
299	298	Зарезервировано
300	299	Зарезервировано
301	300	Зарезервировано
302	301	Зарезервировано
303	302	Зарезервировано
304	303	Зарезервировано
305	304	Зарезервировано
306	305	Зарезервировано
307	306	Зарезервировано
308	307	Зарезервировано
309	308	Зарезервировано
310	309	Зарезервировано
311	310	Зарезервировано
312	311	Зарезервировано
313	312	Зарезервировано
314	313	Зарезервировано
315	314	Зарезервировано
316	315	Зарезервировано
317	316	Зарезервировано
318	317	Зарезервировано
319	318	Зарезервировано
320	319	Зарезервировано
321	320	Зарезервировано
322	321	Зарезервировано
323	322	Зарезервировано
324	323	Зарезервировано
325	324	Зарезервировано
326	325	Зарезервировано
327	326	Зарезервировано
328	327	Зарезервировано
329	328	Зарезервировано
330	329	Зарезервировано
331	330	Зарезервировано
332	331	Зарезервировано
333	332	Зарезервировано
334	333	Зарезервировано
335	334	Зарезервировано
336	335	Зарезервировано
337	336	Зарезервировано
338	337	Зарезервировано
339	338	Зарезервировано
340	339	Зарезервировано
341	340	Зарезервировано
342	341	Зарезервировано
343	342	Зарезервировано
344	343	Зарезервировано
345	344	Зарезервировано
346	345	Зарезервировано
347	346	Зарезервировано
348	347	Зарезервировано
349	348	Зарезервировано
350	349	Зарезервировано
351	350	Зарезервировано
352	351	Зарезервировано
353	352	Зарезервировано
354	353	Зарезервировано
355	354	Зарезервировано
356	355	Зарезервировано
357	356	Зарезервировано
358	357	Зарезервировано
359	358	Зарезервировано
360	359	Зарезервировано
361	360	Зарезервировано
362	361	Зарезервировано
363	362	Зарезервировано
364	363	Зарезервировано
365	364	Зарезервировано
366	365	Зарезервировано
367	366	Зарезервировано
368	367	Зарезервировано
369	368	Зарезервировано
370	369	Зарезервировано
371	370	Зарезервировано
372	371	Зарезервировано
373	372	Зарезервировано
374	373	Зарезервировано
375	374	Зарезервировано
376	375	Зарезервировано
377	376	Зарезервировано
378	377	Зарезервировано
379	378	Зарезервировано
380	379	Зарезервировано
381	380	Зарезервировано
382	381	Зарезервировано
383	382	Зарезервировано
384	383	Зарезервировано
385	384	Зарезервировано
386	385	Зарезервировано
387	386	Зарезервировано
388	387	Зарезервировано
389	388	Зарезервировано
390	389	Зарезервировано
391	390	Зарезервировано
392	391	Зарезервировано
393	392	Зарезервировано
394	393	Зарезервировано
395	394	Зарезервировано
396	395	Зарезервировано
397	396	Зарезервировано
398	397	Зарезервировано
399	398	Зарезервировано
400	399	Зарезервировано
401	400	Зарезервировано
402	401	Зарезервировано
403	402	Зарезервировано
404	403	Зарезервировано
405	404	Зарезервировано
406	405	Зарезервировано
407	406	Зарезервировано
408	407	Зарезервировано
409	408	Зарезервировано
410	409	Зарезервировано
411	410	Зарезервировано
412	411	Зарезервировано
413	412	Зарезервировано
414	413	Зарезервировано
415	414	Зарезервировано
416	415	Зарезервировано
417	416	Зарезервировано
418	417	Зарезервировано
419	418	Зарезервировано
420	419	Зарезервировано
421	420	Зарезервировано
422	421	Зарезервировано
423	422	Зарезервировано
424	423	Зарезервировано
425	424	Зарезервировано
426	425	Зарезервировано
427	426	Зарезервировано
428	427	Зарезервировано
429	428	Зарезервировано
430	429	Зарезервировано
431	430	Зарезервировано
432	431	Зарезервировано
433	432	Зарезервировано
434	433	Зарезервировано
435	434	Зарезервировано
436	435	Зарезервировано
437	436	Зарезервировано
438	437	Зарезервировано
439	438	Зарезервировано
440	439	Зарезервировано
441	440	Зарезервировано
442	441	Зарезервировано
443	442	Зарезервировано
444	443	Зарезервировано
445	444	Зарезервировано
446	445	Зарезервировано
447	446	Зарезервировано
448	447	Зарезервировано
449	448	Зарезервировано
450	449	Зарезервировано
451	450	Зарезервировано
452	451	Зарезервировано
453	452	Зарезервировано
454	453	Зарезервировано
455	454	Зарезервировано
456	455	Зарезервировано
457	456	Зарезервировано
458	457	Зарезервировано
459	458	Зарезервировано
460	459	Зарезервировано
461	460	Зарезервировано
462	461	Зарезервировано
463	462	Зарезервировано
464	463	Зарезервировано
465	464	Зарезервировано
466	465	Зарезервировано
467	466	Зарезервировано
468	467	Зарезервировано
469	468	Зарезервировано
470	469	Зарезервировано
471	470	Зарезервировано
472	471	Зарезервировано
473	472	Зарезервировано
474	473	Зарезервировано
475	474	Зарезервировано
476	475	Зарезервировано
477	476	Зарезервировано
478	477	Зарезервировано
479	478	Зарезервировано
480	479	Зарезервировано
481	480	Зарезервировано
482	481	Зарезервировано
483	482	Зарезервировано
484	483	Зарезервировано
485	484	Зарезервировано
486	485	Зарезервировано
487	486	Зарезервировано
488	487	Зарезервировано
489	488	Зарезервировано
490	489	Зарезервировано
491	490	Зарезервировано
492	491	Зарезервировано
493	492	Зарезервировано
494	493	Зарезервировано
495	494	Зарезервировано
496	495	Зарезервировано
497	496	Зарезервировано
498	497	Зарезервировано
499	498	Зарезервировано
500	499	Зарезервировано
501	500	Зарезервировано
502	501	Зарезервировано
503	502	Зарезервировано
504	503	Зарезервировано
505	504	Зарезервировано
506	505	Зарезервировано
507	506	Зарезервировано
508	507	Зарезервировано
509	508	Зарезервировано
510	509	Зарезервировано
511	510	Зарезервировано
512	511	Зарезервировано
513	512	Зарезервировано
514	513	Зарезервировано
515	514	Зарезервировано
516	515	Зарезервировано
517	516	Зарезервировано
518	517	Зарезервировано
519	518	Зарезервировано
520	519	Зарезервировано
521	520	Зарезервировано
522	521	Зарезервировано
523	522	Зарезервировано
524	523	Зарезервировано
525	524	Зарезервировано
526	525	Зарезервировано
527	526	Зарезервировано
528	527	Зарезервировано
529	528	Зарезервировано
530	529	Зарезервировано
531	530	Зарезервировано
532	531	Зарезервировано
533	532	Зарезервировано
534	533	Зарезервировано
535	534	Зарезервировано
536	535	Зарезервировано
537	536	Зарезервировано
538	537	Зарезервировано
539	538	Зарезервировано
540	539	Зарезервировано
541	540	Зарезервировано
542	541	Зарезервировано
543	542	Зарезервировано
544	543	Зарезервировано
545	544	Зарезервировано
546	545	Зарезервировано
547	546	Зарезервировано
548	547	Зарезервировано
549	548	Зарезервировано
550	549	Зарезервировано
551	550	Зарезервировано
552	551	Зарезервировано
553	552	Зарезервировано
554	553	Зарезервировано
555	554	Зарезервировано
556	555	Зарезервировано
557	556	Зарезервировано
558	557	Зарезервировано
559	558	Зарезервировано
560	559	Зарезервировано
561	560	Зарезервировано
562	561	Зарезервировано
563	562	Зарезервировано
564	563	Зарезервировано
565	564	Зарезервировано
566	565	Зарезервировано
567	566	Зарезервировано
568	567	Зарезервировано
569	568	Зарезервировано
570	569	Зарезервировано
571	570	Зарезервировано
572	571	Зарезервировано
573	572	Зарезервировано
574	573	Зарезервировано
575	574	Зарезервировано
576	575	Зарезервировано
577	576	Зарезервировано
578	577	Зарезервировано
579	578	Зарезервировано
580	579	Зарезервировано
581	580	Зарезервировано
582	581	Зарезервировано
583	582	Зарезервировано
584	583	Зарезервировано
585	584	Зарезервировано
586	585	Зарезервировано
587	586	Зарезервировано
588	587	Зарезервировано
589	588	Зарезервировано
590	589	Зарезервировано
591	590	Зарезервировано
592	591	Зарезервировано
593	592	Зарезервировано
594	593	Зарезервировано
595	594	Зарезервировано
596	595	Зарезервировано
597	596	Зарезервировано
598	597	Зарезервировано
599	598	Зарезервировано
600	599	Зарезервировано
601	600	Зарезервировано
602	601	Зарезервировано
603	602	Зарезервировано
604	603	Зарезервировано
605	604	Зарезервировано
606	605	Зарезервировано
607	606	Зарезервировано
608	607	Зарезервировано
609	608	Зарезервировано
610	609	Зарезервировано
611	610	Зарезервировано
612	611	Зарезервировано
613	612	Зарезервировано
614	613	Зарезервировано
615	614	Зарезервировано
616	615	Зарезервировано
617	616	Зарезервировано
618	617	Зарезервировано
619	618	Зарезервировано
620	619	Зарезервировано
621	620	Зарезервировано
622	621	Зарезервировано
623	622	Зарезервировано
624	623	Зарезервировано
625	624	Зарезервировано
626	625	Зарезервировано
627	626	Зарезервировано
628	627	Зарезервировано
629	628	Зарезервировано
630	629	Зарезервировано
631	630	Зарезервировано
632	631	Зарезервировано
633	632	Зарезервировано
634	633	Зарезервировано
635	634	Зарезервировано
636	635	Зарезервировано
637	636	Зарезервировано
638	637	Зарезервировано
639	638	Зарезервировано
640	639	Зарезервировано
641	640	Зарезервировано
642	641	Зарезервировано
643	642	Зарезервировано
644	643	Зарезервировано
645	644	Зарезервировано
646	645	Зарезервировано
647	646	Зарезервировано
648	647	Зарезервировано
649	648	Зарезервировано
650	649	Зарезервировано
651	650	Зарезервировано
652	651	Зарезервировано
653	652	Зарезервировано
654	653	Зарезервировано
655	654	Зарезервировано
656	655	Зарезервировано
657	656	Зарезервировано
658	657	Зарезервировано
659	658	Зарезервировано
660	659	Зарезервировано
661	660	Зарезервировано
662	661	Зарезервировано
663	662	Зарезервировано
664	663	Зарезервировано
665	664	Зарезервировано
666	665	Зарезервировано
667	666	Зарезервировано
668	667	Зарезервировано
669	668	Зарезервировано
670	669	Зарезервировано
671	670	Зарезервировано
672	671	Зарезервировано
673	672	Зарезервировано
674	673	Зарезервировано
675	674	Зарезервировано
676	675	Зарезервировано
677	676	Зарезервировано
678	677	Зарезервировано
679	678	Зарезервировано
680	679	Зарезервировано
681	680	Зарезервировано
682	681	Зарезервировано
683	682	Зарезервировано
684	683	Зарезервировано
685	684	Зарезервировано
686	685	Зарезервировано
687	686	Зарезервировано
688	687	Зарезервировано
689	688	Зарезервировано
690	689	Зарезервировано
691	690	Зарезервировано
692	691	Зарезервировано
693	692	Зарезервировано
694	693	Зарезервировано
695	694	Зарезервировано
696	695	Зарезервировано
697	696	Зарезервировано
698	697	Зарезервировано
699	698	Зарезервировано
700	699	Зарезервировано
701	700	Зарезервировано
702	701	Зарезервировано
703	702	Зарезервировано
704	703	Зарезервировано
705	704	Зарезервировано
706	705	Зарезервировано
707	706	Зарезервировано
708	707	Зарезервировано
709	708	Зарезервировано
710	709	Зарезервировано
711	710	Зарезервировано
712	711	Зарезервировано
713	712	Зарезервировано
714	713	Зарезервировано
715	714	Зарезервировано
716	715	Зарезервировано
717	716	Зарезервировано
718	717	Зарезервировано
719	718	Зарезервировано
720	719	Зарезервировано
721	720	Зарезервировано
722	721	Зарезервировано
723	722	Зарезервировано
724	723	Зарезервировано
725	724	Зарезервировано
726	725	Зарезервировано
727	726	Зарезервировано
728	727	Зарезервировано
729	728	Зарезервировано
730	729	Зарезервировано
731	730	Зарезервировано
732	731	Зарезервировано
733	732	Зарезервировано
734	733	Зарезервировано
735	734	Зарезервировано
736	735	Зарезервировано
737	736	Зарезервировано
738	737	Зарезервировано
739	738	Зарезервировано
740	739	Зарезервировано
741	740	Зарезервировано
742	741	Зарезервировано
743	742	Зарезервировано
744	743	Зарезервировано
745	744	Зарезервировано
746	745	Зарезервировано
747	746	Зарезервировано
748	747	Зарезервировано
749	748	Зарезервировано
750	749	Зарезервировано
751	750	Зарезервировано
752	751	Зарезервировано
753	752	Зарезервировано
754	753	Зарезервировано
755	754	Зарезервировано
756	755	Зарезервировано
757	756	Зарезервировано
758	757	Зарезервировано
759	758	Зарезервировано
760	759	Зарезервировано
761	760	Зарезервировано
762	761	Зарезервировано
763	762	Зарезервировано
764	763	Зарезервировано
765	764	Зарезервировано
766	765	Зарезервировано
767	766	Зарезервировано
768	767	Зарезервировано
769	768	Зарезервировано
770	769	Зарезервировано
771	770	Зарезервировано
772	771	Зарезервировано
773	772	Зарезервировано
774	773	Зарезервировано
775	774	Зарезервировано
776	775	Зарезервировано
777	776	Зарезервировано
778	777	Зарезервировано
779	778	Зарезервировано
780	779	Зарезервировано
781	780	Зарезервировано
782	781	Зарезервировано
783	782	Зарезервировано
784	783	Зарезервировано
785	784	Зарезервировано
786	785	Зарезервировано
787	786	Зарезервировано
788	787	Зарезервировано
789	788	Зарезервировано
790	789	Зарезервировано
791	790	Зарезервировано
792	791	Зарезервировано
793	792	Зарезервировано
794	793	Зарезервировано
795	794	Зарезервировано
796	795	Зарезервировано
797	796	Зарезервировано
798	797	Зарезервировано
799	798	Зарезервировано
800	799	Зарезервировано
801	800	Зарезервировано
802	801	Зарезервировано
803	802	Зарезервировано
804	803	Зарезервировано
805	804	Зарезервировано
806	805	Зарезервировано
807	806	Зарезервировано
808	807	Зарезервировано
809	808	Зарезервировано
810	809	Зарезервировано
811	810	Зарезервировано
812	811	Зарезервировано
813	812	Зарезервировано
814	813	Зарезервировано
815	814	Зарезервировано
816	815	Зарезервировано
817	816	Зарезервировано
818	817	Зарезервировано
819	818	Зарезервировано
820	819	Зарезервировано
821	820	Зарезервировано
822	821	Зарезервировано
823	822	Зарезервировано
824	823	Зарезервировано
825	824	Зарезервировано
826	825	Зарезервировано
827	826	Зарезервировано
828	827	Зарезервировано
829	828	Зарезервировано
830	829	Зарезервировано
831	830	Зарезервировано
832	831	Зарезервировано
833	832	Зарезервировано
834	833	Зарезервировано
835	834	Зарезервировано
836	835	Зарезервировано
837	836	Зарезервировано
838	837	Зарезервировано
839	838	Зарезервировано
840	839	Зарезервировано
841	840	Зарезервировано
842	841	Зарезервировано
843	842	Зарезервировано
844	843	Зарезервировано
845	844	Зарезервировано
846	845	Зарезервировано
847	846	Зарезервировано
848	847	Зарезервировано
849	848	Зарезервировано
850	849	Зарезервировано
851	850	Зарезервировано
852	851	Зарезервировано
853	852	Зарезервировано
854	853	Зарезервировано
855	854	Зарезервировано
856	855	Зарезервировано
857	856	Зарезервировано
858	857	Зарезервировано
859	858	Зарезервировано
860	859	Зарезервировано
861	860	Зарезервировано
862	861	Зарезервировано
863	862	Зарезервировано
864	863	Зарезервировано
865	864	Зарезервировано
866	865	Зарезервировано
867	866	Зарезервировано
868	867	Зарезервировано
869	868	Зарезервировано
870	869	Зарезервировано
871	870	Зарезервировано
872	871	Зарезервировано
873	872	Зарезервировано
874	873	Зарезервировано
875	874	Зарезервировано
876	875	Зарезервировано
877	876	Зарезервировано
878	877	Зарезервировано
879	878	Зарезервировано
880	879	Зарезервировано
881	880	Зарезервировано
882	881	Зарезервировано
883	882	Зарезервировано
884	883	Зарезервировано
885	884	Зарезервировано
886	885	Зарезервировано
887	886	Зарезервировано
888	887	Зарезервировано
889	888	Зарезервировано
890	889	Зарезервировано
891	890	Зарезервировано
892	891	Зарезервировано
893	892	Зарезервировано
894	893	Зарезервировано
895	894	Зарезервировано
896	895	Зарезервировано
897	896	Зарезервировано
898	897	Зарезервировано
899	898	Зарезервировано
900	899	Зарезервировано
901	900	Зарезервировано
902	901	Зарезервировано
903	902	Зарезервировано
904	903	Зарезервировано
905	904	Зарезервировано
906	905	Зарезервировано
907	906	Зарезервировано
908	907	Зарезервировано
909	908	Зарезервировано
910	909	Зарезервировано
911	910	Зарезервировано
912	911	Зарезервировано
913	912	Зарезервировано
914	913	Зарезервировано
915	914	Зарезервировано
916	915	Зарезервировано
917	916	Зарезервировано
918	917	Зарезервировано
919	918	Зарезервировано
920	919	Зарезервировано
921	920	Зарезервировано
922	921	Зарезервировано
923	922	Зарезервировано
924	923	Зарезервировано
925	924	Зарезервировано
926	925	Зарезервировано
927	926	Зарезервировано
928	927	Зарезервировано
929	928	Зарезервировано
930	929	Зарезервировано
931	930	Зарезервировано
932	931	Зарезервировано
933	932	Зарезервировано
934	933	Зарезервировано
935	934	Зарезервировано
936	935	Зарезервировано
937	936	Зарезервировано
938	937	Зарезервировано
939	938	Зарезервировано
940	939	Зарезервировано
941	940	Зарезервировано
942	941	Зарезервировано
943	942	Зарезервировано
944	943	Зарезервировано
945	944	Зарезервировано
946	945	Зарезервировано
947	946	Зарезервировано
948	947	Зарезервировано
949	948	Зарезервировано
950	949	Зарезервировано
951	950	Зарезервировано
952	951	Зарезервировано
953	952	Зарезервировано
954	953	Зарезервировано
955	954	Зарезервировано
956	955	Зарезервировано
957	956	Зарезервировано
958	957	Зарезервировано
959	958	Зарезервировано
960	959	Зарезервировано
961	960	Зарезервировано
962	961	Зарезервировано
963	962	Зарезервировано
964	963	Зарезервировано
965	964	Зарезервировано
966	965	Зарезервировано
967	966	Зарезервировано
968	967	Зарезервировано
969	968	Зарезервировано
970	969	Зарезервировано
971	970	Зарезервировано
972	971	Зарезервировано
973	972	Зарезервировано
974	973	Зарезервировано
975	974	Зарезервировано
976	975	Зарезервировано
977	976	Зарезервировано
978	977	Зарезервировано
979	978	Зарезервировано
980	979	Зарезервировано
981	980	Зарезервировано
982	981	Зарезервировано
983	982	Зарезервировано
984	983	Зарезервировано
985	984	Зарезервировано
986	985	Зарезервировано
987	986	Зарезервировано
988	987	Зарезервировано
989	988	Зарезервировано
990	989	Зарезервировано
991	990	Зарезервировано
992	991	Зарезервировано
993	992	Зарезервировано
994	993	Зарезервировано
995	994	Зарезервировано
996	995	Зарезервировано
997	996	Зарезервировано
998	997	Зарезервировано
999	998	Зарезервировано
1000	999	Зарезервировано
1001	1000	Зарезервировано
1002	1001	Зарезервировано
1003	1002	Зарезервировано
1004	1003	Зарезервировано
1005	1004	Зарезервировано
1006	1005	Зарезервировано
1007	1006	Зарезервировано
1008	1007	Зарезервировано
1009	1008	Зарезервировано
1010	1009	Зарезервировано
1011	1010	Зарезервировано
1012	1011	Зарезервировано
1013	1012	Зарезервировано
1014	1013	Зарезервировано
1015	1014	Зарезервировано
1016	1015	Зарезервировано
1017	1016	Зарезервировано
1018	1017	Зарезервировано
1019	1018	Зарезервировано
1020	1019	Зарезервировано
1021	1020	Зарезервировано
1022	1021	Зарезервировано
1023	1022	Зарезервировано
1024	1023	Отсутствующее значение
\.


--
-- Name: bufr_code_020063_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020063_seq', 1024, true);


--
-- Data for Name: bufr_code_020071; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020071 (id, code, position_accuracy, repeat_speed) FROM stdin;
1	0	Без оценки	Без оценки
2	1	Менее 50 км	менее 1 в секунду
3	2	Между 50 и 200 км	менее 1 в секунду
4	3	Более 200 км	менее 1 в секунду
5	4	Менее 50 км	1 или более в секунду
6	5	Между 50 и 200 км	1 или более в секунду
7	6	Более 200 км	1 или более в секунду
8	7	Менее 50 км	Скорость настолько велика, что невозможно посчитать число
9	8	Между 50 и 200 км	Скорость настолько велика, что невозможно посчитать число
10	9	Более 200 км	Скорость настолько велика, что невозможно посчитать число
11	10	Зарезервировано	\N
12	11	Зарезервировано	\N
13	12	Зарезервировано	\N
14	13	Зарезервировано	\N
15	14	Зарезервировано	\N
16	15	Отсутствующее значение	\N
\.


--
-- Name: bufr_code_020071_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020071_seq', 16, true);


--
-- Data for Name: bufr_code_020085; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020085 (id, code, description) FROM stdin;
1	0	Открыта (CLRD//)
2	1	Все взлетно-посадочные полосы закрыты (SNOCLO)
3	2	Зарезервировано
4	3	Зарезервировано
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_020085_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020085_seq', 16, true);


--
-- Data for Name: bufr_code_020086; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020086 (id, code, description) FROM stdin;
1	0	Отсутствуют, сухо
2	1	Сыро
3	2	Влажно с участками воды
4	3	Покрытие изморозью и инеем (высота обычно менее 1 мм)
5	4	Сухой снег
6	5	Влажный снег
7	6	Слякоть
8	7	Лед
9	8	Уплотненный или укатанный снег
10	9	Замерзшие ямы или бугры
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствует или не сообщается (например, вследствие проводимой очистки ВПП)
\.


--
-- Name: bufr_code_020086_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020086_seq', 16, true);


--
-- Data for Name: bufr_code_020087; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020087 (id, code, description) FROM stdin;
1	0	Зарезервировано
2	1	Покрыто менее 10 % взлетно-посадочной полосы
3	2	Покрыто 11–25 % взлетно-посадочной полосы
4	3	Зарезервировано
5	4	Зарезервировано
6	5	Покрыто 25–50 % взлетно-посадочной полосы
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Покрыто 51–100 % взлетно-посадочной полосы
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствует или не сообщается (например, вследствие проводимой очистки ВПП)
\.


--
-- Name: bufr_code_020087_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020087_seq', 16, true);


--
-- Data for Name: bufr_code_020089; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020089 (id, code, description) FROM stdin;
1	0	0,00
2	1	0,01
3	2	0,02…0,88
4	3	0,02…0,88
5	4	0,02…0,88
6	5	0,02…0,88
7	6	0,02…0,88
8	7	0,02…0,88
9	8	0,02…0,88
10	9	0,02…0,88
11	10	0,02…0,88
12	11	0,02…0,88
13	12	0,02…0,88
14	13	0,02…0,88
15	14	0,02…0,88
16	15	0,02…0,88
17	16	0,02…0,88
18	17	0,02…0,88
19	18	0,02…0,88
20	19	0,02…0,88
21	20	0,02…0,88
22	21	0,02…0,88
23	22	0,02…0,88
24	23	0,02…0,88
25	24	0,02…0,88
26	25	0,02…0,88
27	26	0,02…0,88
28	27	0,02…0,88
29	28	0,02…0,88
30	29	0,02…0,88
31	30	0,02…0,88
32	31	0,02…0,88
33	32	0,02…0,88
34	33	0,02…0,88
35	34	0,02…0,88
36	35	0,02…0,88
37	36	0,02…0,88
38	37	0,02…0,88
39	38	0,02…0,88
40	39	0,02…0,88
41	40	0,02…0,88
42	41	0,02…0,88
43	42	0,02…0,88
44	43	0,02…0,88
45	44	0,02…0,88
46	45	0,02…0,88
47	46	0,02…0,88
48	47	0,02…0,88
49	48	0,02…0,88
50	49	0,02…0,88
51	50	0,02…0,88
52	51	0,02…0,88
53	52	0,02…0,88
54	53	0,02…0,88
55	54	0,02…0,88
56	55	0,02…0,88
57	56	0,02…0,88
58	57	0,02…0,88
59	58	0,02…0,88
60	59	0,02…0,88
61	60	0,02…0,88
62	61	0,02…0,88
63	62	0,02…0,88
64	63	0,02…0,88
65	64	0,02…0,88
66	65	0,02…0,88
67	66	0,02…0,88
68	67	0,02…0,88
69	68	0,02…0,88
70	69	0,02…0,88
71	70	0,02…0,88
72	71	0,02…0,88
73	72	0,02…0,88
74	73	0,02…0,88
75	74	0,02…0,88
76	75	0,02…0,88
77	76	0,02…0,88
78	77	0,02…0,88
79	78	0,02…0,88
80	79	0,02…0,88
81	80	0,02…0,88
82	81	0,02…0,88
83	82	0,02…0,88
84	83	0,02…0,88
85	84	0,02…0,88
86	85	0,02…0,88
87	86	0,02…0,88
88	87	0,02…0,88
89	88	0,02…0,88
90	89	0,89
91	90	0,90
92	91	Эффективность торможения плохая
93	92	Эффективность торможения от средней до плохой
94	93	Эффективность торможения средняя
95	94	Эффективность торможения от средней до хорошей
96	95	Эффективность торможения хорошая
97	96	Зарезервировано
98	97	Зарезервировано
99	98	Зарезервировано
100	99	Ненадежная
101	100	Зарезервировано
102	101	Зарезервировано
103	102	Зарезервировано
104	103	Зарезервировано
105	104	Зарезервировано
106	105	Зарезервировано
107	106	Зарезервировано
108	107	Зарезервировано
109	108	Зарезервировано
110	109	Зарезервировано
111	110	Зарезервировано
112	111	Зарезервировано
113	112	Зарезервировано
114	113	Зарезервировано
115	114	Зарезервировано
116	115	Зарезервировано
117	116	Зарезервировано
118	117	Зарезервировано
119	118	Зарезервировано
120	119	Зарезервировано
121	120	Зарезервировано
122	121	Зарезервировано
123	122	Зарезервировано
124	123	Зарезервировано
125	124	Зарезервировано
126	125	Зарезервировано
127	126	Зарезервировано
128	127	Отсутствует, не сообщается и/или взлетно-посадочная полоса не в эксплуатационном состоянии
\.


--
-- Name: bufr_code_020089_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020089_seq', 128, true);


--
-- Data for Name: bufr_code_020090; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020090 (id, code, description) FROM stdin;
1	0	Зарезервирована
2	1	Перламутровые облака
3	2	Серебристые облака
4	3	Облака, образовавшиеся от водопадов
5	4	Облака, образовавшиеся в результате пожаров
6	5	Облака, образовавшиеся в результате извержений вулканов
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_020090_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020090_seq', 16, true);


--
-- Data for Name: bufr_code_020101; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020101 (id, code, description) FROM stdin;
1	0	Зарезервирована
2	1	Schistocerca gregaria
3	2	Locusta migratoria
4	3	Nomadacris septemfasciata
5	4	Oedaleus senegalensis
6	5	Anracridium spp
7	6	Другие саранчовые
8	7	Другие кузнечиковые
9	8	Другие сверчковые
10	9	Spodoptera exempta
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_020101_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020101_seq', 16, true);


--
-- Data for Name: bufr_code_020102; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020102 (id, code, description) FROM stdin;
1	0	Зеленый
2	1	Зеленый и черный
3	2	Черный
4	3	Желтый и черный
5	4	Соломенный/серый
6	5	Розовый
7	6	Темно-красный/коричневый
8	7	Красно-желтый
9	8	Желтый
10	9	Прочий
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_020102_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020102_seq', 16, true);


--
-- Data for Name: bufr_code_020103; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020103 (id, code, description) FROM stdin;
1	0	Прыгающие насекомые (нимфы, личинки), стадия 1
2	1	Прыгающие насекомые (нимфы, личинки), стадия 2 или смешанные 1 и 2 стадии развития
3	2	Прыгающие насекомые (нимфы, личинки), стадия 3 или смешанные 2 и 3 стадии развития
4	3	Прыгающие насекомые (нимфы, личинки), стадия 4 или смешанные 3 и 4 стадии развития
5	4	Прыгающие насекомые (нимфы, личинки), стадия 5 или смешанные 4 и 5 стадии развития
6	5	Прыгающие насекомые (нимфы, личинки), смешанные стадии, все или многие стадии
7	6	Молодая саранча (крылышки слишком мягкие для устойчивого полета)
8	7	Незрелая взрослая саранча
9	8	Смешанная по степени зрелости взрослая саранча
10	9	Зрелая взрослая саранча
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_020103_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020103_seq', 16, true);


--
-- Data for Name: bufr_code_020104; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020104 (id, code, description) FROM stdin;
1	0	Только прыгающие насекомые, главным образом в кулигах или группах
2	1	Крылатая взрослая саранча на удалении более 10 километров от точки наблюдений
3	2	Саранча в полете, некоторые экземпляры видны на станции
4	3	Саранча на станции, большая часть на земле
5	4	Саранча, часть на земле и часть в полете на высоте менее 10 метров
6	5	Саранча, часть на земле и часть в полете на высоте более 10 метров
7	6	Саранча, в основном в полете на высоте менее 10 метров
8	7	Саранча, в основном в полете на высоте более 10 метров
9	8	Саранча, повсюду наносящая значительные повреждения растительности; работ по ее истреблению не проводится
10	9	Саранча, повсюду наносящая значительные повреждения растительности; проводятся работы по ее истреблению
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_020104_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020104_seq', 16, true);


--
-- Data for Name: bufr_code_020105; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020105 (id, code, description) FROM stdin;
1	0	Зарезервировано
2	1	Территория, покрытая отдельными кулигами, площадью < 10 м2
3	2	Территория, покрытая отдельными кулигами, площадью 10 – 100 м2
4	3	Территория, покрытая отдельными кулигами, площадью 100 – 1 000 м2
5	4	Территория, покрытая отдельными кулигами, площадью 1 000 – 10 000 м2
6	5	Территория, покрытая отдельными кулигами, площадью 1 – 10 га
7	6	Территория, покрытая отдельными кулигами, площадью > 10 га
8	7	Территория, покрытая рассеянными кулигами, площадью < 100 км2
9	8	Территория, покрытая рассеянными кулигами, площадью 100 – 1 000 км2
10	9	Территория, покрытая рассеянными кулигами, площадью > 1 000 км2
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_020105_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020105_seq', 16, true);


--
-- Data for Name: bufr_code_020106; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020106 (id, code, description) FROM stdin;
1	0	Зарезервирована
2	1	Редкая плотность стаи (стая саранчи заметна только тогда, когда она находится достаточно близко для определения отдельных особей саранчи)
3	2	Средняя плотность стаи
4	3	Плотная стая (плохо различимы близко расположенные предметы, например, деревья)
5	4	Различимы отдельные прыгающие насекомые
6	5	Рассеянные прыгающие насекомые, одновременно можно видеть несколько особей
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_020106_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020106_seq', 16, true);


--
-- Data for Name: bufr_code_020107; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020107 (id, code, description) FROM stdin;
1	0	Зарезервирована
2	1	В основном в направлении СВ
3	2	В основном в направлении В
4	3	В основном в направлении ЮВ
5	4	В основном в направлении Ю
6	5	В основном в направлении ЮЗ
7	6	В основном в направлении З
8	7	В основном в направлении СЗ
9	8	В основном в направлении С
10	9	Конкретное направление определить невозможно
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_020107_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020107_seq', 16, true);


--
-- Data for Name: bufr_code_020108; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020108 (id, code, description) FROM stdin;
1	0	Земля без растительности
2	1	Сухая почва, наличие немногих изолированных кустарников
3	2	Редкая растительность (начало вегетации)
4	3	Плотная растительность (начало вегетации)
5	4	Редкая растительность (в стадии роста)
6	5	Плотная растительность (в стадии роста)
7	6	Редкая растительность в стадии цветения
8	7	Плотная растительность в стадии цветения
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_020108_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020108_seq', 16, true);


--
-- Data for Name: bufr_code_020119; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020119 (id, code, description) FROM stdin;
1	0	Не определено
2	1	Положительная
3	2	Отрицательная
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_020119_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020119_seq', 4, true);


--
-- Data for Name: bufr_code_020124; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020124 (id, code, description) FROM stdin;
1	0	Не определено
2	1	Разряд молнии
3	2	Вспышка молнии при визуальном наблюдении или если разрешающая способность оборудования недостаточна для регистрации разряда молнии
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_020124_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020124_seq', 4, true);


--
-- Data for Name: bufr_code_020136; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_020136 (id, code, description) FROM stdin;
1	0	Отдельные кучевые плоские и/или кучевые средние облака
2	1	Многочисленные кучевые плоские и/или кучевые средние облака
3	2	Отдельные мощные кучевые облака
4	3	Многочисленные мощные кучевые облака вертикального развития
5	4	Отдельные кучево-дождевые облака
6	5	Многочисленные кучево-дождевые облака
7	6	Отдельные кучевые и кучево-дождевые облака
8	7	Многочисленные кучевые и кучево-дождевые облака
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервирован
12	11	Отдельные формирующиеся орографические облака, облачные шапки, наковальни
13	12	Отдельные орографические облака, облачные шапки, наковальни; изменений не происходит
14	13	Отдельные рассеивающиеся орографические облака, облачные шапки, наковальни
15	14	Нерегулярные формирующиеся гряды орографических облаков, феновые гряды и т. п.
16	15	Нерегулярные гряды орографических облаков, феновые гряды и т. п.; изменений не происходит
17	16	Нерегулярные рассеивающиеся гряды орографических облаков, феновые гряды и т. п.
18	17	Плотный формирующийся слой орографических облаков, феновая гряда и т. п.
19	18	Плотный слой орографических облаков, феновая гряда и т. п.; изменений не происходит
20	19	Плотный рассеивающийся слой орографических облаков, феновая гряда и т. п.
21	20	Все горы открыты, наблюдается лишь небольшое количество облаков
22	21	Горы частично покрыты отдельными облаками (можно видеть не более половины всехвершин)
23	22	Все горные склоны закрыты, вершины и перевалы свободны
24	23	Горы открыты со стороны наблюдателя (наблюдается лишь небольшое количество облаков), но непрерывная стена облаков имеется на другой стороне
25	24	Облака находятся низко над горами, но все склоны и горы открыты (лишь небольшое количество облаков имеется на склонах)
26	25	Облака низко над горами, вершины частично покрыты следами выпадающих осадков или облаками
27	26	Все вершины закрыты облаками, но перевалы открыты; склоны или открыты, или закрыты
28	27	Горы в основном закрыты, но некоторые вершины свободны от облаков; склоны полностью или частично закрыты
29	28	Все вершины, перевалы и склоны закрыты
30	29	Горы нельзя видеть из-за темноты, тумана, снегопада, дождя и т. п.
31	30	Зарезервировано
32	31	Зарезервировано
33	32	Зарезервировано
34	33	Зарезервировано
35	34	Зарезервировано
36	35	Непостоянные конденсационные следы
37	36	Постоянные конденсационные следы, покрывающие менее 1/8 части неба
38	37	Постоянные конденсационные следы, покрывающие 1/8 часть неба
39	38	Постоянные конденсационные следы, покрывающие 2/8 части неба
40	39	Постоянные конденсационные следы, покрывающие 3/8 или более частей неба
41	40	Облаков или дымки с более высокого уровня не наблюдается
42	41	Дымка, выше чисто
43	42	Клочья тумана
44	43	Слой легкого тумана
45	44	Слой плотного тумана
46	45	Некоторое количество изолированных облаков
47	46	Изолированные облака и ниже — туман
48	47	Множество изолированных облаков
49	48	Облачное море
50	49	Плохая видимость, препятствующая наблюдению нижележащего пространства
51	50	Зарезервировано
52	51	Зарезервировано
53	52	Зарезервировано
54	53	Зарезервировано
55	54	Зарезервировано
56	55	Зарезервировано
57	56	Зарезервировано
58	57	Зарезервировано
59	58	Зарезервировано
60	59	Зарезервировано
61	60	Зарезервировано
62	61	Зарезервировано
63	62	Зарезервировано
64	63	Зарезервировано
65	64	Зарезервировано
66	65	Зарезервировано
67	66	Зарезервировано
68	67	Зарезервировано
69	68	Зарезервировано
70	69	Зарезервировано
71	70	Зарезервировано
72	71	Зарезервировано
73	72	Зарезервировано
74	73	Зарезервировано
75	74	Зарезервировано
76	75	Зарезервировано
77	76	Зарезервировано
78	77	Зарезервировано
79	78	Зарезервировано
80	79	Зарезервировано
81	80	Зарезервировано
82	81	Зарезервировано
83	82	Зарезервировано
84	83	Зарезервировано
85	84	Зарезервировано
86	85	Зарезервировано
87	86	Зарезервировано
88	87	Зарезервировано
89	88	Зарезервировано
90	89	Зарезервировано
91	90	Зарезервировано
92	91	Зарезервировано
93	92	Зарезервировано
94	93	Зарезервировано
95	94	Зарезервировано
96	95	Зарезервировано
97	96	Зарезервировано
98	97	Зарезервировано
99	98	Зарезервировано
100	99	Зарезервировано
101	100	Зарезервировано
102	101	Зарезервировано
103	102	Зарезервировано
104	103	Зарезервировано
105	104	Зарезервировано
106	105	Зарезервировано
107	106	Зарезервировано
108	107	Зарезервировано
109	108	Зарезервировано
110	109	Зарезервировано
111	110	Зарезервировано
112	111	Зарезервировано
113	112	Зарезервировано
114	113	Зарезервировано
115	114	Зарезервировано
116	115	Зарезервировано
117	116	Зарезервировано
118	117	Зарезервировано
119	118	Зарезервировано
120	119	Зарезервировано
121	120	Зарезервировано
122	121	Зарезервировано
123	122	Зарезервировано
124	123	Зарезервировано
125	124	Зарезервировано
126	125	Зарезервировано
127	126	Зарезервировано
128	127	Зарезервировано
129	128	Зарезервировано
130	129	Зарезервировано
131	130	Зарезервировано
132	131	Зарезервировано
133	132	Зарезервировано
134	133	Зарезервировано
135	134	Зарезервировано
136	135	Зарезервировано
137	136	Зарезервировано
138	137	Зарезервировано
139	138	Зарезервировано
140	139	Зарезервировано
141	140	Зарезервировано
142	141	Зарезервировано
143	142	Зарезервировано
144	143	Зарезервировано
145	144	Зарезервировано
146	145	Зарезервировано
147	146	Зарезервировано
148	147	Зарезервировано
149	148	Зарезервировано
150	149	Зарезервировано
151	150	Зарезервировано
152	151	Зарезервировано
153	152	Зарезервировано
154	153	Зарезервировано
155	154	Зарезервировано
156	155	Зарезервировано
157	156	Зарезервировано
158	157	Зарезервировано
159	158	Зарезервировано
160	159	Зарезервировано
161	160	Зарезервировано
162	161	Зарезервировано
163	162	Зарезервировано
164	163	Зарезервировано
165	164	Зарезервировано
166	165	Зарезервировано
167	166	Зарезервировано
168	167	Зарезервировано
169	168	Зарезервировано
170	169	Зарезервировано
171	170	Зарезервировано
172	171	Зарезервировано
173	172	Зарезервировано
174	173	Зарезервировано
175	174	Зарезервировано
176	175	Зарезервировано
177	176	Зарезервировано
178	177	Зарезервировано
179	178	Зарезервировано
180	179	Зарезервировано
181	180	Зарезервировано
182	181	Зарезервировано
183	182	Зарезервировано
184	183	Зарезервировано
185	184	Зарезервировано
186	185	Зарезервировано
187	186	Зарезервировано
188	187	Зарезервировано
189	188	Зарезервировано
190	189	Зарезервировано
191	190	Зарезервировано
192	191	Зарезервировано
193	192	Зарезервировано
194	193	Зарезервировано
195	194	Зарезервировано
196	195	Зарезервировано
197	196	Зарезервировано
198	197	Зарезервировано
199	198	Зарезервировано
200	199	Зарезервировано
201	200	Зарезервировано
202	201	Зарезервировано
203	202	Зарезервировано
204	203	Зарезервировано
205	204	Зарезервировано
206	205	Зарезервировано
207	206	Зарезервировано
208	207	Зарезервировано
209	208	Зарезервировано
210	209	Зарезервировано
211	210	Зарезервировано
212	211	Зарезервировано
213	212	Зарезервировано
214	213	Зарезервировано
215	214	Зарезервировано
216	215	Зарезервировано
217	216	Зарезервировано
218	217	Зарезервировано
219	218	Зарезервировано
220	219	Зарезервировано
221	220	Зарезервировано
222	221	Зарезервировано
223	222	Зарезервировано
224	223	Зарезервировано
225	224	Зарезервировано
226	225	Зарезервировано
227	226	Зарезервировано
228	227	Зарезервировано
229	228	Зарезервировано
230	229	Зарезервировано
231	230	Зарезервировано
232	231	Зарезервировано
233	232	Зарезервировано
234	233	Зарезервировано
235	234	Зарезервировано
236	235	Зарезервировано
237	236	Зарезервировано
238	237	Зарезервировано
239	238	Зарезервировано
240	239	Зарезервировано
241	240	Зарезервировано
242	241	Зарезервировано
243	242	Зарезервировано
244	243	Зарезервировано
245	244	Зарезервировано
246	245	Зарезервировано
247	246	Зарезервировано
248	247	Зарезервировано
249	248	Зарезервировано
250	249	Зарезервировано
251	250	Зарезервировано
252	251	Зарезервировано
253	252	Зарезервировано
254	253	Зарезервировано
255	254	Зарезервировано
256	255	Зарезервировано
257	256	Зарезервировано
258	257	Зарезервировано
259	258	Зарезервировано
260	259	Зарезервировано
261	260	Зарезервировано
262	261	Зарезервировано
263	262	Зарезервировано
264	263	Зарезервировано
265	264	Зарезервировано
266	265	Зарезервировано
267	266	Зарезервировано
268	267	Зарезервировано
269	268	Зарезервировано
270	269	Зарезервировано
271	270	Зарезервировано
272	271	Зарезервировано
273	272	Зарезервировано
274	273	Зарезервировано
275	274	Зарезервировано
276	275	Зарезервировано
277	276	Зарезервировано
278	277	Зарезервировано
279	278	Зарезервировано
280	279	Зарезервировано
281	280	Зарезервировано
282	281	Зарезервировано
283	282	Зарезервировано
284	283	Зарезервировано
285	284	Зарезервировано
286	285	Зарезервировано
287	286	Зарезервировано
288	287	Зарезервировано
289	288	Зарезервировано
290	289	Зарезервировано
291	290	Зарезервировано
292	291	Зарезервировано
293	292	Зарезервировано
294	293	Зарезервировано
295	294	Зарезервировано
296	295	Зарезервировано
297	296	Зарезервировано
298	297	Зарезервировано
299	298	Зарезервировано
300	299	Зарезервировано
301	300	Зарезервировано
302	301	Зарезервировано
303	302	Зарезервировано
304	303	Зарезервировано
305	304	Зарезервировано
306	305	Зарезервировано
307	306	Зарезервировано
308	307	Зарезервировано
309	308	Зарезервировано
310	309	Зарезервировано
311	310	Зарезервировано
312	311	Зарезервировано
313	312	Зарезервировано
314	313	Зарезервировано
315	314	Зарезервировано
316	315	Зарезервировано
317	316	Зарезервировано
318	317	Зарезервировано
319	318	Зарезервировано
320	319	Зарезервировано
321	320	Зарезервировано
322	321	Зарезервировано
323	322	Зарезервировано
324	323	Зарезервировано
325	324	Зарезервировано
326	325	Зарезервировано
327	326	Зарезервировано
328	327	Зарезервировано
329	328	Зарезервировано
330	329	Зарезервировано
331	330	Зарезервировано
332	331	Зарезервировано
333	332	Зарезервировано
334	333	Зарезервировано
335	334	Зарезервировано
336	335	Зарезервировано
337	336	Зарезервировано
338	337	Зарезервировано
339	338	Зарезервировано
340	339	Зарезервировано
341	340	Зарезервировано
342	341	Зарезервировано
343	342	Зарезервировано
344	343	Зарезервировано
345	344	Зарезервировано
346	345	Зарезервировано
347	346	Зарезервировано
348	347	Зарезервировано
349	348	Зарезервировано
350	349	Зарезервировано
351	350	Зарезервировано
352	351	Зарезервировано
353	352	Зарезервировано
354	353	Зарезервировано
355	354	Зарезервировано
356	355	Зарезервировано
357	356	Зарезервировано
358	357	Зарезервировано
359	358	Зарезервировано
360	359	Зарезервировано
361	360	Зарезервировано
362	361	Зарезервировано
363	362	Зарезервировано
364	363	Зарезервировано
365	364	Зарезервировано
366	365	Зарезервировано
367	366	Зарезервировано
368	367	Зарезервировано
369	368	Зарезервировано
370	369	Зарезервировано
371	370	Зарезервировано
372	371	Зарезервировано
373	372	Зарезервировано
374	373	Зарезервировано
375	374	Зарезервировано
376	375	Зарезервировано
377	376	Зарезервировано
378	377	Зарезервировано
379	378	Зарезервировано
380	379	Зарезервировано
381	380	Зарезервировано
382	381	Зарезервировано
383	382	Зарезервировано
384	383	Зарезервировано
385	384	Зарезервировано
386	385	Зарезервировано
387	386	Зарезервировано
388	387	Зарезервировано
389	388	Зарезервировано
390	389	Зарезервировано
391	390	Зарезервировано
392	391	Зарезервировано
393	392	Зарезервировано
394	393	Зарезервировано
395	394	Зарезервировано
396	395	Зарезервировано
397	396	Зарезервировано
398	397	Зарезервировано
399	398	Зарезервировано
400	399	Зарезервировано
401	400	Зарезервировано
402	401	Зарезервировано
403	402	Зарезервировано
404	403	Зарезервировано
405	404	Зарезервировано
406	405	Зарезервировано
407	406	Зарезервировано
408	407	Зарезервировано
409	408	Зарезервировано
410	409	Зарезервировано
411	410	Зарезервировано
412	411	Зарезервировано
413	412	Зарезервировано
414	413	Зарезервировано
415	414	Зарезервировано
416	415	Зарезервировано
417	416	Зарезервировано
418	417	Зарезервировано
419	418	Зарезервировано
420	419	Зарезервировано
421	420	Зарезервировано
422	421	Зарезервировано
423	422	Зарезервировано
424	423	Зарезервировано
425	424	Зарезервировано
426	425	Зарезервировано
427	426	Зарезервировано
428	427	Зарезервировано
429	428	Зарезервировано
430	429	Зарезервировано
431	430	Зарезервировано
432	431	Зарезервировано
433	432	Зарезервировано
434	433	Зарезервировано
435	434	Зарезервировано
436	435	Зарезервировано
437	436	Зарезервировано
438	437	Зарезервировано
439	438	Зарезервировано
440	439	Зарезервировано
441	440	Зарезервировано
442	441	Зарезервировано
443	442	Зарезервировано
444	443	Зарезервировано
445	444	Зарезервировано
446	445	Зарезервировано
447	446	Зарезервировано
448	447	Зарезервировано
449	448	Зарезервировано
450	449	Зарезервировано
451	450	Зарезервировано
452	451	Зарезервировано
453	452	Зарезервировано
454	453	Зарезервировано
455	454	Зарезервировано
456	455	Зарезервировано
457	456	Зарезервировано
458	457	Зарезервировано
459	458	Зарезервировано
460	459	Зарезервировано
461	460	Зарезервировано
462	461	Зарезервировано
463	462	Зарезервировано
464	463	Зарезервировано
465	464	Зарезервировано
466	465	Зарезервировано
467	466	Зарезервировано
468	467	Зарезервировано
469	468	Зарезервировано
470	469	Зарезервировано
471	470	Зарезервировано
472	471	Зарезервировано
473	472	Зарезервировано
474	473	Зарезервировано
475	474	Зарезервировано
476	475	Зарезервировано
477	476	Зарезервировано
478	477	Зарезервировано
479	478	Зарезервировано
480	479	Зарезервировано
481	480	Зарезервировано
482	481	Зарезервировано
483	482	Зарезервировано
484	483	Зарезервировано
485	484	Зарезервировано
486	485	Зарезервировано
487	486	Зарезервировано
488	487	Зарезервировано
489	488	Зарезервировано
490	489	Зарезервировано
491	490	Зарезервировано
492	491	Зарезервировано
493	492	Зарезервировано
494	493	Зарезервировано
495	494	Зарезервировано
496	495	Зарезервировано
497	496	Зарезервировано
498	497	Зарезервировано
499	498	Зарезервировано
500	499	Зарезервировано
501	500	Зарезервировано
502	501	Зарезервировано
503	502	Зарезервировано
504	503	Зарезервировано
505	504	Зарезервировано
506	505	Зарезервировано
507	506	Зарезервировано
508	507	Зарезервировано
509	508	Зарезервировано
510	509	Зарезервировано
511	510	Зарезервировано
512	511	Отсутствующее значение
\.


--
-- Name: bufr_code_020136_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_020136_seq', 512, true);


--
-- Data for Name: bufr_code_021022; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_021022 (id, code, description) FROM stdin;
1	0	Отсутствие радиоэхо
2	1	Облачность верхнего и среднего яруса
3	2	Слоистообразная облачность
4	3	Осадки слабые
5	4	Осадки умеренные
6	5	Осадки сильные
7	6	Кучевая облачность
8	7	Ливень слабый
9	8	Ливень умеренный
10	9	Ливень сильный
11	10	Гроза с вероятностью 30-70%
12	11	Гроза с вероятностью 71-90%
13	12	Гроза с вероятностью > 90%
14	13	Град слабый
15	14	Град умеренный
16	15	Град сильный
17	16	Шквал слабый
18	17	Шквал умеренный
19	18	Шквал сильный
20	19	Торнадо (смерч)
21	31	Отсутствующее значение
\.


--
-- Name: bufr_code_021022_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_021022_seq', 1, false);


--
-- Data for Name: bufr_code_021066; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_021066 (id, bit_number, description) FROM stdin;
1	1	Обрабатывающие приборы не работают
2	2	Неисправность приборов
3	3	Код частоты повторения импульсов (ЧПИ) изменен во время формирования изображения
4	4	Окно выборки изменено во время формирования изображения
5	5	Gain изменен во время формирования изображения
6	6	Опорный сигнал Chirp превосходит установленную величину
7	7	Срединное отклонение и стандартное отклонение вводимых данных, совпадающих по фазеи с отклонением в 90°, вне диапазона
8	8	Достоверность центроида Доплера > величины MMCC
9	9	Абсолютная величина центроида Доплера > ЧПИ/2
10	10	Достоверность неопределенности Доплера < величины MMCC
11	11	Срединное отклонение и стандартное отклонение выходных данных = < величины MMCC
12	0	Отсутствующее значение
\.


--
-- Name: bufr_code_021066_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_021066_seq', 12, true);


--
-- Data for Name: bufr_code_021067; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_021067 (id, bit_number, description) FROM stdin;
1	1	Расчет до луча отсутствует
2	2	Расчет в середине луча отсутствует
3	3	Расчет после луча отсутствует
4	4	Обнаружено отклонение до луча
5	5	Обнаружено отклонение в середине луча
6	6	Обнаружено отклонение после луча
7	7	Любое содержание шумов луча больше или равно пороговому значению
8	8	Поверхность земли (любой участок суши, находящийся в подспутниковой ячейке)
9	9	Удаление неиспользованной автономной неопределенности
10	10	Метеорологическая справочная информация не использована
11	11	Минимальный остаток превышает пороговое значение
12	12	Обнаружена ошибка контроля кадра
13	0	Отсутствующее значение
\.


--
-- Name: bufr_code_021067_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_021067_seq', 13, true);


--
-- Data for Name: bufr_code_021068; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_021068 (id, bit_number, description) FROM stdin;
1	1	Стандартное отклонение скорости ветра за предел ММСС
2	2	Стандартное отклонение высоты значительной волны за предел ММСС
3	3	Стандартное отклонение высоты за предел ММСС
4	4	Максимальные величины (среднее значение) за пределами ММСС
5	5	Обнаруженная ошибка проверки кадра
6	6	Неосуществленная поправка константы времени кривой высоты времени
7	7	Недостаточное количество измерений (N < 10)
8	0	Отсутствующее значение
\.


--
-- Name: bufr_code_021068_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_021068_seq', 8, true);


--
-- Data for Name: bufr_code_021069; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_021069 (id, bit_number, description) FROM stdin;
1	1	Канал 12,0 мкм имеется в исходных данных
2	2	Канал 11,0 мкм имеется в исходных данных
3	3	Канал 3,7 мкм имеется в исходных данных
4	4	Канал 1,6 мкм имеется в исходных данных
5	5	Идентификация облаков с использованием теста облака посредством гистограммы коэффициента отражения 1,6 мкм
6	6	Динамический порог, используемый для теста облака посредством гистограммы коэффициента отражения 1,6 мкм
7	7	Солнечное отражение, обнаруженное посредством теста облаков с коэффициентом отражения 1,6 мкм
8	8	Канал 3,7 мкм, используемый для поиска данных о температуре поверхности моря
9	9	Дневные данные, используемые для расчета температуры поверхности моря (ночные данные в случае нуля)
10	0	Отсутствующее значение
\.


--
-- Name: bufr_code_021069_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_021069_seq', 10, true);


--
-- Data for Name: bufr_code_021070; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_021070 (id, bit_number, value) FROM stdin;
1	1	Ячейка 1: ТПМ только по надирному изображениюc использованием канала 3,7 микрона
2	2	Ячейка 2: ТПМ только по надирному изображению c использованием канала 3,7 микрона
3	3	Ячейка 3: ТПМ только по надирному изображению c использованием канала 3,7 микрона
4	4	Ячейка 4: ТПМ только по надирному изображению c использованием канала 3,7 микрона
5	5	Ячейка 5: ТПМ только по надирному изображению c использованием канала 3,7 микрона
6	6	Ячейка 6: ТПМ только по надирному изображению c использованием канала 3,7 микрона
7	7	Ячейка 7: ТПМ только по надирному изображениюc использованием канала 3,7 микрона
8	8	Ячейка 2: ТПМ только по надирному изображениюc использованием канала 3,7 микрона
9	9	Ячейка 9: ТПМ только по надирному изображению c использованием канала 3,7 микрона 10–18 Восстановление ТПМ по двойному изображению с использованием канала 3,7 микрона(один бит на ячейку в 10 угловых минут)
10	10	Ячейка 1: ТПМ по двойному изображениюc использованием канала 3,7 микрона
11	11	Ячейка 2: ТПМ по двойному изображениюc использованием канала 3,7 микрона
12	12	Ячейка 3: ТПМ по двойному изображению c использованием канала 3,7 микрона
13	13	Ячейка 4: ТПМ по двойному изображению c использованием канала 3,7 микрона
14	14	Ячейка 5: ТПМ по двойному изображению c использованием канала 3,7 микрона
15	15	Ячейка 6: ТПМ по двойному изображениюc использованием канала 3,7 микрона
16	16	Ячейка 7: ТПМ по двойному изображениюc использованием канала 3,7 микрона
17	17	Ячейка 8: ТПМ по двойному изображениюc использованием канала 3,7 микрона
18	18	Ячейка 9: ТПМ по двойному изображениюc использованием канала 3,7 микрона
19	19	Надирное изображение содержит данные за светлое время суток (за темное время суток,если равно 0)
20	20	Изображение впереди и по ходу спутника содержит данные за светлое время суток (за темноевремя суток, если равно 0)
21	21	Запись содержит информацию из приборных сканирований, полученных когда для платформыERS не используется режим управления рысканием
22	22	Запись содержит информацию из приборных сканирований, для которых данные о достовер-ности продукции указывают на плохое или неизвестное качество
23	0	Отсутствующее значение
\.


--
-- Name: bufr_code_021070_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_021070_seq', 23, true);


--
-- Data for Name: bufr_code_021072; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_021072 (id, bit_number, description) FROM stdin;
1	1	Коррекция ошибки высоты, применяемая вместо калибровки разомкнутого контура
2	2	Микроволновый зонд, используемый для коррекции тропопаузы
3	3	Коррекция автоматической регулировки усиления, применяемая вместо калибровки разомкнутого контура
4	0	Отсутствующее значение
\.


--
-- Name: bufr_code_021072_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_021072_seq', 4, true);


--
-- Data for Name: bufr_code_021073; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_021073 (id, bit_number, description) FROM stdin;
1	1	Регистрация пустых данных
2	2	Тест
3	3	Калибровка (замкнутый контур)
4	4	BITE
5	5	Получение данных о льде
6	6	Получение данных об океане
7	7	Поиск данных о льде
8	8	Поиск данных об океане
9	0	Отсутствующее значение
\.


--
-- Name: bufr_code_021073_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_021073_seq', 9, true);


--
-- Data for Name: bufr_code_021076; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_021076 (id, code, description) FROM stdin;
1	0	Линейное
2	1	Логарифмическое (основание е)
3	2	Логарифмическое (основание 10)
4	3	Зарезервировано
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_021076_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_021076_seq', 8, true);


--
-- Data for Name: bufr_code_021109; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_021109 (id, bit_number, description) FROM stdin;
1	1	Значение параметра достаточно хорошее для получения параметров ветра
2	2	Плохая разница по азимуту между параметрами сигма-0 для получения значений ветра
3	3	Зарезервировано
4	4	Зарезервировано
5	5	Зарезервировано
6	6	Зарезервировано
7	7	Зарезервировано
8	8	Некоторая часть ячейки с векторами ветра находится над сушей
9	9	Некоторая часть ячейки векторов ветра находится над льдом
10	10	Получение параметра ветра не выполнялось для ячейки векторов ветра
11	11	Сообщаемая скорость ветра превышает 30 м.с-1
12	12	Сообщаемая скорость ветра меньше или равна 3 м.с-1
13	13	Зарезервировано
14	14	Зарезервировано
15	15	Зарезервировано
16	16	Зарезервировано
17	0	Отсутствующее значение
\.


--
-- Name: bufr_code_021109_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_021109_seq', 17, true);


--
-- Data for Name: bufr_code_021115; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_021115 (id, bit_number, description) FROM stdin;
1	1	Измерение сигма-0 непригодно для использования
2	2	Отношение сигнал-шум является низким
3	3	Параметр сигма-0 является отрицательным
4	4	Параметр сигма-0 лежит вне приемлемого интервала
5	5	Качество импульсов скаттерометра неприемлемо
6	6	Алгоритм определения местоположения ячейки сигма-0 не сходится
7	7	Сдвиг частоты лежит вне пределов таблицы фактора x
8	8	Температура спутника находится вне пределов коэффициента калибровки
9	9	Записи высоты были сочтены неприменимыми для данного значения сигма-0
10	10	Интерполированные данные эфемеридов неприемлемы для данного параметра сигма-0
11	11	Зарезервировано
12	12	Зарезервировано
13	13	Зарезервировано
14	14	Зарезервировано
15	15	Зарезервировано
16	16	Зарезервировано
17	0	Отсутствующее значение
\.


--
-- Name: bufr_code_021115_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_021115_seq', 17, true);


--
-- Data for Name: bufr_code_021116; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_021116 (id, bit_number, description) FROM stdin;
1	1	Флаг импульса калибровки/измерения (1)
2	2	Флаг импульса калибровки/измерения (2)
3	3	Луч внешней антенны
4	4	Ячейка параметра сигма-0 находится позади спутника
5	5	Текущий режим (1)
6	6	Текущий режим (2)
7	7	Эффективная ширина пропускного устройства — послойное разрешение (1)
8	8	Эффективная ширина пропускного устройства — послойное разрешение (2)
9	9	Эффективная ширина пропускного устройства — послойное разрешение (3)
10	10	Режим низкого разрешения — данные по целому импульсу
11	11	Электронная подсистема В скаттерометра
12	12	Альтернативная скорость вращения — 19,8 оборотов в минуту
13	13	Защита приемника включена
14	14	Количество слоев на композитный флаг (1)
15	15	Количество слоев на композитный флаг (2)
16	16	Количество слоев на композитный флаг (3)
17	0	Отсутствующее значение
\.


--
-- Name: bufr_code_021116_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_021116_seq', 17, true);


--
-- Data for Name: bufr_code_021119; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_021119 (id, code, description) FROM stdin;
1	0	Зарезервировано
2	1	SASS
3	2	SASS2
4	3	NSCATO
5	4	NSCAT1
6	5	NSCAT2
7	6	QSCAT0
8	7	QSCAT1
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	CMOD1
33	32	CMOD2
34	33	CMOD3
35	34	CMOD4
36	35	CMOD5
37	36	Зарезервировано
38	37	Зарезервировано
39	38	Зарезервировано
40	39	Зарезервировано
41	40	Зарезервировано
42	41	Зарезервировано
43	42	Зарезервировано
44	43	Зарезервировано
45	44	Зарезервировано
46	45	Зарезервировано
47	46	Зарезервировано
48	47	Зарезервировано
49	48	Зарезервировано
50	49	Зарезервировано
51	50	Зарезервировано
52	51	Зарезервировано
53	52	Зарезервировано
54	53	Зарезервировано
55	54	Зарезервировано
56	55	Зарезервировано
57	56	Зарезервировано
58	57	Зарезервировано
59	58	Зарезервировано
60	59	Зарезервировано
61	60	Зарезервировано
62	61	Зарезервировано
63	62	Зарезервировано
64	63	Отсутствующее значение
\.


--
-- Name: bufr_code_021119_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_021119_seq', 64, true);


--
-- Data for Name: bufr_code_021144; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_021144 (id, bit_number, description) FROM stdin;
1	1	Дождь
2	0	Отсутствующее значение
\.


--
-- Name: bufr_code_021144_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_021144_seq', 2, true);


--
-- Data for Name: bufr_code_021150; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_021150 (id, code, description) FROM stdin;
1	0	Данные с одной наземной станции (нет совместного положения)
2	1	Данные со многих наземных станций (данные совместного положения)
3	2	Зарезервировано
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_021150_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_021150_seq', 4, true);


--
-- Data for Name: bufr_code_021155; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_021155 (id, bit_number, description) FROM stdin;
1	1	Значение параметра сигма-0 недостаточно хорошее для получения параметров ветра
2	2	Плохая разница по азимуту между параметрами сигма-0 для получения параметров ветра
3	3	Любое содержание шумов луча больше порогового значения
4	4	Мониторинг продукции не используется
5	5	Флаг мониторинга продукции
6	6	Не удовлетворяет контролю качества КНМИ
7	7	Не удовлетворяет вариационному контролю качества
8	8	Некоторая часть ячейки векторов ветра находится над сушей
9	9	Некоторая часть ячейки ветров ветра находится над льдом
10	10	Получение параметра ветра не выполнялось для ячейки векторов ветра
11	11	Сообщаемая скорость ветра превышает 30 м/с
12	12	Сообщаемая скорость ветра меньше или равна 3 м/с
13	13	Флаг дождя для ячейки векторов ветра непригоден для использования
14	14	Алгоритм флага дождя обнаруживает дождь
15	15	Метеорологическая справочная информация не использовалась
16	16	Данные являются излишними
17	17	Зарезервировано
18	18	Зарезервировано
19	19	Зарезервировано
20	20	Зарезервировано
21	21	Зарезервировано
22	22	Зарезервировано
23	23	Зарезервировано
24	0	Отсутствующее значение
\.


--
-- Name: bufr_code_021155_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_021155_seq', 24, true);


--
-- Data for Name: bufr_code_021158; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_021158 (id, code, description) FROM stdin;
1	0	Приемлемое
2	1	Неприемлемое
3	2	Зарезервировано
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_021158_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_021158_seq', 4, true);


--
-- Data for Name: bufr_code_021159; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_021159 (id, code, description) FROM stdin;
1	0	Хорошая
2	1	Использование возможно
3	2	Плохая
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_021159_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_021159_seq', 4, true);


--
-- Data for Name: bufr_code_021169; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_021169 (id, code, description) FROM stdin;
1	0	Лед отсутствует
2	1	Лед присутствует
3	2	Зарезервировано
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_021169_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_021169_seq', 4, true);


--
-- Data for Name: bufr_code_022056; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_022056 (id, code, description) FROM stdin;
1	0	Профиль, направленный вверх
2	1	Профиль, направленный вниз
3	2	Горизонтальный
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_022056_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_022056_seq', 4, true);


--
-- Data for Name: bufr_code_022060; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_022060 (id, code, description) FROM stdin;
1	0	Плавучий якорь отсоединен
2	1	Плавучий якорь присоединен
3	2	Состояние неизвестно
4	3	Зарезервировано
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_022060_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_022060_seq', 8, true);


--
-- Data for Name: bufr_code_022061; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_022061 (id, code, description, wave_height_min, wave_height_max) FROM stdin;
1	0	Штиль (спокойная поверхность)	0	\N
2	1	Штиль (рябь)	0	0,1
3	2	Небольшое волнение	0,1	0,5
4	3	Слабое волнение	0,5	1,25
5	4	Умеренное волнение	1,25	2,5
6	5	Бурное волнение	2,5	4
7	6	Очень бурное волнение	4	6
8	7	Высокое волнение	6	9
9	8	Очень высокое волнение	9	14
10	9	Исключительно сильное волнение	Свыше 14	\N
11	10	Зарезервировано	\N	\N
12	11	Зарезервировано	\N	\N
13	12	Зарезервировано	\N	\N
14	13	Зарезервировано	\N	\N
15	14	Зарезервировано	\N	\N
16	15	Отсутствующее значение	\N	\N
\.


--
-- Name: bufr_code_022061_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_022061_seq', 16, true);


--
-- Data for Name: bufr_code_022120; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_022120 (id, code, description) FROM stdin;
1	0	Данные хорошего качества
2	1	Максимальный (высокий) предел уровня воды превышен
3	2	Минимальный (низкий) предел уровня воды превышен
4	3	Предел скорости изменения уровня воды превышен
5	4	Единообразный предел уровня воды превышен
6	5	Предел значения сообщенного уровня воды минус значение предсказанного уровня воды превышен
7	6	Значение, сообщенное датчиком первичного уровня воды, минус значение датчика резервного уровня
8	7	Установленный доступ превышенного значения по отношению к предсказанному значению
9	8	Превышенные пределы (сигмы и/или выбросы) параметра обеспечения качества уровня воды
10	9	Температура моря вне предсказанного диапазона
11	10	Неудача многочисленных проверок качества (выше)
12	11	Не осуществлено никакой автоматической проверки уровня воды
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Отсутствующее значение
\.


--
-- Name: bufr_code_022120_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_022120_seq', 32, true);


--
-- Data for Name: bufr_code_022121; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_022121 (id, code, description) FROM stdin;
1	0	Оперативный
2	1	Возможная проблема закупорки или в противном случае ухудшение данных уровня воды
3	2	Возможный перенос нулевой отметки
4	3	Состояние датчика уровня воды неизвестно
5	4	Предполагаемая или известная проблема с датчиком температуры моря
6	5	Многочисленные возможные проблемы (выше)
7	6	Плохие данные — НЕ РАСПРОСТРАНЯТЬ!
8	7	Не осуществлено никакого ручного контроля уровня воды
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Отсутствующее значение
\.


--
-- Name: bufr_code_022121_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_022121_seq', 32, true);


--
-- Data for Name: bufr_code_022122; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_022122 (id, code, description) FROM stdin;
1	0	Данные хорошего качества от всех датчиков
2	1	Направление ветра вне допустимых пределов
3	2	Скорость ветра вне предсказанных пределов
4	3	Барометрическое давление вне предсказанных пределов
5	4	Температура воздуха вне предсказанных пределов
6	5	Многочисленные датчики не прошли проверку контроля качества
7	6	Не осуществлено никакого автоматического контроля метеорологических данных
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Отсутствующее значение
\.


--
-- Name: bufr_code_022122_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_022122_seq', 32, true);


--
-- Data for Name: bufr_code_022123; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_022123 (id, code, description) FROM stdin;
1	0	Оперативный
2	1	Предполагаемая или известная проблема с датчиком ветра
3	2	Предполагаемая или известная проблема с датчиком барометрического давления
4	3	Предполагаемая или известная проблема с датчиком температуры воздуха
5	4	Неизвестное состояние всех датчиков
6	5	Предполагаемые или известные проблемы с многочисленными датчиками
7	6	Плохие данные — НЕ РАСПРОСТРАНЯТЬ!
8	7	Не осуществлено никакого ручного контроля метеорологических данных
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Отсутствующее значение
\.


--
-- Name: bufr_code_022123_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_022123_seq', 32, true);


--
-- Data for Name: bufr_code_022178; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_022178 (id, code, description) FROM stdin;
1	0	Неизвестно
2	1	Спускатель LM-2A, смонтированный на палубе
3	2	Переносной спускатель LM-3A
4	3	Спускатель LM-4A, смонтированный на корпусе
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Автоматический спускатель AL-12 TSK (до 12 спусков)
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Автоматический спускатель SIO XBT (до 6 спусков)
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Автоматический спускатель AOML XBT V6 (до 6 спусков Deep Blue)
32	31	Автоматический спускатель AOML XBT V8.0 (до 8 спусков Deep Blue)
33	32	Автоматический спускатель AOML XBT V8.1 (до 8 спусков Deep Blue и Fast Deep)
34	33	Зарезервировано
35	34	Зарезервировано
36	35	Зарезервировано
37	36	Зарезервировано
38	37	Зарезервировано
39	38	Зарезервировано
40	39	Зарезервировано
41	40	Зарезервировано
42	41	Зарезервировано
43	42	Зарезервировано
44	43	Зарезервировано
45	44	Зарезервировано
46	45	Зарезервировано
47	46	Зарезервировано
48	47	Зарезервировано
49	48	Зарезервировано
50	49	Зарезервировано
51	50	Зарезервировано
52	51	Зарезервировано
53	52	Зарезервировано
54	53	Зарезервировано
55	54	Зарезервировано
56	55	Зарезервировано
57	56	Зарезервировано
58	57	Зарезервировано
59	58	Зарезервировано
60	59	Зарезервировано
61	60	Зарезервировано
62	61	Зарезервировано
63	62	Зарезервировано
64	63	Зарезервировано
65	64	Зарезервировано
66	65	Зарезервировано
67	66	Зарезервировано
68	67	Зарезервировано
69	68	Зарезервировано
70	69	Зарезервировано
71	70	Зарезервировано
72	71	Зарезервировано
73	72	Зарезервировано
74	73	Зарезервировано
75	74	Зарезервировано
76	75	Зарезервировано
77	76	Зарезервировано
78	77	Зарезервировано
79	78	Зарезервировано
80	79	Зарезервировано
81	80	Зарезервировано
82	81	Зарезервировано
83	82	Зарезервировано
84	83	Зарезервировано
85	84	Зарезервировано
86	85	Зарезервировано
87	86	Зарезервировано
88	87	Зарезервировано
89	88	Зарезервировано
90	89	Зарезервировано
91	90	Автоматический спускатель CSIRO Devil
92	91	Зарезервировано
93	92	Зарезервировано
94	93	Зарезервировано
95	94	Зарезервировано
96	95	Зарезервировано
97	96	Зарезервировано
98	97	Зарезервировано
99	98	Зарезервировано
100	99	Зарезервировано
207	206	Зарезервировано
101	100	Автоматический спускатель MFSTEP (Средиземное море)
102	101	Зарезервировано
103	102	Зарезервировано
104	103	Зарезервировано
105	104	Зарезервировано
106	105	Зарезервировано
107	106	Зарезервировано
108	107	Зарезервировано
109	108	Зарезервировано
110	109	Зарезервировано
111	110	Зарезервировано
112	111	Зарезервировано
113	112	Зарезервировано
114	113	Зарезервировано
115	114	Зарезервировано
116	115	Зарезервировано
117	116	Зарезервировано
118	117	Зарезервировано
119	118	Зарезервировано
120	119	Зарезервировано
121	120	Зарезервировано
122	121	Зарезервировано
123	122	Зарезервировано
124	123	Зарезервировано
125	124	Зарезервировано
126	125	Зарезервировано
127	126	Зарезервировано
128	127	Зарезервировано
129	128	Зарезервировано
130	129	Зарезервировано
131	130	Зарезервировано
132	131	Зарезервировано
133	132	Зарезервировано
134	133	Зарезервировано
135	134	Зарезервировано
136	135	Зарезервировано
137	136	Зарезервировано
138	137	Зарезервировано
139	138	Зарезервировано
140	139	Зарезервировано
141	140	Зарезервировано
142	141	Зарезервировано
143	142	Зарезервировано
144	143	Зарезервировано
145	144	Зарезервировано
146	145	Зарезервировано
147	146	Зарезервировано
148	147	Зарезервировано
149	148	Зарезервировано
150	149	Зарезервировано
151	150	Зарезервировано
152	151	Зарезервировано
153	152	Зарезервировано
154	153	Зарезервировано
155	154	Зарезервировано
156	155	Зарезервировано
157	156	Зарезервировано
158	157	Зарезервировано
159	158	Зарезервировано
160	159	Зарезервировано
161	160	Зарезервировано
162	161	Зарезервировано
163	162	Зарезервировано
164	163	Зарезервировано
165	164	Зарезервировано
166	165	Зарезервировано
167	166	Зарезервировано
168	167	Зарезервировано
169	168	Зарезервировано
170	169	Зарезервировано
171	170	Зарезервировано
172	171	Зарезервировано
173	172	Зарезервировано
174	173	Зарезервировано
175	174	Зарезервировано
176	175	Зарезервировано
177	176	Зарезервировано
178	177	Зарезервировано
179	178	Зарезервировано
180	179	Зарезервировано
181	180	Зарезервировано
182	181	Зарезервировано
183	182	Зарезервировано
184	183	Зарезервировано
185	184	Зарезервировано
186	185	Зарезервировано
187	186	Зарезервировано
188	187	Зарезервировано
189	188	Зарезервировано
190	189	Зарезервировано
191	190	Зарезервировано
192	191	Зарезервировано
193	192	Зарезервировано
194	193	Зарезервировано
195	194	Зарезервировано
196	195	Зарезервировано
197	196	Зарезервировано
198	197	Зарезервировано
199	198	Зарезервировано
200	199	Зарезервировано
201	200	Зарезервировано
202	201	Зарезервировано
203	202	Зарезервировано
204	203	Зарезервировано
205	204	Зарезервировано
206	205	Зарезервировано
208	207	Зарезервировано
209	208	Зарезервировано
210	209	Зарезервировано
211	210	Зарезервировано
212	211	Зарезервировано
213	212	Зарезервировано
214	213	Зарезервировано
215	214	Зарезервировано
216	215	Зарезервировано
217	216	Зарезервировано
218	217	Зарезервировано
219	218	Зарезервировано
220	219	Зарезервировано
221	220	Зарезервировано
222	221	Зарезервировано
223	222	Зарезервировано
224	223	Зарезервировано
225	224	Зарезервировано
226	225	Зарезервировано
227	226	Зарезервировано
228	227	Зарезервировано
229	228	Зарезервировано
230	229	Зарезервировано
231	230	Зарезервировано
232	231	Зарезервировано
233	232	Зарезервировано
234	233	Зарезервировано
235	234	Зарезервировано
236	235	Зарезервировано
237	236	Зарезервировано
238	237	Зарезервировано
239	238	Зарезервировано
240	239	Зарезервировано
241	240	Зарезервировано
242	241	Зарезервировано
243	242	Зарезервировано
244	243	Зарезервировано
245	244	Зарезервировано
246	245	Зарезервировано
247	246	Зарезервировано
248	247	Зарезервировано
249	248	Зарезервировано
250	249	Зарезервировано
251	250	Зарезервировано
252	251	Зарезервировано
253	252	Зарезервировано
254	253	Зарезервировано
255	254	Зарезервировано
256	255	Отсутствующее значение
\.


--
-- Name: bufr_code_022178_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_022178_seq', 256, true);


--
-- Data for Name: bufr_code_023001; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_023001 (id, code, description) FROM stdin;
1	0	Зарезервирована
2	1	Статьи 1 и 2
3	2	Статья 3
4	3	Статья 5.2
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_023001_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_023001_seq', 8, true);


--
-- Data for Name: bufr_code_023002; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_023002 (id, code, description) FROM stdin;
1	0	Зарезервирована
2	1	Ядерный реактор на земле
3	2	Ядерный реактор в море
4	3	Ядерный реактор в космосе
5	4	Установка по производству ядерного топлива
6	5	Установка по переработке радиоактивных отходов
7	6	Транспортировка ядерного топлива или радиоактивных отходов
8	7	Хранение ядерного топлива или радиоактивных отходов
9	8	Производство радиоизотопов
10	9	Использование радиоизотопов
11	10	Хранение радиоизотопов
12	11	Захоронение радиоизотопов
13	12	Транспортировка радиоизотопов
14	13	Использование радиоизотопов для выработки электроэнергии
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Другие виды
32	31	Отсутствующее значение
\.


--
-- Name: bufr_code_023002_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_023002_seq', 32, true);


--
-- Data for Name: bufr_code_023003; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_023003 (id, code, description) FROM stdin;
1	0	Выброс отсутствует
2	1	Выброс в атмосферу
3	2	Выброс в водные объекты
4	3	Выброс в атмосферу и водные объекты
5	4	Ожидаемый выброс в атмосферу
6	5	Ожидаемый выброс в водные объекты
7	6	Ожидаемый выброс в атмосферу и водные объекты
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_023003_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_023003_seq', 8, true);


--
-- Data for Name: bufr_code_023004; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_023004 (id, code, description) FROM stdin;
1	0	Защитные меры отсутствуют
2	1	Эвакуация
3	2	Применение защиты
4	3	Профилактика
5	4	Вода
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_023004_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_023004_seq', 8, true);


--
-- Data for Name: bufr_code_023005; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_023005 (id, code, description) FROM stdin;
1	0	Страна, где произошло происшествие, не понимает, что произошло
2	1	Страна, где произошло происшествие, знает его причину
3	2	Зарезервирована
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_023005_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_023005_seq', 4, true);


--
-- Data for Name: bufr_code_023006; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_023006 (id, code, description) FROM stdin;
1	0	Без улучшения
2	1	Нестабильная
3	2	Нет ухудшения
4	3	Улучшение
5	4	Стабильная
6	5	Ухудшается
7	6	Зарезервирована
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_023006_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_023006_seq', 8, true);


--
-- Data for Name: bufr_code_023007; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_023007 (id, code, description) FROM stdin;
1	0	Нет выброса
2	1	Выброс остановлен
3	2	Выброс
4	3	Выброс продолжается
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_023007_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_023007_seq', 8, true);


--
-- Data for Name: bufr_code_023008; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_023008 (id, code, description) FROM stdin;
1	0	Газообразный
2	1	В частицах
3	2	Газы и частицы (в смеси)
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_023008_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_023008_seq', 4, true);


--
-- Data for Name: bufr_code_023009; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_023009 (id, code, description) FROM stdin;
1	0	Газообразный
2	1	В частицах
3	2	Газы и частицы (в смеси)
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_023009_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_023009_seq', 4, true);


--
-- Data for Name: bufr_code_023016; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_023016 (id, code, description) FROM stdin;
1	0	Значительное химическое токсическое воздействие на здоровье отсутствует
2	1	Возможно значительное химическое токсическое воздействие на здоровье
3	2	Зарезервирована
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_023016_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_023016_seq', 4, true);


--
-- Data for Name: bufr_code_023018; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_023018 (id, code, description) FROM stdin;
1	0	Выброс прекратился
2	1	Выброс еще продолжается
3	2	Ожидается усиление выброса в ближайшие 6 часов
4	3	Ожидается, что выброс останется постоянным в течение следующих 6 часов
5	4	Ожидается уменьшение выброса в течение следующих 6 часов
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_023018_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_023018_seq', 8, true);


--
-- Data for Name: bufr_code_023031; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_023031 (id, code, description) FROM stdin;
1	0	Шлейф не будет взаимодействовать с дождем в стране происхождения аварии
2	1	Шлейф будет взаимодействовать с дождем в стране происхождения аварии
3	2	Зарезервирована
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_023031_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_023031_seq', 4, true);


--
-- Data for Name: bufr_code_023032; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_023032 (id, code, description) FROM stdin;
1	0	Не ожидается значительных изменений в течение следующих 6 часов
2	1	Ожидается значительное изменение в течение следующих 6 часов
3	2	Зарезервирована
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_023032_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_023032_seq', 4, true);


--
-- Data for Name: bufr_code_024003; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_024003 (id, code, description) FROM stdin;
1	0	Инертные газы
2	1	Соединения йода
3	2	Соединения цезия
4	3	Трансурановые соединения
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Отсутствующее значение
\.


--
-- Name: bufr_code_024003_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_024003_seq', 32, true);


--
-- Data for Name: bufr_code_025004; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025004 (id, code, description) FROM stdin;
1	0	Некогерентная
2	1	Когерентная (Доплер)
3	2	Зарезервирована
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_025004_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025004_seq', 4, true);


--
-- Data for Name: bufr_code_025005; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025005 (id, code, description) FROM stdin;
1	0	Логарифм — 2,5 дБ
2	1	Линейное
3	2	Специальное
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_025005_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025005_seq', 4, true);


--
-- Data for Name: bufr_code_025006; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025006 (id, code, description) FROM stdin;
1	0	Конверсия ZH в R
2	1	(ZH, ZDR) в (NO, DO) в R
3	2	(Z (F1), Z (F2)) в затухание для R
4	3	Зарезервировано
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Другие виды
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_025006_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025006_seq', 8, true);


--
-- Data for Name: bufr_code_025009; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025009 (id, bit_number, description) FROM stdin;
1	1	Отсутствует
2	2	Образец для калибровки или сигнал
3	3	По дождемерам
4	4	По другим приборам (дисдрометр — затухание)
5	0	Отсутствующее значение
\.


--
-- Name: bufr_code_025009_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025009_seq', 5, true);


--
-- Data for Name: bufr_code_025010; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025010 (id, code, description) FROM stdin;
1	0	Отсутствует
2	1	Карта
3	2	Включение данных с более высоким превышением
4	3	Анализ изменяющегося логарифмического сигнала (обнаружение мешающих отражений)
5	4	Исключение изменяющейся части линейного сигнала (подавление мешающих отражений)
6	5	Подавление мешающих отражений — доплеровское
7	6	Анализ многих параметров
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_025010_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025010_seq', 16, true);


--
-- Data for Name: bufr_code_025011; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025011 (id, code, description) FROM stdin;
1	0	Отсутствует
2	1	Карта факторов коррекции
3	2	Интерполяция (азимут или превышение)
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_025011_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025011_seq', 4, true);


--
-- Data for Name: bufr_code_025012; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025012 (id, code, description) FROM stdin;
1	0	Аппаратура
2	1	Программное обеспечение
3	2	Аппаратура и программное обеспечение
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_025012_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025012_seq', 4, true);


--
-- Data for Name: bufr_code_025013; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025013 (id, unknown0, unknown1) FROM stdin;
1	1	Коррекция яркой полосы
2	0	Отсутствующее значение
\.


--
-- Name: bufr_code_025013_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025013_seq', 2, true);


--
-- Data for Name: bufr_code_025015; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025015 (id, bit_number, description) FROM stdin;
1	1	Коррекция затухания на обтекателе
2	0	Отсутствующее значение
\.


--
-- Name: bufr_code_025015_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025015_seq', 2, true);


--
-- Data for Name: bufr_code_025017; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025017 (id, bit_number, description) FROM stdin;
1	1	Коррекция затухания в осадках
2	0	Отсутствующее значение
\.


--
-- Name: bufr_code_025017_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025017_seq', 2, true);


--
-- Data for Name: bufr_code_025020; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025020 (id, bit_number, description) FROM stdin;
1	0	FFT (быстрое преобразование Фурье)
2	1	PPP (обработка пары импульсов)
3	2	VPC (изменение фазы вектора)
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_025020_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025020_seq', 4, true);


--
-- Data for Name: bufr_code_025021; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025021 (id, bit_number, description) FROM stdin;
1	1	Простое усреднение
2	2	Консенсусное усреднение
3	3	Медианная проверка
4	4	Проверка на вертикальную согласованность
5	5	Прочие
6	6	Зарезервировано
7	7	Зарезервировано
8	0	Отсутствующее значение
\.


--
-- Name: bufr_code_025021_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025021_seq', 8, true);


--
-- Data for Name: bufr_code_025022; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025022 (id, bit_number, description) FROM stdin;
1	1	Не обработаны
2	2	Подозрение на присутствие суши
3	3	Слишком большая скорость ветра
4	4	Обнаружен лед
5	5	Обнаружен дождь (только выборки микроволновых данных)
6	6	Обнаружена облачность (только выборки инфракрасных данных)
7	7	Несущественное значение
8	8	ТПМ вне диапазона
9	0	Отсутствующее значение
\.


--
-- Name: bufr_code_025022_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025022_seq', 9, true);


--
-- Data for Name: bufr_code_025023; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025023 (id, bit_number, description) FROM stdin;
1	1	Использовалось установленное по умолчанию значение достоверности
2	2	Использовались установленное по умолчанию искажение и стандартное отклонение
3	3	Подозрение на солнечный блик
4	4	Выборка по морскому льду для микроволновых данных
5	5	Выборка по высокой скорости ветра
6	6	Неточная ТПМ по причине низкой ТПМ (< 285 K) (только применительно к прибору TMI)
7	7	Подозрение на слабое искажение данных, обусловленное дождем
8	8	Потенциальное загрязнение боковых лепестков
9	0	Отсутствующее значение
\.


--
-- Name: bufr_code_025023_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025023_seq', 9, true);


--
-- Data for Name: bufr_code_025024; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025024 (id, code, description) FROM stdin;
1	0	Необработанная выборка инфракрасных данных
2	1	Облачные выборки
3	2	Плохое: возможное искажение данных за счет облачности
4	3	Сомнительные данные
5	4	Приемлемые данные
6	5	Отличные данные
7	6	Подозрение на холодную поверхностную пленку
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Необработанная выборка микроволновых данных
12	11	Сомнительная выборка микроволновых данных, которые могут быть искажены
13	12	Приемлемая выборка микроволновых данных
14	13	Высокая вероятность суточной изменчивости
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_025024_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025024_seq', 16, true);


--
-- Data for Name: bufr_code_025029; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025029 (id, bit_number, description) FROM stdin;
1	1	Зарезервирован
2	2	Образец для калибровки или сигнал
3	3	По дождемерам
4	4	По другими приборам (дисдрометр — затухание)
5	5	Зарезервирован
6	0	Отсутствующее значение
\.


--
-- Name: bufr_code_025029_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025029_seq', 6, true);


--
-- Data for Name: bufr_code_025030; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025030 (id, code, description) FROM stdin;
1	0	Скользящая средняя температура поверхности моря не используется, поскольку критерии использования не удовлетворены
2	1	Скользящая средняя температура поверхности моря не используется, поскольку данных не имеется
3	2	Скользящая средняя температура поверхности моря используется в качестве предиктора
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_025030_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025030_seq', 4, true);


--
-- Data for Name: bufr_code_025031; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025031 (id, code, description) FROM stdin;
1	0	Зарезервирована
2	1	Прореживание не применяется (все собственные модельные уровни включаются от нижней до верхней границы псевдозондирования)
3	2	Собственные модельные уровни присутствуют только при условии, что они являются значимыми уровнями в соответствии с правилами B/C25 для обычных зондирований TEMP
4	3	Присутствует заранее заданный поднабор собственных модельных уровней
5	4	Собственные модельные уровни отсутствуют. Все уровни профилей интерполируются в заранее заданный набор барических координат
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_025031_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025031_seq', 8, true);


--
-- Data for Name: bufr_code_025032; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025032 (id, code, description) FROM stdin;
1	0	Зарезервирована
2	1	Данные из нижнего диапазона
3	2	Данные из верхнего диапазона
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_025032_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025032_seq', 4, true);


--
-- Data for Name: bufr_code_025033; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025033 (id, code, description) FROM stdin;
1	0	Профилометр ветра, работающий в поддиапазоне A
2	1	Профилометр ветра, работающий в поддиапазоне B
3	2	Зарезервирована
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_025033_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025033_seq', 4, true);


--
-- Data for Name: bufr_code_025034; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025034 (id, bit_number, value) FROM stdin;
1	1	Проверка А выполнена и не прошла
2	2	Проверка B выполнена и не прошла
3	3	Результаты проверки не дают возможности сделать заключение
4	0	Отсутствующее значение
\.


--
-- Name: bufr_code_025034_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025034_seq', 4, true);


--
-- Data for Name: bufr_code_025035; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025035 (id, code, description) FROM stdin;
1	0	Не определено
2	1	На основе единичного скачка напряжения
3	2	На основе скачка тока выше порогового значения
4	3	На основе скачка напряжения выше порогового значения
5	4	Согласованность показаний датчиков, величина тока выше порогового значения
6	5	Согласованность показаний датчиков, величина напряжения выше порогового значения
7	6	Зарезервировано
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_025035_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025035_seq', 8, true);


--
-- Data for Name: bufr_code_025036; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025036 (id, code, description) FROM stdin;
1	0	Сеть нескольких радиопеленгаторов, работающих по одним и тем же отдельным атмосферикам
2	1	Сеть нескольких станций определения времени поступления сигнала, работающая по одним
3	2	Зарезервировано
4	3	Зарезервировано
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Метод определения дальности с использованием одной станции пеленгации
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_025036_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025036_seq', 16, true);


--
-- Data for Name: bufr_code_025040; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025040 (id, code, description) FROM stdin;
1	0	Неопределенный способ
2	1	Данные первого приближения
3	2	Данные об облачности
4	3	Данные об усредненном векторе
5	4	Первичные данные
6	5	Модельные данные
7	6	Векторные данные
8	7	Трассерные данные; данное изображение
9	8	Трассерные данные для следующего изображения
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_025040_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025040_seq', 16, true);


--
-- Data for Name: bufr_code_025041; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025041 (id, code, description) FROM stdin;
1	0	Направление, первоначально передаваемое в истинных градусах
2	1	Направление, первоначально передаваемое с использованием кодовой таблицы 0700, FM 13
3	2	Зарезервирована
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_025041_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025041_seq', 4, true);


--
-- Data for Name: bufr_code_025042; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025042 (id, code, description) FROM stdin;
1	0	Скорость, первоначально передаваемая в метрах в секунду
2	1	Скорость, первоначально передаваемая с использованием кодовой таблицы 4451, FM 13
3	2	Зарезервирована
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_025042_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025042_seq', 4, true);


--
-- Data for Name: bufr_code_025045; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025045 (id, bit_number, description) FROM stdin;
1	1	Канал имеется
2	2	Канал имеется
3	3	Канал имеется
4	4	Канал имеется
5	5	Канал имеется
6	6	Канал имеется
7	7	Канал имеется
8	8	Канал имеется
9	9	Канал имеется
10	10	Канал имеется
11	11	Канал имеется
12	12	Канал имеется
13	13	Канал имеется
14	14	Канал имеется
15	15	Канал имеется
16	16	Канал имеется
17	17	Канал имеется
18	18	Канал имеется
19	19	Канал имеется
20	20	Канал имеется
21	0	Отсутствующее значение
\.


--
-- Name: bufr_code_025045_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025045_seq', 21, true);


--
-- Data for Name: bufr_code_025046; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025046 (id, bit_number, description) FROM stdin;
1	1	Канал имеется
2	2	Канал имеется
3	3	Канал имеется
4	4	Канал имеется
5	0	Отсутствующее значение
\.


--
-- Name: bufr_code_025046_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025046_seq', 5, true);


--
-- Data for Name: bufr_code_025047; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025047 (id, bit_number, description) FROM stdin;
1	1	Начиная с позиции первого бита (бит старшего разряда), если позиция бита установлена на 1, то канал имеется;если позиция бита установлена на 0, то канал отсутствует
2	2	Начиная с позиции первого бита (бит старшего разряда), если позиция бита установлена на 1, то канал имеется;если позиция бита установлена на 0, то канал отсутствует
3	3	Начиная с позиции первого бита (бит старшего разряда), если позиция бита установлена на 1, то канал имеется;если позиция бита установлена на 0, то канал отсутствует
4	0	Отсутствующее значение
\.


--
-- Name: bufr_code_025047_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025047_seq', 4, true);


--
-- Data for Name: bufr_code_025048; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025048 (id, bit_number, description) FROM stdin;
1	1	Начиная с позиции первого бита (бит старшего разряда), если позиция бита установлена на 1, то канал имеется; если позиция бита установлена на 0, то канал отсутствует
2	2	Начиная с позиции первого бита (бит старшего разряда), если позиция бита установлена на 1, то канал имеется; если позиция бита установлена на 0, то канал отсутствует
3	3	Начиная с позиции первого бита (бит старшего разряда), если позиция бита установлена на 1, то канал имеется; если позиция бита установлена на 0, то канал отсутствует
4	4	Начиная с позиции первого бита (бит старшего разряда), если позиция бита установлена на 1, то канал имеется; если позиция бита установлена на 0, то канал отсутствует
5	5	Начиная с позиции первого бита (бит старшего разряда), если позиция бита установлена на 1, то канал имеется; если позиция бита установлена на 0, то канал отсутствует
6	6	Начиная с позиции первого бита (бит старшего разряда), если позиция бита установлена на 1, то канал имеется; если позиция бита установлена на 0, то канал отсутствует
7	7	Начиная с позиции первого бита (бит старшего разряда), если позиция бита установлена на 1, то канал имеется; если позиция бита установлена на 0, то канал отсутствует
8	8	Начиная с позиции первого бита (бит старшего разряда), если позиция бита установлена на 1, то канал имеется; если позиция бита установлена на 0, то канал отсутствует
9	9	Начиная с позиции первого бита (бит старшего разряда), если позиция бита установлена на 1, то канал имеется; если позиция бита установлена на 0, то канал отсутствует
10	10	Начиная с позиции первого бита (бит старшего разряда), если позиция бита установлена на 1, то канал имеется; если позиция бита установлена на 0, то канал отсутствует
11	11	Начиная с позиции первого бита (бит старшего разряда), если позиция бита установлена на 1, то канал имеется; если позиция бита установлена на 0, то канал отсутствует
12	12	Начиная с позиции первого бита (бит старшего разряда), если позиция бита установлена на 1, то канал имеется; если позиция бита установлена на 0, то канал отсутствует
13	13	Начиная с позиции первого бита (бит старшего разряда), если позиция бита установлена на 1, то канал имеется; если позиция бита установлена на 0, то канал отсутствует
14	14	Начиная с позиции первого бита (бит старшего разряда), если позиция бита установлена на 1, то канал имеется; если позиция бита установлена на 0, то канал отсутствует
15	15	Начиная с позиции первого бита (бит старшего разряда), если позиция бита установлена на 1, то канал имеется; если позиция бита установлена на 0, то канал отсутствует
16	0	Отсутствующее значение
\.


--
-- Name: bufr_code_025048_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025048_seq', 16, true);


--
-- Data for Name: bufr_code_025049; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025049 (id, bit_number, description) FROM stdin;
1	1	Начиная с позиции первого бита (бит старшего разряда), если позиция бита установлена на 1, то канал имеется; если позиция бита установлена на 0, то канал отсутствует
2	2	Начиная с позиции первого бита (бит старшего разряда), если позиция бита установлена на 1, то канал имеется; если позиция бита установлена на 0, то канал отсутствует
3	3	Начиная с позиции первого бита (бит старшего разряда), если позиция бита установлена на 1, то канал имеется; если позиция бита установлена на 0, то канал отсутствует
4	4	Начиная с позиции первого бита (бит старшего разряда), если позиция бита установлена на 1, то канал имеется; если позиция бита установлена на 0, то канал отсутствует
5	5	Начиная с позиции первого бита (бит старшего разряда), если позиция бита установлена на 1, то канал имеется; если позиция бита установлена на 0, то канал отсутствует
6	0	Отсутствующее значение
\.


--
-- Name: bufr_code_025049_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025049_seq', 6, true);


--
-- Data for Name: bufr_code_025051; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025051 (id, bit_number, description) FROM stdin;
1	1	Начиная с позиции первого бита (бит старшего разряда), если позиция бита установлена на 1, то канал имеется; если позиция бита установлена на 0, то канал отсутствует
2	2	Начиная с позиции первого бита (бит старшего разряда), если позиция бита установлена на 1, то канал имеется; если позиция бита установлена на 0, то канал отсутствует
3	3	Начиная с позиции первого бита (бит старшего разряда), если позиция бита установлена на 1, то канал имеется; если позиция бита установлена на 0, то канал отсутствует
4	4	Начиная с позиции первого бита (бит старшего разряда), если позиция бита установлена на 1, то канал имеется; если позиция бита установлена на 0, то канал отсутствует
5	5	Начиная с позиции первого бита (бит старшего разряда), если позиция бита установлена на 1, то канал имеется; если позиция бита установлена на 0, то канал отсутствует
6	6	Начиная с позиции первого бита (бит старшего разряда), если позиция бита установлена на 1, то канал имеется; если позиция бита установлена на 0, то канал отсутствует
7	0	Отсутствующее значение
\.


--
-- Name: bufr_code_025051_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025051_seq', 7, true);


--
-- Data for Name: bufr_code_025053; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025053 (id, bit_number, description) FROM stdin;
1	1	Хорошее
2	2	Излишнее
3	3	Сомнительное
4	4	Плохое
5	5	Экспериментальное
6	6	Необоснованное
7	7	Зарезервировано
8	8	Зарезервировано
9	9	Зарезервировано
10	10	Зарезервировано
11	11	Зарезервировано
12	0	Отсутствующее значение
\.


--
-- Name: bufr_code_025053_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025053_seq', 12, true);


--
-- Data for Name: bufr_code_025063; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025063 (id, code, description) FROM stdin;
1	0	Не определено
2	1	Основной процессор
3	2	Дублирующий процессор
4	3	Зарезервировано
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Зарезервировано
33	32	Зарезервировано
34	33	Зарезервировано
35	34	Зарезервировано
36	35	Зарезервировано
37	36	Зарезервировано
38	37	Зарезервировано
39	38	Зарезервировано
40	39	Зарезервировано
41	40	Зарезервировано
42	41	Зарезервировано
43	42	Зарезервировано
44	43	Зарезервировано
45	44	Зарезервировано
46	45	Зарезервировано
47	46	Зарезервировано
48	47	Зарезервировано
49	48	Зарезервировано
50	49	Зарезервировано
51	50	Зарезервировано
52	51	Зарезервировано
53	52	Зарезервировано
54	53	Зарезервировано
55	54	Зарезервировано
56	55	Зарезервировано
57	56	Зарезервировано
58	57	Зарезервировано
59	58	Зарезервировано
60	59	Зарезервировано
61	60	Зарезервировано
62	61	Зарезервировано
63	62	Зарезервировано
64	63	Зарезервировано
65	64	Зарезервировано
66	65	Зарезервировано
67	66	Зарезервировано
68	67	Зарезервировано
69	68	Зарезервировано
70	69	Зарезервировано
71	70	Зарезервировано
72	71	Зарезервировано
73	72	Зарезервировано
74	73	Зарезервировано
75	74	Зарезервировано
76	75	Зарезервировано
77	76	Зарезервировано
78	77	Зарезервировано
79	78	Зарезервировано
80	79	Зарезервировано
81	80	Зарезервировано
82	81	Зарезервировано
83	82	Зарезервировано
84	83	Зарезервировано
85	84	Зарезервировано
86	85	Зарезервировано
87	86	Зарезервировано
88	87	Зарезервировано
89	88	Зарезервировано
90	89	Зарезервировано
91	90	Зарезервировано
92	91	Зарезервировано
93	92	Зарезервировано
94	93	Зарезервировано
95	94	Зарезервировано
96	95	Зарезервировано
97	96	Зарезервировано
98	97	Зарезервировано
99	98	Зарезервировано
100	99	Зарезервировано
101	100	Зарезервировано
102	101	Зарезервировано
103	102	Зарезервировано
104	103	Зарезервировано
105	104	Зарезервировано
106	105	Зарезервировано
107	106	Зарезервировано
108	107	Зарезервировано
109	108	Зарезервировано
110	109	Зарезервировано
111	110	Зарезервировано
112	111	Зарезервировано
113	112	Зарезервировано
114	113	Зарезервировано
115	114	Зарезервировано
116	115	Зарезервировано
117	116	Зарезервировано
118	117	Зарезервировано
119	118	Зарезервировано
120	119	Зарезервировано
121	120	Зарезервировано
122	121	Зарезервировано
123	122	Зарезервировано
124	123	Зарезервировано
125	124	Зарезервировано
126	125	Зарезервировано
127	126	Зарезервировано
128	127	Зарезервировано
129	128	Зарезервировано
130	129	Зарезервировано
131	130	Зарезервировано
132	131	Зарезервировано
133	132	Зарезервировано
134	133	Зарезервировано
135	134	Зарезервировано
136	135	Зарезервировано
137	136	Зарезервировано
138	137	Зарезервировано
139	138	Зарезервировано
140	139	Зарезервировано
141	140	Зарезервировано
142	141	Зарезервировано
143	142	Зарезервировано
144	143	Зарезервировано
145	144	Зарезервировано
146	145	Зарезервировано
147	146	Зарезервировано
148	147	Зарезервировано
149	148	Зарезервировано
150	149	Зарезервировано
151	150	Зарезервировано
152	151	Зарезервировано
153	152	Зарезервировано
154	153	Зарезервировано
155	154	Зарезервировано
156	155	Зарезервировано
157	156	Зарезервировано
158	157	Зарезервировано
159	158	Зарезервировано
160	159	Зарезервировано
161	160	Зарезервировано
162	161	Зарезервировано
163	162	Зарезервировано
164	163	Зарезервировано
165	164	Зарезервировано
166	165	Зарезервировано
167	166	Зарезервировано
168	167	Зарезервировано
169	168	Зарезервировано
170	169	Зарезервировано
171	170	Зарезервировано
172	171	Зарезервировано
173	172	Зарезервировано
174	173	Зарезервировано
175	174	Зарезервировано
176	175	Зарезервировано
177	176	Зарезервировано
178	177	Зарезервировано
179	178	Зарезервировано
180	179	Зарезервировано
181	180	Зарезервировано
182	181	Зарезервировано
183	182	Зарезервировано
184	183	Зарезервировано
185	184	Зарезервировано
186	185	Зарезервировано
187	186	Зарезервировано
188	187	Зарезервировано
189	188	Зарезервировано
190	189	Зарезервировано
191	190	Зарезервировано
192	191	Зарезервировано
193	192	Зарезервировано
194	193	Зарезервировано
195	194	Зарезервировано
196	195	Зарезервировано
197	196	Зарезервировано
198	197	Зарезервировано
199	198	Зарезервировано
200	199	Зарезервировано
201	200	Зарезервировано
202	201	Зарезервировано
203	202	Зарезервировано
204	203	Зарезервировано
205	204	Зарезервировано
206	205	Зарезервировано
207	206	Зарезервировано
208	207	Зарезервировано
209	208	Зарезервировано
210	209	Зарезервировано
211	210	Зарезервировано
212	211	Зарезервировано
213	212	Зарезервировано
214	213	Зарезервировано
215	214	Зарезервировано
216	215	Зарезервировано
217	216	Зарезервировано
218	217	Зарезервировано
219	218	Зарезервировано
220	219	Зарезервировано
221	220	Зарезервировано
222	221	Зарезервировано
223	222	Зарезервировано
224	223	Зарезервировано
225	224	Зарезервировано
226	225	Зарезервировано
227	226	Зарезервировано
228	227	Зарезервировано
229	228	Зарезервировано
230	229	Зарезервировано
231	230	Зарезервировано
232	231	Зарезервировано
233	232	Зарезервировано
234	233	Зарезервировано
235	234	Зарезервировано
236	235	Зарезервировано
237	236	Зарезервировано
238	237	Зарезервировано
239	238	Зарезервировано
240	239	Зарезервировано
241	240	Зарезервировано
242	241	Зарезервировано
243	242	Зарезервировано
244	243	Зарезервировано
245	244	Зарезервировано
246	245	Зарезервировано
247	246	Зарезервировано
248	247	Зарезервировано
249	248	Зарезервировано
250	249	Зарезервировано
251	250	Зарезервировано
252	251	Зарезервировано
253	252	Зарезервировано
254	253	Зарезервировано
255	254	Зарезервировано
256	255	Отсутствующее значение
\.


--
-- Name: bufr_code_025063_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025063_seq', 256, true);


--
-- Data for Name: bufr_code_025069; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025069 (id, bit_number, description) FROM stdin;
1	1	Значение сглажено
2	2	Скорректированная базовая линия
3	3	Нормализованный временной интервал
4	4	Выбросы значений проверены
5	5	Вероятность проверена
6	6	Согласованность проверена
7	7	Значение интерполировано
8	0	Отсутствующее значение
\.


--
-- Name: bufr_code_025069_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025069_seq', 8, true);


--
-- Data for Name: bufr_code_025086; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025086 (id, code, description) FROM stdin;
1	0	Глубины не корректируются
2	1	Глубины корректируются
3	2	Зарезервирована
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_025086_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025086_seq', 4, true);


--
-- Data for Name: bufr_code_025090; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025090 (id, code, description) FROM stdin;
1	0	Вычисленная орбита во время маневра
2	1	Скорректированная орбита полетных операций
3	2	Экстраполированная орбита полетных операций
4	3	Скорректированная (предварительная/точная) орбита
5	4	(Предварительная/точная) орбита оценивается во время периода маневра
6	5	(Предварительная/точная) орбита интерполируется для отслеживания пропуска данных
7	6	(Предварительная/точная) орбита экстраполируется на период менее 1 дня
8	7	(Предварительная/точная) орбита экстраполируется на период от 1 до 2 дней
9	8	(Предварительная/точная) орбита экстраполируется на период более 2 дней, или орбита экстра
10	9	Орбита навигатора DORIS* DIODE**
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_025090_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025090_seq', 16, true);


--
-- Data for Name: bufr_code_025093; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025093 (id, bit_number, description) FROM stdin;
1	1	Корректировки нет
2	2	Корректировка вертикальной скорости
3	3	Зарезервировано
4	4	Зарезервировано
5	5	Зарезервировано
6	6	Зарезервировано
7	7	Все корректировки
8	0	Отсутствующее значение
\.


--
-- Name: bufr_code_025093_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025093_seq', 8, true);


--
-- Data for Name: bufr_code_025095; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025095 (id, bit_number, description) FROM stdin;
1	1	Функционирующий высотомер (0, если номинальный; 1, если резервный)
2	0	Отсутствующее значение
\.


--
-- Name: bufr_code_025095_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025095_seq', 2, true);


--
-- Data for Name: bufr_code_025096; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025096 (id, bit_number, description) FROM stdin;
1	1	Указатель режима (0, если режим 2; 1, если режим 1)
2	2	Указатель последовательности калибровки в режиме 1 (0, если обычный прием данных
3	3	Канал 2 (0, если включен; 1, если выключен)
4	4	Канал 3 (0, если включен; 1, если выключен)
5	0	Отсутствующее значение
\.


--
-- Name: bufr_code_025096_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025096_seq', 5, true);


--
-- Data for Name: bufr_code_025097; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025097 (id, code, description) FROM stdin;
1	1	Диапазоны 0–30 см
2	1	Диапазоны 30–60 см
3	2	Диапазоны 60–90 см
4	3	Диапазоны 90–120 см
5	4	Диапазоны 120–150 см
6	5	Диапазоны 150–180 см
7	6	Диапазоны 180–210 см
8	7	Диапазоны 210–240 см
9	8	Диапазоны 240–270 см
10	9	Диапазоны свыше 270 см
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_025097_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025097_seq', 16, true);


--
-- Data for Name: bufr_code_025098; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025098 (id, bit_number, description) FROM stdin;
1	1	Диапазон полосы частот Ku
2	2	Диапазон полосы частот C
3	3	Высота значительной волны в полосе частот Ku
4	4	Высота значительной волны в полосе частот C
5	5	Коэффициент обратного рассеяния в полосе частот Ku
6	6	Коэффициент обратного рассеяния в полосе частот C
7	7	Угол отклонения от надира исходя из параметров формы волны в полосе частот Ku
8	8	Угол отклонения от надира с платформы
9	0	Отсутствующее значение
\.


--
-- Name: bufr_code_025098_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025098_seq', 9, true);


--
-- Data for Name: bufr_code_025099; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025099 (id, bit_number, description) FROM stdin;
1	1	Инструментальная поправка в диапазоне полосы частот Ku
2	2	Инструментальная поправка в диапазоне полосы частот C
3	3	Инструментальная поправка Высота значительной волны в полосе частот Ku
4	4	Инструментальная поправка Высота значительной волны в полосе частот С
5	5	Инструментальная поправка коэффициента обратного рассеяния в полосе частот Ku
6	6	Инструментальная поправка коэффициента обратного рассеяния в полосе частот С
7	7	Зарезервировано
8	8	Зарезервировано
9	0	Отсутствующее значение
\.


--
-- Name: bufr_code_025099_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025099_seq', 9, true);


--
-- Data for Name: bufr_code_025110; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025110 (id, code, description) FROM stdin;
1	1	Проводился анализ необработанных данных для их коррекции. Коррекция проведена с параметрами по умолчанию
2	2	Проводился анализ необработанных данных для их коррекции. Коррекция проведена с учетом результатов анализа необработанных данных
3	3	Применялась коррекция диаграммы направленности антенны в вертикальной плоскости
4	4	Использовалась копия номинального импульса с линейной частотной модуляцией
5	5	Использовалось восстановление импульса с линейной частотной модуляцией
6	6	Проведено преобразование наклонной дальности в горизонтальную дальность
7	7	Зарезервировано
8	8	Зарезервировано
9	9	Зарезервировано
10	0	Отсутствующее значение
\.


--
-- Name: bufr_code_025110_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025110_seq', 10, true);


--
-- Data for Name: bufr_code_025120; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025120 (id, code, description) FROM stdin;
1	0	Процентная доля DSR* без ошибок обработки уровня 2 больше допустимого порогового значения
2	1	Процентная доля DSR без ошибок обработки уровня 2 меньше допустимого порогового значения
3	2	Зарезервирована
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_025120_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025120_seq', 4, true);


--
-- Data for Name: bufr_code_025122; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025122 (id, code, description) FROM stdin;
1	0	Аппаратная конфигурация RF — A
2	1	Аппаратная конфигурация RF — B
3	2	Зарезервирована
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_025122_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025122_seq', 4, true);


--
-- Data for Name: bufr_code_025123; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025123 (id, code, description) FROM stdin;
1	0	Аппаратная конфигурация НРА — A
2	1	Аппаратная конфигурация НРА — B
3	2	Зарезервирована
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_025123_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025123_seq', 4, true);


--
-- Data for Name: bufr_code_025124; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025124 (id, code, description) FROM stdin;
1	0	Процентная доля DSR** без ошибок обработки уровня 2 больше допустимого порогового значения
2	1	Процентная доля DSR без ошибок обработки уровня 2 меньше допустимого порогового значения
3	2	Зарезервирована
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_025124_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025124_seq', 4, true);


--
-- Data for Name: bufr_code_025150; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025150 (id, code, description) FROM stdin;
1	1	Анализ интенсивности по методу Дворака VIS (визуальное изображение)
2	2	Анализ интенсивности по методу Дворака EIR (усиленное инфракрасное изображение)
3	3	Зарезервировано
4	4	Зарезервировано
5	5	Зарезервировано
6	6	Зарезервировано
7	7	Зарезервировано
8	8	Зарезервировано
9	9	Зарезервировано
10	10	Зарезервировано
11	11	Зарезервировано
12	12	Зарезервировано
13	13	Зарезервировано
14	14	Зарезервировано
15	15	Отсутствующее значение
\.


--
-- Name: bufr_code_025150_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025150_seq', 15, true);


--
-- Data for Name: bufr_code_025174; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025174 (id, bit_number, description) FROM stdin;
1	1	На элемент изображения влияют эффекты радиочастотных помех (РЧП)
2	2	Элемент изображения находится в направлении шестиугольной зоны помехи дискретизации, отцентрированной на помехе дискретизации за счет излучения Солнца
3	3	Элемент изображения находится около границы расширенной зоны, свободной от помехи дискретизации
4	4	Элемент изображения находится внутри расширенной зоны, свободной от помехи дискретизации
5	5	Элемент изображения находится внутри исключительной зоны, свободной от помехи дискретизации
6	6	Элемент изображения расположен в зоне, где была восстановлена помеха дискретизации за счет излучения Луны
7	7	Элемент изображения расположен в зоне, где было обнаружено отраженное излучение Солнца
8	8	Элемент изображения расположен в зоне, где была восстановлена помеха дискретизации за счет излучения Солнца
9	9	В ходе восстановления снимка для этого элемента изображения была выполнена трансформация плоского объекта
10	10	В ходе восстановления изображения для учета искажения за счет перекрестной поляризации снимок был объединен со скорректированным снимком в обратной поляризации
11	11	В ходе восстановления снимка для этого элемента изображения была выполнена коррекция прямого излучения Луны
12	12	В ходе восстановления снимка для этого элемента изображения была выполнена коррекция отраженного излучения Солнца
13	13	В ходе восстановления изображения этого снимка была выполнена коррекция прямого излучения Солнца
14	0	Отсутствующее значение
\.


--
-- Name: bufr_code_025174_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025174_seq', 14, true);


--
-- Data for Name: bufr_code_025181; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025181 (id, code, description) FROM stdin;
1	0	Все в порядке
2	1	Процентная доля данных наблюдений L2b без ошибок обработки меньше допустимого порогового значения
3	2	Отсутствующее значение
\.


--
-- Name: bufr_code_025181_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025181_seq', 3, true);


--
-- Data for Name: bufr_code_025182; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025182 (id, code, description) FROM stdin;
1	0	Все в порядке
2	1	Процентная доля данных наблюдений L1b без ошибок обработки меньше допустимого порогового значения
3	2	Отсутствующее значение
\.


--
-- Name: bufr_code_025182_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025182_seq', 3, true);


--
-- Data for Name: bufr_code_025184; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_025184 (id, code, description) FROM stdin;
1	0	Все в порядке
2	1	Период, охватываемый продукцией, короче, чем у исходной продукции
3	2	Отсутствующее значение
\.


--
-- Name: bufr_code_025184_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_025184_seq', 3, true);


--
-- Data for Name: bufr_code_026010; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_026010 (id, bit_number, description) FROM stdin;
1	1	0100
2	2	0200
3	3	0300
4	4	0400
5	5	0500
6	6	0600
7	7	0700
8	8	0800
9	9	0900
10	10	1000
11	11	1100
12	12	1200
13	13	1300
14	14	1400
15	15	1500
16	16	1600
17	17	1700
18	18	1800
19	19	1900
20	20	2000
21	21	2100
22	22	2200
23	23	2300
24	24	2400
25	25	Неизвестная комбинация часов
26	0	Отсутствующее значение
\.


--
-- Name: bufr_code_026010_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_026010_seq', 26, true);


--
-- Data for Name: bufr_code_029001; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_029001 (id, code, description) FROM stdin;
1	0	Гномоническая проекция
2	1	Полярная стереографическая проекция
3	2	Конформная коническая проекция Ламберта
4	3	Проекция Меркатора
5	4	Конус сканирования (радиолокатора)*
6	5	Зарезервирована
7	6	Проекция отсутствует
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_029001_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_029001_seq', 8, true);


--
-- Data for Name: bufr_code_029002; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_029002 (id, code, description) FROM stdin;
1	0	Декартовая
2	1	Полярная
3	2	Другие виды
4	3	Зарезервировано
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_029002_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_029002_seq', 8, true);


--
-- Data for Name: bufr_code_030031; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_030031 (id, code, description) FROM stdin;
1	0	PPI
2	1	Комбинированный
3	2	CAPPI
4	3	Вертикальный разрез
5	4	Буквенно-цифровые данные
6	5	Карта предметов на местности, создающих помехи
7	6	Карта
8	7	Тестовое изображение
9	8	Замечания
10	9	Карта отражений от местных объектов
11	10	Карта высоты луча радиолокатора
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Другие виды
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_030031_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_030031_seq', 16, true);


--
-- Data for Name: bufr_code_030032; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_030032 (id, bit_number, description) FROM stdin;
1	1	Карта
2	2	Спутниковые IR
3	3	Спутниковые VIS
4	4	Спутниковые WV
5	5	Спутниковые мультиспектральные
6	6	Синоптические наблюдения
7	7	Прогностические параметры
8	8	Данные о молниях
9	9	Зарезервировано
10	10	Зарезервировано
11	11	Зарезервировано
12	12	Зарезервировано
13	13	Зарезервировано
14	14	Зарезервировано
15	15	Другие данные
16	0	Отсутствующее значение
\.


--
-- Name: bufr_code_030032_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_030032_seq', 16, true);


--
-- Data for Name: bufr_code_031021; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_031021 (id, code, description) FROM stdin;
1	0	Зарезервирована
2	1	1-битовый индикатор качества
3	2	2-битовый индикатор качества
4	3	Зарезервировано
5	4	Зарезервировано
6	5	Зарезервировано
7	6	4-битовый указатель класса контроля качества в соответствии с ГТСПП
8	7	Процент достоверности
9	8	Отсутствие/наличие сомнительных данных
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	1-битовый индикатор качества
23	22	Зарезервировано для местного использования
24	23	Зарезервировано для местного использования
25	24	Зарезервировано для местного использования
26	25	Зарезервировано для местного использования
27	26	Зарезервировано для местного использования
28	27	Зарезервировано для местного использования
29	28	Зарезервировано для местного использования
30	29	Зарезервировано для местного использования
31	30	Зарезервировано для местного использования
32	31	Зарезервировано для местного использования
33	32	Зарезервировано для местного использования
34	33	Зарезервировано для местного использования
35	34	Зарезервировано для местного использования
36	35	Зарезервировано для местного использования
37	36	Зарезервировано для местного использования
38	37	Зарезервировано для местного использования
39	38	Зарезервировано для местного использования
40	39	Зарезервировано для местного использования
41	40	Зарезервировано для местного использования
42	41	Зарезервировано для местного использования
43	42	Зарезервировано для местного использования
44	43	Зарезервировано для местного использования
45	44	Зарезервировано для местного использования
46	45	Зарезервировано для местного использования
47	46	Зарезервировано для местного использования
48	47	Зарезервировано для местного использования
49	48	Зарезервировано для местного использования
50	49	Зарезервировано для местного использования
51	50	Зарезервировано для местного использования
52	51	Зарезервировано для местного использования
53	52	Зарезервировано для местного использования
54	53	Зарезервировано для местного использования
55	54	Зарезервировано для местного использования
56	55	Зарезервировано для местного использования
57	56	Зарезервировано для местного использования
58	57	Зарезервировано для местного использования
59	58	Зарезервировано для местного использования
60	59	Зарезервировано для местного использования
61	60	Зарезервировано для местного использования
62	61	Зарезервировано для местного использования
63	62	Зарезервировано для местного использования
64	63	Отсутствующее значение
\.


--
-- Name: bufr_code_031021_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_031021_seq', 64, true);


--
-- Data for Name: bufr_code_031031; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_031031 (id, bit_number, value, description) FROM stdin;
1	1	0	Данные имеются
2	1	1	Данные отсутствуют
\.


--
-- Name: bufr_code_031031_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_031031_seq', 2, true);


--
-- Data for Name: bufr_code_033002; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033002 (id, code, description) FROM stdin;
1	0	Точные данные
2	1	Сомнительные данные
3	2	Зарезервирована
4	3	Информация о качестве не сообщена
\.


--
-- Name: bufr_code_033002_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033002_seq', 4, true);


--
-- Data for Name: bufr_code_033003; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033003 (id, code, description) FROM stdin;
1	0	Точные данные
2	1	Слегка сомнительные данные
3	2	Очень сомнительные данные
4	3	Негодные к применению данные
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Информация о качестве не сообщена
\.


--
-- Name: bufr_code_033003_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033003_seq', 8, true);


--
-- Data for Name: bufr_code_033005; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033005 (id, bit_number, description) FROM stdin;
1	1	Автоматизированная проверка метеорологических данных отсутствует
2	2	Сомнительные данные о давлении
3	3	Сомнительные данные о ветре
4	4	Сомнительные данные о температуре воздуха
5	5	Сомнительные данные о температуре по смоченному термометру
6	6	Сомнительные данные о влажности
7	7	Сомнительные данные о температуре поверхности земли
8	8	Сомнительные данные о температуре почвы (глубина 1)
9	9	Сомнительные данные о температуре почвы (глубина 2)
10	10	Сомнительные данные о температуре почвы (глубина 3)
11	11	Сомнительные данные о температуре почвы (глубина 4)
12	12	Сомнительные данные о температуре почвы (глубина 5)
13	13	Сомнительные данные об облачности
14	14	Сомнительные данные о видимости
15	15	Сомнительные данные о текущей погоде
16	16	Сомнительные данные о молниях
17	17	Сомнительные данные об отложении льда
18	18	Сомнительные данные об осадках
19	19	Сомнительные данные о состоянии поверхности земли
20	20	Сомнительные данные о снеге
21	21	Сомнительные данные о содержании воды
22	22	Сомнительные данные об испарении/суммарном испарении
23	23	Сомнительные данные о солнечном сиянии
24	24	Зарезервировано
25	25	Зарезервировано
26	26	Зарезервировано
27	27	Зарезервировано
28	28	Зарезервировано
29	29	Зарезервировано
30	0	Отсутствующее значение
\.


--
-- Name: bufr_code_033005_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033005_seq', 30, true);


--
-- Data for Name: bufr_code_033006; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033006 (id, code, description) FROM stdin;
1	0	Самопроверка проведена, никаких аномалий
2	1	По меньшей мере одно предупреждение, никаких тревожных сообщений
3	2	По меньшей мере одно тревожное сообщение
4	3	Выход из строя датчика
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_033006_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033006_seq', 8, true);


--
-- Data for Name: bufr_code_033015; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033015 (id, code, description) FROM stdin;
1	0	Все проверки проведены
2	1	Проверка отсутствующих данных
3	2	Проверка спускающегося/повторно поднимающегося шара-зонда
4	3	Проверка вероятности данных (сверх пределов)
5	4	Проверка вероятности данных (ниже пределов)
6	5	Проверка сверхадиабатического градиента
7	6	Проверка ограничивающих углов
8	7	Проверка показателя подъема
9	8	Чрезмерное изменение по сравнению с предшествующим полетом
10	9	Общая проверка шара-зонда
11	10	Проверка скорости ветра
12	11	Проверка направления ветра
13	12	Проверка зависимости
14	13	Данные действительны, но изменены
15	14	Проверка резко выделяющихся данных
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Зарезервировано
33	32	Зарезервировано
34	33	Зарезервировано
35	34	Зарезервировано
36	35	Зарезервировано
37	36	Зарезервировано
38	37	Зарезервировано
39	38	Зарезервировано
40	39	Зарезервировано
41	40	Зарезервировано
42	41	Зарезервировано
43	42	Зарезервировано
44	43	Зарезервировано
45	44	Зарезервировано
46	45	Зарезервировано
47	46	Зарезервировано
48	47	Зарезервировано
49	48	Зарезервировано
50	49	Зарезервировано
51	50	Зарезервировано
52	51	Зарезервировано
53	52	Зарезервировано
54	53	Зарезервировано
55	54	Зарезервировано
56	55	Зарезервировано
57	56	Зарезервировано
58	57	Зарезервировано
59	58	Зарезервировано
60	59	Зарезервировано
61	60	Зарезервировано
62	61	Зарезервировано
63	62	Зарезервировано
64	63	Отсутствующее значение
\.


--
-- Name: bufr_code_033015_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033015_seq', 64, true);


--
-- Data for Name: bufr_code_033020; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033020 (id, code, description) FROM stdin;
1	0	Хорошее
2	1	Не соответствующее
3	2	Сомнительное
4	3	Неправильное
5	4	Не проверено
6	5	Изменено
7	6	Оцененное
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_033020_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033020_seq', 8, true);


--
-- Data for Name: bufr_code_033021; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033021 (id, code, description) FROM stdin;
1	0	В рамках допустимого
2	1	За пределами допустимого
3	2	Зарезервирована
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_033021_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033021_seq', 4, true);


--
-- Data for Name: bufr_code_033022; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033022 (id, code, description) FROM stdin;
1	0	Хорошее (получен ряд одинаковых сводок)
2	1	Сомнительное (не получено одинаковых сводок)
3	2	Зарезервирована
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_033022_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033022_seq', 4, true);


--
-- Data for Name: bufr_code_033023; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033023 (id, code, description) FROM stdin;
1	0	Надежное (местоположение определено за два прохода спутника)
2	1	Последнеее известное (местоположение не определено за соответствующий проход спутника)
3	2	Сомнительное (местоположение определено только за один проход; второе решение возможно в 5 % случаев)
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_033023_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033023_seq', 4, true);


--
-- Data for Name: bufr_code_033024; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033024 (id, code, description) FROM stdin;
1	0	Зарезервирована
2	1	Отлично — в пределах 3 метров
3	2	Хорошо — в пределах 10 метров
4	3	Посредственно — в пределах 20 метров
5	4	Плохо — более 20 метров
6	5	Отлично — в пределах 10 футов
7	6	Хорошо — в пределах 30 футов
8	7	Посредственно — в пределах 60 футов
9	8	Плохо — в пределах 60 футов
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_033024_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033024_seq', 16, true);


--
-- Data for Name: bufr_code_033025; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033025 (id, code, description) FROM stdin;
1	0	Интерполированное время, собщенные широта и долгота
2	1	Сообщенное время, интерполированные широта и долгота
3	2	Интерполированные время, широта и долгота
4	3	Сообщенные время, широта и долгота
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_033025_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033025_seq', 8, true);


--
-- Data for Name: bufr_code_033026; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033026 (id, code, description) FROM stdin;
1	0	Обычные операции — измерения
2	1	Обычные операции — измерений нет
3	2	Незначительная относительная влажность
4	3	Гигрометрический элемент мокрый
5	4	Гигрометрический элемент загрязнен
6	5	Поломка обогревателя
7	6	Поломка обогревателя и мокрого/загрязненного гигрометрического элемента
8	7	По меньшей мере один из входных параметров, используемых в расчете отсутствующего коэффициента, является недействительным
9	8	Цифровая ошибка
10	9	Датчик не установлен
11	10	Рассчитанная относительная влажность > 100 %
12	11	Мощность входного сигнала лазера слишком низкая
13	12	Температура датчика в канале водяного пара (WV) вне диапазона
14	13	Давление по датчику WV вне диапазона
15	14	Спектральная линия вне диапазона
16	15	Выходная мощность лазера отсутствует
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Зарезервировано
33	32	Зарезервировано
34	33	Зарезервировано
35	34	Зарезервировано
36	35	Зарезервировано
37	36	Зарезервировано
38	37	Зарезервировано
39	38	Зарезервировано
40	39	Зарезервировано
41	40	Зарезервировано
42	41	Зарезервировано
43	42	Зарезервировано
44	43	Зарезервировано
45	44	Зарезервировано
46	45	Зарезервировано
47	46	Зарезервировано
48	47	Зарезервировано
49	48	Зарезервировано
50	49	Зарезервировано
51	50	Зарезервировано
52	51	Зарезервировано
53	52	Зарезервировано
54	53	Зарезервировано
55	54	Зарезервировано
56	55	Зарезервировано
57	56	Зарезервировано
58	57	Зарезервировано
59	58	Зарезервировано
60	59	Зарезервировано
61	60	Зарезервировано
62	61	Зарезервировано
63	62	Зарезервировано
64	63	Отсутствующее значение
\.


--
-- Name: bufr_code_033026_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033026_seq', 64, true);


--
-- Data for Name: bufr_code_033027; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033027 (id, code, description) FROM stdin;
1	0	Радиус ≥ 1500 м
2	1	500 м ≤ радиус < 1500 м
3	2	250 м ≤ радиус < 500 м
4	3	Радиус < 250 м
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_033027_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033027_seq', 8, true);


--
-- Data for Name: bufr_code_033028; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033028 (id, code, description) FROM stdin;
1	1	Номинальное
2	2	Ухудшено ошибкой SW*; любая ошибка сообщается алгоритмами
3	3	Ухудшено ошибкой прибора
4	4	Ухудшено искажением/отсутствием ADF**
5	5	Зарезервировано
6	6	Зарезервировано
7	7	Отсутствующее значение
\.


--
-- Name: bufr_code_033028_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033028_seq', 7, true);


--
-- Data for Name: bufr_code_033030; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033030 (id, bit_number, description) FROM stdin;
1	1	Не использовать сканирование для выпуска продукции
2	2	Ошибка во временной последовательности обнаружена посредством этого сканирования
3	3	Отсутствующие данные до этого сканирования
4	4	Калибровки нет
5	5	Географической локализации нет
6	6	Первое правильное время после установки часов
7	7	Изменение состояния прибора в результате этого сканирования
8	8	Зарезервировано
9	9	Зарезервировано
10	10	Зарезервировано
11	11	Зарезервировано
12	12	Зарезервировано
13	13	Зарезервировано
14	14	Зарезервировано
15	15	Зарезервировано
16	16	Зарезервировано
17	17	Зарезервировано
18	18	Зарезервировано
19	19	Зарезервировано
20	20	Зарезервировано
21	21	Зарезервировано
22	22	Зарезервировано
23	23	Зарезервировано
24	0	Отсутствующее значение
\.


--
-- Name: bufr_code_033030_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033030_seq', 24, true);


--
-- Data for Name: bufr_code_033031; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033031 (id, bit_number, description) FROM stdin;
1	1	Временное поле плохое, но может быть, вероятно, получено из предыдущего правильного времени
2	2	Временное поле плохое и не может быть получено из предыдущего правильного времени
3	3	Эта запись начинает последовательность, которая не соответствует предыдущим временам (т. е. временная неоднородность). Это может быть связано с установкой времени на приборе
4	4	Начало последовательности, которая очевидно повторяет принятые ранее времена сканирования
5	5	Строка сканирования не калибрована из-за неправильного времени
6	6	Строка сканирования калибрована с использованием количества строк сканирования меньше желательного из-за близости к началу или концу последовательности данных или отсутству
7	7	Строка сканирования не калибрована из-за плохого качества или недостатка данных точного термометра для измерения излучения
8	8	Строка сканирования калибрована посредством второстепенных данных точного термометра
9	9	Некоторые каналы не калиброваны для этого сканирования
10	10	Отсутствие калибровки из-за режима прибора
11	11	Сомнительная калибровка из-за ошибки в ориентации антенны в направлении космоса
12	12	Сомнительная калибровка из-за ошибки в ориентации антенны на черное тело
13	13	Отсутствие геогафического местоположения из-за неправильного времени
14	14	Сомнительное географическое местоположение из-за сомнительного временного кода (см. соответствующий бит с указанием временной погрешности)
15	15	Сомнительное географическое местоположение — только частично удовлетворяет контролю достоверности
16	16	Сомнительное географическое местоположение — не удовлетворяет контролю достоверности
17	17	Сомнительное географическое местоположение из-за контроля ориентации антенны
18	18	Холодное черное тело для калибровки линий сканирования
19	19	Теплое черное тело для калибровки линий сканирования
20	20	Изображение космоса для калибровки линий сканирования
21	21	Изображение Земли
22	22	Зарезервировано
23	23	Зарезервировано
24	0	Отсутствующее значение
\.


--
-- Name: bufr_code_033031_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033031_seq', 24, true);


--
-- Data for Name: bufr_code_033032; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033032 (id, bit_number, description) FROM stdin;
1	1	Отсутствие правильных показателей черного тела для строки сканирования
2	2	Отсутствие правильных пространственных показателей для этой строки
3	3	Отсутствие правильных PRTs для этой строки
4	4	Некоторые показатели черного тела являются неправильными для этой строки
5	5	Некоторые пространственные показатели являются неправильными для этой строки
6	6	Некоторые PRTs являются неправильными для этой строки
7	7	Зарезервировано (биты установлены на 0)
8	8	Зарезервировано (биты установлены на 0)
9	9	Зарезервировано (биты установлены на 0)
10	10	Зарезервировано (биты установлены на 0)
11	11	Зарезервировано (биты установлены на 0)
12	12	Зарезервировано (биты установлены на 0)
13	13	Зарезервировано (биты установлены на 0)
14	14	Зарезервировано (биты установлены на 0)
15	15	Зарезервировано (биты установлены на 0)
16	16	Зарезервировано (биты установлены на 0)
17	17	Зарезервировано (биты установлены на 0)
18	18	Зарезервировано (биты установлены на 0)
19	19	Зарезервировано (биты установлены на 0)
20	20	Зарезервировано (биты установлены на 0)
21	21	Зарезервировано (биты установлены на 0)
22	22	Зарезервировано (биты установлены на 0)
23	23	Зарезервировано (биты установлены на 0)
24	0	Отсутствующее значение
\.


--
-- Name: bufr_code_033032_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033032_seq', 24, true);


--
-- Data for Name: bufr_code_033033; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033033 (id, bit_number, description) FROM stdin;
1	1	Бит установлен на 1 в случае вторичной калибровки
2	2	Бит n установлен на 1, если яркостная температура в канале n-1 физически недостоверна или не была рассчитана из-за проблем калибровки
3	3	Бит n установлен на 1, если яркостная температура в канале n-1 физически недостоверна или не была рассчитана из-за проблем калибровки
4	4	Бит n установлен на 1, если яркостная температура в канале n-1 физически недостоверна или не была рассчитана из-за проблем калибровки
5	5	Бит n установлен на 1, если яркостная температура в канале n-1 физически недостоверна или не была рассчитана из-за проблем калибровки
6	6	Бит n установлен на 1, если яркостная температура в канале n-1 физически недостоверна или не была рассчитана из-за проблем калибровки
7	7	Бит n установлен на 1, если яркостная температура в канале n-1 физически недостоверна или не была рассчитана из-за проблем калибровки
8	8	Бит n установлен на 1, если яркостная температура в канале n-1 физически недостоверна или не была рассчитана из-за проблем калибровки
9	9	Бит n установлен на 1, если яркостная температура в канале n-1 физически недостоверна или не была рассчитана из-за проблем калибровки
10	10	Бит n установлен на 1, если яркостная температура в канале n-1 физически недостоверна или не была рассчитана из-за проблем калибровки
11	11	Бит n установлен на 1, если яркостная температура в канале n-1 физически недостоверна или не была рассчитана из-за проблем калибровки
12	12	Бит n установлен на 1, если яркостная температура в канале n-1 физически недостоверна или не была рассчитана из-за проблем калибровки
13	13	Бит n установлен на 1, если яркостная температура в канале n-1 физически недостоверна или не была рассчитана из-за проблем калибровки
14	14	Бит n установлен на 1, если яркостная температура в канале n-1 физически недостоверна или не была рассчитана из-за проблем калибровки
15	15	Бит n установлен на 1, если яркостная температура в канале n-1 физически недостоверна или не была рассчитана из-за проблем калибровки
16	16	Бит n установлен на 1, если яркостная температура в канале n-1 физически недостоверна или не была рассчитана из-за проблем калибровки
17	17	Бит n установлен на 1, если яркостная температура в канале n-1 физически недостоверна или не была рассчитана из-за проблем калибровки
18	18	Бит n установлен на 1, если яркостная температура в канале n-1 физически недостоверна или не была рассчитана из-за проблем калибровки
19	19	Бит n установлен на 1, если яркостная температура в канале n-1 физически недостоверна или не была рассчитана из-за проблем калибровки
20	20	Бит n установлен на 1, если яркостная температура в канале n-1 физически недостоверна или не была рассчитана из-за проблем калибровки
21	21	Бит n установлен на 1, если яркостная температура в канале n-1 физически недостоверна или не была рассчитана из-за проблем калибровки
22	22	Бит установлен на 1, если отсутствуют все каналы
23	23	Сомнительное значение
24	0	Отсутствующее значение
\.


--
-- Name: bufr_code_033033_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033033_seq', 24, true);


--
-- Data for Name: bufr_code_033035; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033035 (id, code, description) FROM stdin;
1	0	Автоматический контроль качества: значение принято без ручной проверки
2	1	Автоматический контроль качества: значение принято, в том числе после ручной проверки
3	2	Автоматический контроль качества: значение принято, затем исключено после ручной проверки
4	3	Автоматический контроль качества: значение исключено без ручной проверки
5	4	Автоматический контроль качества: значение исключено, в том числе после ручной проверки
6	5	Автоматический контроль качества: значение исключено, затем принято после ручной проверки
7	6	Данные флагов автоматического контроля качества: сомнительное значение и принято без руч ной проверки
8	7	Данные флагов автоматического контроля качества: сомнительные значения, затем исключены после ручной проверки
9	8	Значение исключено после ручной проверки
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_033035_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033035_seq', 16, true);


--
-- Data for Name: bufr_code_033037; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033037 (id, bit_number, description) FROM stdin;
1	1	Отклонение компонента u по отношению к первому приближению
2	2	Отклонение компонента v по отношению к первому приближению
3	3	Отклонение компонентов u и v по отношению к первому приближению
4	4	Ускорение компонента u
5	5	Ускорение компонента v
6	6	Ускорение компонентов u и v
7	7	Возможная наземная характеристика
8	8	Ускорение компонента u и возможная наземная характеристика
9	9	Ускорение компонента v и возможная наземная характеристика
10	10	Ускорение компонентов u и v и возможная наземная характеристика
11	11	Плохая первая ориентировочная информация о ветре
12	12	Нарушение корреляции
13	13	Прямоугольник поиска вне зоны
14	14	Прямоугольник цели вне зоны
15	15	Яркость элементов изображения вне пределов (шумовая строка)
16	16	Цель вне сетки широты/долготы
17	17	Цель вне давления минимум/максимум
18	18	Вектор замедления с флагом авторедактора
19	19	Векторы с флагом авторедактора
20	0	Отсутствующее значение
\.


--
-- Name: bufr_code_033037_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033037_seq', 20, true);


--
-- Data for Name: bufr_code_033038; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033038 (id, bit_number, description) FROM stdin;
1	1	Качество данных об общей вертикальной задержке считается плохим
2	2	Использованы спутники GALILEO
3	3	Использованы спутники GLONASS
4	4	Использованы спутники ГСОМ
5	5	Применены метеорологические данные
6	6	Применена корректировка атмосферной нагрузки
7	7	Применена нагрузка океанических приливов/отливов
8	8	Обработка данных о качестве климата
9	9	Обработка данных в близком к реальному масштабе времени
10	0	Отсутствующее значение
\.


--
-- Name: bufr_code_033038_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033038_seq', 10, true);


--
-- Data for Name: bufr_code_033039; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033039 (id, bit_number, description) FROM stdin;
1	1	Неноминальное качество
2	2	Офлайновая продукция
3	3	Флаг видимости на восходящей орбите
4	4	Обработка фазы эксцесса неноминальная
5	5	Обработка угла изгиба неноминальная
6	6	Обработка преломляющей способности неноминальная
7	7	Метеорологическая обработка неноминальная
8	8	Зарезервировано
9	9	Зарезервировано
10	10	Зарезервировано
11	11	Зарезервировано
12	12	Зарезервировано
13	13	Зарезервировано
14	14	Фоновый профиль неноминальный
15	15	Фоновый (т. е. невосстановленный) профиль присутствует
16	0	Отсутствующее значение
\.


--
-- Name: bufr_code_033039_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033039_seq', 16, true);


--
-- Data for Name: bufr_code_033041; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033041 (id, code, description) FROM stdin;
1	0	Следующее значение является истинным значением
2	1	Следующее значение больше, чем истинное значение (измерение попадает в нижний предел измерений прибора)
3	2	Следующее значение меньше, чем истинное значение (измерение попадает в верхний предел измерений прибора)
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_033041_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033041_seq', 4, true);


--
-- Data for Name: bufr_code_033042; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033042 (id, code, description) FROM stdin;
1	0	Исключающий нижний предел (>)
2	1	Включающий нижний предел (≥)
3	2	Исключающий верхний предел (<)
4	3	Включающий верхний предел (≤)
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_033042_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033042_seq', 8, true);


--
-- Data for Name: bufr_code_033043; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033043 (id, bit_number, description) FROM stdin;
1	1	MDS-море. Канал 3,7 микрона, только данные надира использовались для получения ТПМ. MDS-суша, зарезервировано
2	2	MDS-море. Канал 3,7 микрона, данные двойного обзора использовались для получения ТПМ. MDS-суша, зарезервировано
3	3	Изображение, полученное в надире, содержит данные дневного времени
4	4	Изображение по направлению полета содержит данные дневного времени
5	5	Зарезервировано
6	6	Зарезервировано
7	7	Зарезервировано
8	0	Отсутствующее значение
\.


--
-- Name: bufr_code_033043_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033043_seq', 8, true);


--
-- Data for Name: bufr_code_033044; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033044 (id, bit_number, description) FROM stdin;
1	1	Флаг среднего арифметического входных данных вне номинального интервала
2	2	Флаг среднеквадратического отклонения входных данных вне номинального интервала
3	3	Число пропусков во входных данных больше порогового значения
4	4	Процентная доля пропущенных линий больше порогового значения
5	5	Доплеровский центроид является неопределенным. Достоверность меньше характерного значения
6	6	Оценка неоднозначности по доплеровской частоте является неопределенной. Достоверность меньше характерного значения
7	7	Флаг среднего арифметического выходных данных вне номинального интервала
8	8	Флаг среднеквадратического отклонения выходных данных вне номинального интервала
9	9	Флаг неудачного или низкокачественного восстановления импульса с линейной частотной модуляцией
10	10	Набор данных отсутствует
11	11	Неправильные параметры пересылки данных на станцию приема
12	12	Признак прерывания счетчика итераций по азимуту. Процесс прерывания вычислений по азимуту не сошелся за минимальное число итераций
13	13	Процесс прерывания вычислений по азимуту не сошелся за минимальное число итераций
14	14	Степень достоверности фазовой информации. Мнимый пик спектра меньше, чем минимальное пороговое значение, или сдвиг нулевой задержки больше, чем минимальное пороговое
15	0	Отсутствующее значение
\.


--
-- Name: bufr_code_033044_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033044_seq', 15, true);


--
-- Data for Name: bufr_code_033047; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033047 (id, bit_number, description) FROM stdin;
1	1	Обнаружена ошибка и сделаны попытки восстановления
2	2	Обнаружено аномальное значение при бортовом оперировании данными (OBDH)
3	3	Обнаружено аномальное значение при обработке данных сверхстабильного осциллятора (USOP)
4	4	Ошибки, обнаруженные бортовым компьютером
5	5	Автоматическая регулировка усиления (АРУ) за пределами диапазона
6	6	Ошибка задержки приема (Rx). Дальность Rx вне досягаемости
7	7	Идентификатор ошибок измерения форм волны. Ошибка
8	8	Обнаружена аномалия в полосе S/ошибка
9	9	Зарезервировано
10	10	Зарезервировано
11	11	Зарезервировано
12	12	Яркостная температура (канал 1) вне допустимых значений
13	13	Яркостная температура (канал 2) вне допустимых значений
14	14	Зарезервировано
15	15	Ошибка слежения над океаном в полосе Ku
16	16	Ошибка слежения над океаном в полосе S
17	17	Ошибка слежения 1 над льдами в полосе Ku
18	18	Ошибка слежения 1 над льдами в полосе S
19	19	Ошибка слежения 2 над льдами в полосе Ku
20	20	Ошибка слежения 2 над льдами в полосе S
21	21	Ошибка слежения над морским льдом в полосе Ku
22	22	Ошибка вследствие арифметической погрешности
23	23	Состояние метеоданных. Нет карты
24	24	Состояние метеоданных. 1 карта
25	25	Состояние метеоданных. 2 карты плохого качества
26	26	Состояние метеоданных. 2 карты номинального качества
27	27	Состояние орбитального пропагатора для режима распространения, несколько ошибок
28	28	Состояние орбитального пропагатора для режима распространения, обнаружено предупреждение
29	29	Состояние орбитального пропагатора для режима инициализации, несколько ошибок
30	30	Состояние орбитального пропагатора для режима инициализации, обнаружено предупреждение
31	0	Отсутствующее значение
\.


--
-- Name: bufr_code_033047_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033047_seq', 31, true);


--
-- Data for Name: bufr_code_033048; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033048 (id, code, description) FROM stdin;
1	0	Инверсия успешна
2	1	Инверсия неуспешна
3	2	Зарезервирована
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_033048_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033048_seq', 4, true);


--
-- Data for Name: bufr_code_033049; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033049 (id, code, description) FROM stdin;
1	0	Внешнее значение направления ветра использовалось при инверсии
2	1	Внешнее значение направления ветра не использовалось при инверсии
3	2	Зарезервирована
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_033049_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033049_seq', 4, true);


--
-- Data for Name: bufr_code_033050; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033050 (id, code, description) FROM stdin;
1	0	Проверка качества не проводилась
2	1	Правильное значение (прошло все проверки)
3	2	Вероятно, хорошее, но значение не согласуется со статистическими данными (отличается от климатологических)
4	3	Вероятно, плохое (выброс, градиент, если другие проверки прошло)
5	4	Плохое значение, неприемлемое значение (не соответствует по масштабу, дает вертикальную нестабильность, выпадает из постоянного профиля)
6	5	Значение изменено в ходе контроля качества
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Интерполированное значение
10	9	Пригодно для оперативного использования; предупреждение: сверьтесь с документацией в отношении других видов использования
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_033050_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033050_seq', 16, true);


--
-- Data for Name: bufr_code_033052; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033052 (id, bit_number, description) FROM stdin;
1	1	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное измерение, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
2	2	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное измерение, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
3	3	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное измерение, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
4	4	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное измерение, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
5	5	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное измерение, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
6	6	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное измерение, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
7	7	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное измерение, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
8	8	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное измерение, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
9	9	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное измерение, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
10	10	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное измерение, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
11	11	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное измерение, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
12	12	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное измерение, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
13	13	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное измерение, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
14	14	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное измерение, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
15	15	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное измерение, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
16	16	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное измерение, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
17	17	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное измерение, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
18	18	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное измерение, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
19	19	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное измерение, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
20	20	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное измерение, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
21	0	Отсутствующее значение
\.


--
-- Name: bufr_code_033052_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033052_seq', 21, true);


--
-- Data for Name: bufr_code_033053; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033053 (id, bit_number, description) FROM stdin;
1	1	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
2	2	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
3	3	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
4	4	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
5	5	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
6	6	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
7	7	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
8	8	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
9	9	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
10	10	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
11	11	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
12	12	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
13	13	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
14	14	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
15	15	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
16	16	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
17	17	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
18	18	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
19	19	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
20	20	Первые 20 наименее значимых битов соответствуют 20 значениям (один на каждый блок данных, содержащий: 0 = действительное, 1 = недействительное). Бит 1 соответствует 20-му блоку данных
21	0	Отсутствующее значение
\.


--
-- Name: bufr_code_033053_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033053_seq', 21, true);


--
-- Data for Name: bufr_code_033060; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033060 (id, code, description) FROM stdin;
1	0	Хорошее
2	1	Плохое
3	2	Зарезервирована
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_033060_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033060_seq', 4, true);


--
-- Data for Name: bufr_code_033070; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033070 (id, code, description) FROM stdin;
1	0	Хорошее восстановление
2	1	Флаг плохой информации об аэрозоле или аномалия облученности НУОА-16
3	2	Солнечный зенитный угол больше 84 градусов
4	3	Остаточное излучение больше заданного предела при длине волны 380 нм
5	4	Противоречивые данные по озону
6	5	Разница между общим содержанием озона и рассчитанным содержанием озона по профилю на шаге 3 итерации превышает пороговое значение (установлено на 25 ед. Добсона)
7	6	Шаг 1 итерации озона расходится
8	7	Остаточное излучение любого канала больше 16 единиц или плохая энергетическая яркость
9	8	Недостаточное количество элементов изображения — не обработано
10	9	Успешное нулевое приближение — использованы прогностические данные по озону
11	10	Облака верхнего яруса в элементе изображения — не обработано
12	11	Успешное восстановление данных по озону
13	12	Неудачное восстановление данных по озону
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_033070_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033070_seq', 16, true);


--
-- Data for Name: bufr_code_033071; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033071 (id, code, description) FROM stdin;
1	0	Хорошее восстановление
2	1	Солнечный зенитный угол больше 84 градусов
3	2	Разница между шагом 3 и общим содержанием озона, рассчитанным по профилю, больше заданного предела (25 ед. Добсона)
4	3	Средняя результирующая погрешность в используемых длинах волн при восстановлении превышает пороговое значение
5	4	Результирующая погрешность превышает более чем в 3 раза заданную ошибку
6	5	Разница между восстановленным и заданным значением превышает более чем в 3 раза заданную ошибку
7	6	Расходящееся решение
8	7	Аномалия профиля верхнего уровня или аномалия «засветки»
9	8	Начальная погрешность больше 18,0 единиц N-величины
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
\.


--
-- Name: bufr_code_033071_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033071_seq', 15, true);


--
-- Data for Name: bufr_code_033072; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033072 (id, code, description) FROM stdin;
1	0	Хорошее восстановление
2	1	Отражательная способность за пределами диапазона
3	2	Более крупные элементы изображения (количество элементов изображения поперек орбиты менее 32) или ошибка сканирований обратного хода
4	3	Солнечный зенитный угол больше 88 градусов
5	4	Широта/долгота за пределами диапазона
6	5	Зенитный угол визирования или солнечный зенитный угол за пределами диапазона
7	6	Общий сбой процесса на шаге один
8	7	Содержание озона в первом приближении за пределами диапазона
9	8	Слишком много итераций (более 8)
10	9	Сбой расчета остатка на шаге один
11	10	Общий сбой процесса на шаге два
12	11	Профиль озона в первом приближении за пределами диапазона
13	12	Значение содержания озона на шаге два за пределами диапазона
14	13	Сбой расчета остатка на шаге два
15	14	Общий сбой процесса на шаге три
16	15	Тревожный сигнал о точности поправки на поляризацию
17	16	Энергетическая яркость или энергетическая освещенность меньше или равны нулю
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Зарезервировано
32	31	Отсутствующее значение
\.


--
-- Name: bufr_code_033072_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033072_seq', 32, true);


--
-- Data for Name: bufr_code_033075; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033075 (id, bit_number, description) FROM stdin;
1	1	Обнаружен пробел в записи необработанных данных (ЗНОД) (т. е. отсутствующее(ие) сканирование(я), предшествующее(ие) текущему сканированию)
2	2	Отмеченное время в последовательности отсутствует (например, время начала сканирования не в последовательности)
3	3	Данные контроля вычисления лямбды не могут быть обновлены (см. примечание 1)
4	4	Измеренные температуры каких-либо компонентов приборов (таких как лучерасщепитель,сканирующее зеркало, демпфер колебаний и т. п.) находятся вне допустимых диапазонов
5	5	По крайней мере, одно из значений контролируемых температур приборов сместилось более чем на указанное допустимое значение отклонения
6	6	Зарезервировано
7	7	Зарезервировано
8	8	Зарезервировано
9	9	Зарезервировано
10	10	Зарезервировано
11	11	Зарезервировано
12	12	Зарезервировано
13	0	Отсутствующее значение
\.


--
-- Name: bufr_code_033075_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033075_seq', 13, true);


--
-- Data for Name: bufr_code_033076; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033076 (id, bit_number, description) FROM stdin;
1	1	Лунная подсветка при первом обзоре дальнего космоса (см. примечание)
2	2	Лунная подсветка при втором обзоре дальнего космоса (см. примечание)
3	3	Зарезервировано
4	4	Зарезервировано
5	5	Зарезервировано
6	6	Зарезервировано
7	7	Зарезервировано
8	8	Зарезервировано
9	0	Отсутствующее значение
\.


--
-- Name: bufr_code_033076_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033076_seq', 9, true);


--
-- Data for Name: bufr_code_033077; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033077 (id, bit_number, description) FROM stdin;
1	1	Низкое качество ЗНД*
2	2	Неприемлемое качество ЗНД* (см. примечание 1)
3	3	Некорректная информация о геоположении ЗНД*
4	4	Низкое качество радиометрической калибровки
5	5	Недействительная радиометрическая калибровка (см. примечание 2)
6	6	Низкое качество спектральной калибровки
7	7	Недействительная спектральная калибровка (см. примечание 3)
8	8	Обнаружена и исправлена ошибка в счете полос (см. примечание 4)
9	9	Указатель дня/ночи (см. примечание 5)
10	10	Некорректные данные в ЗНОД** (см. примечание 6)
11	11	Обнаружена существенная ошибка в счете полос (см. примечание 7)
12	12	Сбой при упорядочении битов
13	13	Зарезервировано
14	14	Зарезервировано
15	15	Зарезервировано
16	16	Зарезервировано
17	17	Зарезервировано
18	18	Зарезервировано
19	0	Отсутствующие значения
\.


--
-- Name: bufr_code_033077_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033077_seq', 19, true);


--
-- Data for Name: bufr_code_033078; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033078 (id, code, description) FROM stdin;
1	0	Номинальное — данные о высоте и эфемеридные данные доступны
2	1	Отсутствующие данные являются не более чем небольшим пробелом в данных о высоте и эфемеридных данных
3	2	Отсутствующие данные являются более чем небольшим пробелом, но не выходят за пределы гранул
4	3	Отсутствующие данные выходят за пределы гранул данных о высоте и эфемеридных данных
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Зарезервировано
9	8	Зарезервировано
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_033078_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033078_seq', 16, true);


--
-- Data for Name: bufr_code_033079; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033079 (id, bit_number, description) FROM stdin;
1	1	Зарезервировано
2	2	Зарезервировано
3	3	Зарезервировано
4	4	Зарезервировано
5	5	Зарезервировано
6	6	№№ 1–7 контроль работоспособности неудачный
7	7	№№ 8–15 контроль работоспособности неудачный
8	8	№№ 16–23 контроль работоспособности неудачный
9	9	№№ 24–31 контроль работоспособности неудачный
10	10	№№ 32–39 контроль работоспособности неудачный
11	11	№№ 40–47 контроль работоспособности неудачный
12	12	№№ 48–55 контроль работоспособности неудачный
13	13	№№ 56–63 контроль работоспособности неудачный
14	14	№№ 64–70 контроль работоспособности неудачный
15	15	Квадратичная коррекция нелинейности, применяемая к радиометрической передаточной функции
16	0	Отсутствующее значение
\.


--
-- Name: bufr_code_033079_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033079_seq', 16, true);


--
-- Data for Name: bufr_code_033080; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033080 (id, bit_number, description) FROM stdin;
1	1	Зарезервировано
2	2	Зарезервировано
3	3	Зарезервировано
4	4	Зарезервировано
5	5	Зарезервировано
6	6	Зарезервировано
7	7	Условие деления на ноль или указание на то, что цикл вычислений не привел к сходимости данных по полосам частот K/Ka и V (KAV) PRT*
8	8	Условие деления на ноль или указание на то, что цикл вычислений не привел к сходимости данных в полосе частот WG PRT
9	9	Условие деления на ноль или указание на то, что цикл вычислений не привел к сходимости данных расчетов опорных значений температуры K по полосам частот K/Ka, V, W, G по PRT
10	10	Условие вне диапазона для полос частот K/Ka и V PRT
11	11	Условие вне диапазона для полосы частот WG PRT
12	12	Противоречивость значений температуры в полосах частот KAV PRT
13	13	Противоречивость значений температуры полосы частот WG PRT
14	14	Ошибка во временной последовательности
15	15	Пробел в данных — отсутствие сканирования(й), предшествующего(их) текущему сканированию
16	16	Достаточность полос частот KAV PRT — имеются недостаточные данные полос частот KAV PRT
17	17	Достаточность полосы частот WG PRT — имеются недостаточные данные полосы частот WG PRT
18	18	Ошибка положения антенны при калибровке по космосу
19	19	Ошибка положения антенны при калибровке по черному телу
20	0	Отсутствующее значение
\.


--
-- Name: bufr_code_033080_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033080_seq', 20, true);


--
-- Data for Name: bufr_code_033081; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033081 (id, bit_number, description) FROM stdin;
1	1	Зарезервировано
2	2	Зарезервировано
3	3	Луна в поле зрения при обзоре космоса
4	4	Ошибка регистрации — минимальный отсчет (импульс) черного тела меньше или равен максимальному при сканировании космоса
5	5	Уменьшенный объем калибровочных данных по сравнению с желаемым
6	6	Контроль полноты данных обзора космоса — наблюдается недостаточный объем данных обзора космоса
7	7	Контроль полноты данных обзора черного тела — наблюдается недостаточный объем данных обзора черного тела
8	8	Выход за пределы диапазона при обзоре космоса
9	9	Выход за пределы диапазона при обзоре черного тела
10	10	Противоречивость при обзоре космоса
11	11	Противоречивость при обзоре черного тела
12	0	Отсутствующее значение
\.


--
-- Name: bufr_code_033081_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033081_seq', 12, true);


--
-- Data for Name: bufr_code_033082; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033082 (id, bit_number, description) FROM stdin;
1	1	Зарезервировано
2	2	Зарезервировано
3	3	Зарезервировано
4	4	Зарезервировано
5	5	Зарезервировано
6	6	В пределах Южно-Атлантической аномалии
7	7	Неправильные входные данные (указывает на то, что любые эфемеридные данные космического аппарата или данные о высоте космического аппарата ошибочны)
8	8	Ошибочное нацеливание (указывает, что датчик направления визирования ЛОС не пересекаетгеоид, находится около лимба, имеет ошибочные углы датчика или другие подобные условия)
9	9	Плохой рельеф местности (указывает, что алгоритм не позволяет корректно учесть рельеф местности)
10	10	Ошибка определения углов солнца
11	11	Отсутствующие данные являются не более чем небольшим пробелом в данных о высоте и эфемеридных данных
12	12	Отсутствующие данные являются более чем небольшим пробелом в данных о высоте и эфемеридных данных, но не выходят за пределы гранул
13	13	Отсутствующие данные выходят за пределы гранул данных о высоте и эфемеридных данных
14	14	Число импульсов кодового датчика (за время дельта) не соответствует ожидаемому
15	15	Солнечное затмение в период сканирования диска Земли
16	0	Отсутствующее значение
\.


--
-- Name: bufr_code_033082_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033082_seq', 16, true);


--
-- Data for Name: bufr_code_033083; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033083 (id, bit_number, description) FROM stdin;
1	1	Зарезервировано
2	2	Зарезервировано
3	3	Зарезервировано
4	4	Зарезервировано
5	5	Зарезервировано
6	6	Зарезервировано
7	7	Плохое качество калибровки из-за неправильной коррекции космического визирования, OBС* и т. д. или использования предыдущих калибровок
8	8	Насыщенный элемент изображения
9	9	Отсутствующие данные — данные, необходимые для обработки результатов калибровки,отсутствуют
10	10	Калиброванная попиксельная энергетическая яркость вне диапазона
11	11	Калиброванная попиксельная отражательная способность или эффективная температура черного тела (EBBT) вне диапазона
12	12	Искажение за счет Луны при обзоре космоса
13	13	Данные сканирования отсутствуют (нет достоверных данных)
14	14	Качество для этой строки сканирования снижено. Величина определяется сочетанием числа шагов, необходимых для нахождения замены данных термистора или источника калибровки
15	15	Плохой детектор
16	0	Отсутствующее значение
\.


--
-- Name: bufr_code_033083_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033083_seq', 16, true);


--
-- Data for Name: bufr_code_033084; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033084 (id, bit_number, description) FROM stdin;
1	1	Зарезервировано
2	2	Зарезервировано
3	3	Зарезервировано
4	4	Зарезервировано
5	5	Зарезервировано
6	6	Средняя объемная ТПМ за пределами допустимого диапазона
7	7	ТПМ поверхностного слоя за пределами допустимого диапазона
8	8	Зенитный угол датчика > 40 градусов (элемент изображения выходит за рамки 40 градусов надира и поэтому не является высококачественным)
9	9	Ухудшение параметров — размер горизонтальной ячейки (РГЯ) > 1,3 км (РГЯ > 1,3 км, ширина полосы > 1 700 км, зенитный угол датчика > 50,3 градуса)
10	10	Исключение: не видно «океана» в минимальном элементе изображения
11	11	Ухудшение параметров: оптическая толщина аэрозоля (ОТА) > 0,6 (ОТА в горизонтальной ячейке > 0,6 на наклонной траектории (ОТА на длине волны 550 нм))
12	12	Исключение: ОТА > 1,0 (ОТА в горизонтальной ячейке > 1,0 на наклонной траектории (ОТА на длине волны 550 нм))
13	13	Солнечный блик присутствует в минимальном элементе изображения
14	14	Пороговая величина сплоченности льда превышена (ТПМ не отображается вследствие того, что сплоченность льда превышает пороговую величину, установленную в технических условиях системы)
15	15	Тонкие перистые облака обнаружены в минимальном элементе изображения
16	0	Отсутствующее значение
\.


--
-- Name: bufr_code_033084_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033084_seq', 16, true);


--
-- Data for Name: bufr_code_033086; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_033086 (id, code, description) FROM stdin;
1	0	Не воспроизведено
2	1	Исключено
3	2	Ухудшено
4	3	Высокого качества
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_033086_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_033086_seq', 8, true);


--
-- Data for Name: bufr_code_035000; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_035000 (id, code, description) FROM stdin;
1	0	Международные коды FM
2	1	Международные коды FM
3	2	Международные коды FM
4	3	Международные коды FM
5	4	Международные коды FM
6	5	Международные коды FM
7	6	Международные коды FM
8	7	Международные коды FM
9	8	Международные коды FM
10	9	Международные коды FM
11	10	Международные коды FM
12	11	Международные коды FM
13	12	Международные коды FM
14	13	Международные коды FM
15	14	Международные коды FM
16	15	Международные коды FM
17	16	Международные коды FM
18	17	Международные коды FM
19	18	Международные коды FM
20	19	Международные коды FM
21	20	Международные коды FM
22	21	Международные коды FM
23	22	Международные коды FM
24	23	Международные коды FM
25	24	Международные коды FM
26	25	Международные коды FM
27	26	Международные коды FM
28	27	Международные коды FM
29	28	Международные коды FM
30	29	Международные коды FM
31	30	Международные коды FM
32	31	Международные коды FM
33	32	Международные коды FM
34	33	Международные коды FM
35	34	Международные коды FM
36	35	Международные коды FM
37	36	Международные коды FM
38	37	Международные коды FM
39	38	Международные коды FM
40	39	Международные коды FM
41	40	Международные коды FM
42	41	Международные коды FM
43	42	Международные коды FM
44	43	Международные коды FM
45	44	Международные коды FM
46	45	Международные коды FM
47	46	Международные коды FM
48	47	Международные коды FM
49	48	Международные коды FM
50	49	Международные коды FM
51	50	Международные коды FM
52	51	Международные коды FM
53	52	Международные коды FM
54	53	Международные коды FM
55	54	Международные коды FM
56	55	Международные коды FM
57	56	Международные коды FM
58	57	Международные коды FM
59	58	Международные коды FM
60	59	Международные коды FM
61	60	Международные коды FM
62	61	Международные коды FM
63	62	Международные коды FM
64	63	Международные коды FM
65	64	Международные коды FM
66	65	Международные коды FM
67	66	Международные коды FM
68	67	Международные коды FM
69	68	Международные коды FM
70	69	Международные коды FM
71	70	Международные коды FM
72	71	Международные коды FM
73	72	Международные коды FM
74	73	Международные коды FM
75	74	Международные коды FM
76	75	Международные коды FM
77	76	Международные коды FM
78	77	Международные коды FM
79	78	Международные коды FM
80	79	Международные коды FM
81	80	Международные коды FM
82	81	Международные коды FM
83	82	Международные коды FM
84	83	Международные коды FM
85	84	Международные коды FM
86	85	Международные коды FM
87	86	Международные коды FM
88	87	Международные коды FM
89	88	Международные коды FM
90	89	Международные коды FM
91	90	Международные коды FM
92	91	Международные коды FM
93	92	Международные коды FM
94	93	Международные коды FM
95	94	Международные коды FM
96	95	Международные коды FM
97	96	Международные коды FM
98	97	Международные коды FM
99	98	Международные коды FM
100	99	Международные коды FM
101	100	Коды PA I
102	101	Коды PA I
103	102	Коды PA I
104	103	Коды PA I
105	104	Коды PA I
106	105	Коды PA I
107	106	Коды PA I
108	107	Коды PA I
109	108	Коды PA I
110	109	Коды PA I
111	110	Коды PA I
112	111	Коды PA I
113	112	Коды PA I
114	113	Коды PA I
115	114	Коды PA I
116	115	Коды PA I
117	116	Коды PA I
118	117	Коды PA I
119	118	Коды PA I
120	119	Коды PA I
121	120	Коды PA I
122	121	Коды PA I
123	122	Коды PA I
124	123	Коды PA I
125	124	Коды PA I
126	125	Коды PA I
127	126	Коды PA I
128	127	Коды PA I
129	128	Коды PA I
130	129	Коды PA I
131	130	Коды PA I
132	131	Коды PA I
133	132	Коды PA I
134	133	Коды PA I
135	134	Коды PA I
136	135	Коды PA I
137	136	Коды PA I
138	137	Коды PA I
139	138	Коды PA I
140	139	Коды PA I
141	140	Коды PA I
142	141	Коды PA I
143	142	Коды PA I
144	143	Коды PA I
145	144	Коды PA I
146	145	Коды PA I
147	146	Коды PA I
148	147	Коды PA I
149	148	Коды PA I
150	149	Коды PA I
151	150	Коды PA I
152	151	Коды PA I
153	152	Коды PA I
154	153	Коды PA I
155	154	Коды PA I
156	155	Коды PA I
157	156	Коды PA I
158	157	Коды PA I
159	158	Коды PA I
160	159	Коды PA I
161	160	Коды PA I
162	161	Коды PA I
163	162	Коды PA I
164	163	Коды PA I
165	164	Коды PA I
166	165	Коды PA I
167	166	Коды PA I
168	167	Коды PA I
169	168	Коды PA I
170	169	Коды PA I
171	170	Коды PA I
172	171	Коды PA I
173	172	Коды PA I
174	173	Коды PA I
175	174	Коды PA I
176	175	Коды PA I
177	176	Коды PA I
178	177	Коды PA I
179	178	Коды PA I
180	179	Коды PA I
181	180	Коды PA I
182	181	Коды PA I
183	182	Коды PA I
184	183	Коды PA I
185	184	Коды PA I
186	185	Коды PA I
187	186	Коды PA I
188	187	Коды PA I
189	188	Коды PA I
190	189	Коды PA I
191	190	Коды PA I
192	191	Коды PA I
193	192	Коды PA I
194	193	Коды PA I
195	194	Коды PA I
196	195	Коды PA I
197	196	Коды PA I
198	197	Коды PA I
199	198	Коды PA I
200	199	Коды PA I
201	200	Коды PA II
202	201	Коды PA II
203	202	Коды PA II
204	203	Коды PA II
205	204	Коды PA II
206	205	Коды PA II
207	206	Коды PA II
208	207	Коды PA II
209	208	Коды PA II
210	209	Коды PA II
211	210	Коды PA II
212	211	Коды PA II
213	212	Коды PA II
214	213	Коды PA II
215	214	Коды PA II
216	215	Коды PA II
217	216	Коды PA II
218	217	Коды PA II
219	218	Коды PA II
220	219	Коды PA II
221	220	Коды PA II
222	221	Коды PA II
223	222	Коды PA II
224	223	Коды PA II
225	224	Коды PA II
226	225	Коды PA II
227	226	Коды PA II
228	227	Коды PA II
229	228	Коды PA II
230	229	Коды PA II
231	230	Коды PA II
232	231	Коды PA II
233	232	Коды PA II
234	233	Коды PA II
235	234	Коды PA II
236	235	Коды PA II
237	236	Коды PA II
238	237	Коды PA II
239	238	Коды PA II
240	239	Коды PA II
241	240	Коды PA II
242	241	Коды PA II
243	242	Коды PA II
244	243	Коды PA II
245	244	Коды PA II
246	245	Коды PA II
247	246	Коды PA II
248	247	Коды PA II
249	248	Коды PA II
250	249	Коды PA II
251	250	Коды PA II
252	251	Коды PA II
253	252	Коды PA II
254	253	Коды PA II
255	254	Коды PA II
256	255	Коды PA II
257	256	Коды PA II
258	257	Коды PA II
259	258	Коды PA II
260	259	Коды PA II
261	260	Коды PA II
262	261	Коды PA II
263	262	Коды PA II
264	263	Коды PA II
265	264	Коды PA II
266	265	Коды PA II
267	266	Коды PA II
268	267	Коды PA II
269	268	Коды PA II
270	269	Коды PA II
271	270	Коды PA II
272	271	Коды PA II
273	272	Коды PA II
274	273	Коды PA II
275	274	Коды PA II
276	275	Коды PA II
277	276	Коды PA II
278	277	Коды PA II
279	278	Коды PA II
280	279	Коды PA II
281	280	Коды PA II
282	281	Коды PA II
283	282	Коды PA II
284	283	Коды PA II
285	284	Коды PA II
286	285	Коды PA II
287	286	Коды PA II
288	287	Коды PA II
289	288	Коды PA II
290	289	Коды PA II
291	290	Коды PA II
292	291	Коды PA II
293	292	Коды PA II
294	293	Коды PA II
295	294	Коды PA II
296	295	Коды PA II
297	296	Коды PA II
298	297	Коды PA II
299	298	Коды PA II
300	299	Коды PA II
301	300	Коды PA III
302	301	Коды PA III
303	302	Коды PA III
304	303	Коды PA III
305	304	Коды PA III
306	305	Коды PA III
307	306	Коды PA III
308	307	Коды PA III
309	308	Коды PA III
310	309	Коды PA III
311	310	Коды PA III
312	311	Коды PA III
313	312	Коды PA III
314	313	Коды PA III
315	314	Коды PA III
316	315	Коды PA III
317	316	Коды PA III
318	317	Коды PA III
319	318	Коды PA III
320	319	Коды PA III
321	320	Коды PA III
322	321	Коды PA III
323	322	Коды PA III
324	323	Коды PA III
325	324	Коды PA III
326	325	Коды PA III
327	326	Коды PA III
328	327	Коды PA III
329	328	Коды PA III
330	329	Коды PA III
331	330	Коды PA III
332	331	Коды PA III
333	332	Коды PA III
334	333	Коды PA III
335	334	Коды PA III
336	335	Коды PA III
337	336	Коды PA III
338	337	Коды PA III
339	338	Коды PA III
340	339	Коды PA III
341	340	Коды PA III
342	341	Коды PA III
343	342	Коды PA III
344	343	Коды PA III
345	344	Коды PA III
346	345	Коды PA III
347	346	Коды PA III
348	347	Коды PA III
349	348	Коды PA III
350	349	Коды PA III
351	350	Коды PA III
352	351	Коды PA III
353	352	Коды PA III
354	353	Коды PA III
355	354	Коды PA III
356	355	Коды PA III
357	356	Коды PA III
358	357	Коды PA III
359	358	Коды PA III
360	359	Коды PA III
361	360	Коды PA III
362	361	Коды PA III
363	362	Коды PA III
364	363	Коды PA III
365	364	Коды PA III
366	365	Коды PA III
367	366	Коды PA III
368	367	Коды PA III
369	368	Коды PA III
370	369	Коды PA III
371	370	Коды PA III
372	371	Коды PA III
373	372	Коды PA III
374	373	Коды PA III
375	374	Коды PA III
376	375	Коды PA III
377	376	Коды PA III
378	377	Коды PA III
379	378	Коды PA III
380	379	Коды PA III
381	380	Коды PA III
382	381	Коды PA III
383	382	Коды PA III
384	383	Коды PA III
385	384	Коды PA III
386	385	Коды PA III
387	386	Коды PA III
388	387	Коды PA III
389	388	Коды PA III
390	389	Коды PA III
391	390	Коды PA III
392	391	Коды PA III
393	392	Коды PA III
394	393	Коды PA III
395	394	Коды PA III
396	395	Коды PA III
397	396	Коды PA III
398	397	Коды PA III
399	398	Коды PA III
400	399	Коды PA III
401	400	Коды PA IV
402	401	Коды PA IV
403	402	Коды PA IV
404	403	Коды PA IV
405	404	Коды PA IV
406	405	Коды PA IV
407	406	Коды PA IV
408	407	Коды PA IV
409	408	Коды PA IV
410	409	Коды PA IV
411	410	Коды PA IV
412	411	Коды PA IV
413	412	Коды PA IV
414	413	Коды PA IV
415	414	Коды PA IV
416	415	Коды PA IV
417	416	Коды PA IV
418	417	Коды PA IV
419	418	Коды PA IV
420	419	Коды PA IV
421	420	Коды PA IV
422	421	Коды PA IV
423	422	Коды PA IV
424	423	Коды PA IV
425	424	Коды PA IV
426	425	Коды PA IV
427	426	Коды PA IV
428	427	Коды PA IV
429	428	Коды PA IV
430	429	Коды PA IV
431	430	Коды PA IV
432	431	Коды PA IV
433	432	Коды PA IV
434	433	Коды PA IV
435	434	Коды PA IV
436	435	Коды PA IV
437	436	Коды PA IV
438	437	Коды PA IV
439	438	Коды PA IV
440	439	Коды PA IV
441	440	Коды PA IV
442	441	Коды PA IV
443	442	Коды PA IV
444	443	Коды PA IV
445	444	Коды PA IV
446	445	Коды PA IV
447	446	Коды PA IV
448	447	Коды PA IV
449	448	Коды PA IV
450	449	Коды PA IV
451	450	Коды PA IV
452	451	Коды PA IV
453	452	Коды PA IV
454	453	Коды PA IV
455	454	Коды PA IV
456	455	Коды PA IV
457	456	Коды PA IV
458	457	Коды PA IV
459	458	Коды PA IV
460	459	Коды PA IV
461	460	Коды PA IV
462	461	Коды PA IV
463	462	Коды PA IV
464	463	Коды PA IV
465	464	Коды PA IV
466	465	Коды PA IV
467	466	Коды PA IV
468	467	Коды PA IV
469	468	Коды PA IV
470	469	Коды PA IV
471	470	Коды PA IV
472	471	Коды PA IV
473	472	Коды PA IV
474	473	Коды PA IV
475	474	Коды PA IV
476	475	Коды PA IV
477	476	Коды PA IV
478	477	Коды PA IV
479	478	Коды PA IV
480	479	Коды PA IV
481	480	Коды PA IV
482	481	Коды PA IV
483	482	Коды PA IV
484	483	Коды PA IV
485	484	Коды PA IV
486	485	Коды PA IV
487	486	Коды PA IV
488	487	Коды PA IV
489	488	Коды PA IV
490	489	Коды PA IV
491	490	Коды PA IV
492	491	Коды PA IV
493	492	Коды PA IV
494	493	Коды PA IV
495	494	Коды PA IV
496	495	Коды PA IV
497	496	Коды PA IV
498	497	Коды PA IV
499	498	Коды PA IV
500	499	Коды PA IV
501	500	Коды PA V
502	501	Коды PA V
503	502	Коды PA V
504	503	Коды PA V
505	504	Коды PA V
506	505	Коды PA V
507	506	Коды PA V
508	507	Коды PA V
509	508	Коды PA V
510	509	Коды PA V
511	510	Коды PA V
512	511	Коды PA V
513	512	Коды PA V
514	513	Коды PA V
515	514	Коды PA V
516	515	Коды PA V
517	516	Коды PA V
518	517	Коды PA V
519	518	Коды PA V
520	519	Коды PA V
521	520	Коды PA V
522	521	Коды PA V
523	522	Коды PA V
524	523	Коды PA V
525	524	Коды PA V
526	525	Коды PA V
527	526	Коды PA V
528	527	Коды PA V
529	528	Коды PA V
530	529	Коды PA V
531	530	Коды PA V
532	531	Коды PA V
533	532	Коды PA V
534	533	Коды PA V
535	534	Коды PA V
536	535	Коды PA V
537	536	Коды PA V
538	537	Коды PA V
539	538	Коды PA V
540	539	Коды PA V
541	540	Коды PA V
542	541	Коды PA V
543	542	Коды PA V
544	543	Коды PA V
545	544	Коды PA V
546	545	Коды PA V
547	546	Коды PA V
548	547	Коды PA V
549	548	Коды PA V
550	549	Коды PA V
551	550	Коды PA V
552	551	Коды PA V
553	552	Коды PA V
554	553	Коды PA V
555	554	Коды PA V
556	555	Коды PA V
557	556	Коды PA V
558	557	Коды PA V
559	558	Коды PA V
560	559	Коды PA V
561	560	Коды PA V
562	561	Коды PA V
563	562	Коды PA V
564	563	Коды PA V
565	564	Коды PA V
566	565	Коды PA V
567	566	Коды PA V
568	567	Коды PA V
569	568	Коды PA V
570	569	Коды PA V
571	570	Коды PA V
572	571	Коды PA V
573	572	Коды PA V
574	573	Коды PA V
575	574	Коды PA V
576	575	Коды PA V
577	576	Коды PA V
578	577	Коды PA V
579	578	Коды PA V
580	579	Коды PA V
581	580	Коды PA V
582	581	Коды PA V
583	582	Коды PA V
584	583	Коды PA V
585	584	Коды PA V
586	585	Коды PA V
587	586	Коды PA V
588	587	Коды PA V
589	588	Коды PA V
590	589	Коды PA V
591	590	Коды PA V
592	591	Коды PA V
593	592	Коды PA V
594	593	Коды PA V
595	594	Коды PA V
596	595	Коды PA V
597	596	Коды PA V
598	597	Коды PA V
599	598	Коды PA V
600	599	Коды PA V
601	600	Коды PA VI
602	601	Коды PA VI
603	602	Коды PA VI
604	603	Коды PA VI
605	604	Коды PA VI
606	605	Коды PA VI
607	606	Коды PA VI
608	607	Коды PA VI
609	608	Коды PA VI
610	609	Коды PA VI
611	610	Коды PA VI
612	611	Коды PA VI
613	612	Коды PA VI
614	613	Коды PA VI
615	614	Коды PA VI
616	615	Коды PA VI
617	616	Коды PA VI
618	617	Коды PA VI
619	618	Коды PA VI
620	619	Коды PA VI
621	620	Коды PA VI
622	621	Коды PA VI
623	622	Коды PA VI
624	623	Коды PA VI
625	624	Коды PA VI
626	625	Коды PA VI
627	626	Коды PA VI
628	627	Коды PA VI
629	628	Коды PA VI
630	629	Коды PA VI
631	630	Коды PA VI
632	631	Коды PA VI
633	632	Коды PA VI
634	633	Коды PA VI
635	634	Коды PA VI
636	635	Коды PA VI
637	636	Коды PA VI
638	637	Коды PA VI
639	638	Коды PA VI
640	639	Коды PA VI
641	640	Коды PA VI
642	641	Коды PA VI
643	642	Коды PA VI
644	643	Коды PA VI
645	644	Коды PA VI
646	645	Коды PA VI
647	646	Коды PA VI
648	647	Коды PA VI
649	648	Коды PA VI
650	649	Коды PA VI
651	650	Коды PA VI
652	651	Коды PA VI
653	652	Коды PA VI
654	653	Коды PA VI
655	654	Коды PA VI
656	655	Коды PA VI
657	656	Коды PA VI
658	657	Коды PA VI
659	658	Коды PA VI
660	659	Коды PA VI
661	660	Коды PA VI
662	661	Коды PA VI
663	662	Коды PA VI
664	663	Коды PA VI
665	664	Коды PA VI
666	665	Коды PA VI
667	666	Коды PA VI
668	667	Коды PA VI
669	668	Коды PA VI
670	669	Коды PA VI
671	670	Коды PA VI
672	671	Коды PA VI
673	672	Коды PA VI
674	673	Коды PA VI
675	674	Коды PA VI
676	675	Коды PA VI
677	676	Коды PA VI
678	677	Коды PA VI
679	678	Коды PA VI
680	679	Коды PA VI
681	680	Коды PA VI
682	681	Коды PA VI
683	682	Коды PA VI
684	683	Коды PA VI
685	684	Коды PA VI
686	685	Коды PA VI
687	686	Коды PA VI
688	687	Коды PA VI
689	688	Коды PA VI
690	689	Коды PA VI
691	690	Коды PA VI
692	691	Коды PA VI
693	692	Коды PA VI
694	693	Коды PA VI
695	694	Коды PA VI
696	695	Коды PA VI
697	696	Коды PA VI
698	697	Коды PA VI
699	698	Коды PA VI
700	699	Коды PA VI
701	700	Антарктические коды
702	701	Антарктические коды
703	702	Антарктические коды
704	703	Антарктические коды
705	704	Антарктические коды
706	705	Антарктические коды
707	706	Антарктические коды
708	707	Антарктические коды
709	708	Антарктические коды
710	709	Антарктические коды
711	710	Антарктические коды
712	711	Антарктические коды
713	712	Антарктические коды
714	713	Антарктические коды
715	714	Антарктические коды
716	715	Антарктические коды
717	716	Антарктические коды
718	717	Антарктические коды
719	718	Антарктические коды
720	719	Антарктические коды
721	720	Антарктические коды
722	721	Антарктические коды
723	722	Антарктические коды
724	723	Антарктические коды
725	724	Антарктические коды
726	725	Антарктические коды
727	726	Антарктические коды
728	727	Антарктические коды
729	728	Антарктические коды
730	729	Антарктические коды
731	730	Антарктические коды
732	731	Антарктические коды
733	732	Антарктические коды
734	733	Антарктические коды
735	734	Антарктические коды
736	735	Антарктические коды
737	736	Антарктические коды
738	737	Антарктические коды
739	738	Антарктические коды
740	739	Антарктические коды
741	740	Антарктические коды
742	741	Антарктические коды
743	742	Антарктические коды
744	743	Антарктические коды
745	744	Антарктические коды
746	745	Антарктические коды
747	746	Антарктические коды
748	747	Антарктические коды
749	748	Антарктические коды
750	749	Антарктические коды
751	750	Антарктические коды
752	751	Антарктические коды
753	752	Антарктические коды
754	753	Антарктические коды
755	754	Антарктические коды
756	755	Антарктические коды
757	756	Антарктические коды
758	757	Антарктические коды
759	758	Антарктические коды
760	759	Антарктические коды
761	760	Антарктические коды
762	761	Антарктические коды
763	762	Антарктические коды
764	763	Антарктические коды
765	764	Антарктические коды
766	765	Антарктические коды
767	766	Антарктические коды
768	767	Антарктические коды
769	768	Антарктические коды
770	769	Антарктические коды
771	770	Антарктические коды
772	771	Антарктические коды
773	772	Антарктические коды
774	773	Антарктические коды
775	774	Антарктические коды
776	775	Антарктические коды
777	776	Антарктические коды
778	777	Антарктические коды
779	778	Антарктические коды
780	779	Антарктические коды
781	780	Антарктические коды
782	781	Антарктические коды
783	782	Антарктические коды
784	783	Антарктические коды
785	784	Антарктические коды
786	785	Антарктические коды
787	786	Антарктические коды
788	787	Антарктические коды
789	788	Антарктические коды
790	789	Антарктические коды
791	790	Антарктические коды
792	791	Антарктические коды
793	792	Антарктические коды
794	793	Антарктические коды
795	794	Антарктические коды
796	795	Антарктические коды
797	796	Антарктические коды
798	797	Антарктические коды
799	798	Антарктические коды
800	799	Антарктические коды
801	800	Зарезервировано
802	801	Зарезервировано
803	802	Зарезервировано
804	803	Зарезервировано
805	804	Зарезервировано
806	805	Зарезервировано
807	806	Зарезервировано
808	807	Зарезервировано
809	808	Зарезервировано
810	809	Зарезервировано
811	810	Зарезервировано
812	811	Зарезервировано
813	812	Зарезервировано
814	813	Зарезервировано
815	814	Зарезервировано
816	815	Зарезервировано
817	816	Зарезервировано
818	817	Зарезервировано
819	818	Зарезервировано
820	819	Зарезервировано
821	820	Зарезервировано
822	821	Зарезервировано
823	822	Зарезервировано
824	823	Зарезервировано
825	824	Зарезервировано
826	825	Зарезервировано
827	826	Зарезервировано
828	827	Зарезервировано
829	828	Зарезервировано
830	829	Зарезервировано
831	830	Зарезервировано
832	831	Зарезервировано
833	832	Зарезервировано
834	833	Зарезервировано
835	834	Зарезервировано
836	835	Зарезервировано
837	836	Зарезервировано
838	837	Зарезервировано
839	838	Зарезервировано
840	839	Зарезервировано
841	840	Зарезервировано
842	841	Зарезервировано
843	842	Зарезервировано
844	843	Зарезервировано
845	844	Зарезервировано
846	845	Зарезервировано
847	846	Зарезервировано
848	847	Зарезервировано
849	848	Зарезервировано
850	849	Зарезервировано
851	850	Зарезервировано
852	851	Зарезервировано
853	852	Зарезервировано
854	853	Зарезервировано
855	854	Зарезервировано
856	855	Зарезервировано
857	856	Зарезервировано
858	857	Зарезервировано
859	858	Зарезервировано
860	859	Зарезервировано
861	860	Зарезервировано
862	861	Зарезервировано
863	862	Зарезервировано
864	863	Зарезервировано
865	864	Зарезервировано
866	865	Зарезервировано
867	866	Зарезервировано
868	867	Зарезервировано
869	868	Зарезервировано
870	869	Зарезервировано
871	870	Зарезервировано
872	871	Зарезервировано
873	872	Зарезервировано
874	873	Зарезервировано
875	874	Зарезервировано
876	875	Зарезервировано
877	876	Зарезервировано
878	877	Зарезервировано
879	878	Зарезервировано
880	879	Зарезервировано
881	880	Зарезервировано
882	881	Зарезервировано
883	882	Зарезервировано
884	883	Зарезервировано
885	884	Зарезервировано
886	885	Зарезервировано
887	886	Зарезервировано
888	887	Зарезервировано
889	888	Зарезервировано
890	889	Зарезервировано
891	890	Зарезервировано
892	891	Зарезервировано
893	892	Зарезервировано
894	893	Зарезервировано
895	894	Зарезервировано
896	895	Зарезервировано
897	896	Зарезервировано
898	897	Зарезервировано
899	898	Зарезервировано
900	899	Зарезервировано
901	900	Зарезервировано
902	901	Зарезервировано
903	902	Зарезервировано
904	903	Зарезервировано
905	904	Зарезервировано
906	905	Зарезервировано
907	906	Зарезервировано
908	907	Зарезервировано
909	908	Зарезервировано
910	909	Зарезервировано
911	910	Зарезервировано
912	911	Зарезервировано
913	912	Зарезервировано
914	913	Зарезервировано
915	914	Зарезервировано
916	915	Зарезервировано
917	916	Зарезервировано
918	917	Зарезервировано
919	918	Зарезервировано
920	919	Зарезервировано
921	920	Зарезервировано
922	921	Зарезервировано
923	922	Зарезервировано
924	923	Зарезервировано
925	924	Зарезервировано
926	925	Зарезервировано
927	926	Зарезервировано
928	927	Зарезервировано
929	928	Зарезервировано
930	929	Зарезервировано
931	930	Зарезервировано
932	931	Зарезервировано
933	932	Зарезервировано
934	933	Зарезервировано
935	934	Зарезервировано
936	935	Зарезервировано
937	936	Зарезервировано
938	937	Зарезервировано
939	938	Зарезервировано
940	939	Зарезервировано
941	940	Зарезервировано
942	941	Зарезервировано
943	942	Зарезервировано
944	943	Зарезервировано
945	944	Зарезервировано
946	945	Зарезервировано
947	946	Зарезервировано
948	947	Зарезервировано
949	948	Зарезервировано
950	949	Зарезервировано
951	950	Зарезервировано
952	951	Зарезервировано
953	952	Зарезервировано
954	953	Зарезервировано
955	954	Зарезервировано
956	955	Зарезервировано
957	956	Зарезервировано
958	957	Зарезервировано
959	958	Зарезервировано
960	959	Зарезервировано
961	960	Зарезервировано
962	961	Зарезервировано
963	962	Зарезервировано
964	963	Зарезервировано
965	964	Зарезервировано
966	965	Зарезервировано
967	966	Зарезервировано
968	967	Зарезервировано
969	968	Зарезервировано
970	969	Зарезервировано
971	970	Зарезервировано
972	971	Зарезервировано
973	972	Зарезервировано
974	973	Зарезервировано
975	974	Зарезервировано
976	975	Зарезервировано
977	976	Зарезервировано
978	977	Зарезервировано
979	978	Зарезервировано
980	979	Зарезервировано
981	980	Зарезервировано
982	981	Зарезервировано
983	982	Зарезервировано
984	983	Зарезервировано
985	984	Зарезервировано
986	985	Зарезервировано
987	986	Зарезервировано
988	987	Зарезервировано
989	988	Зарезервировано
990	989	Зарезервировано
991	990	Зарезервировано
992	991	Зарезервировано
993	992	Зарезервировано
994	993	Зарезервировано
995	994	Зарезервировано
996	995	Зарезервировано
997	996	Зарезервировано
998	997	Зарезервировано
999	998	Зарезервировано
1000	999	Зарезервировано
1001	1000	Не используются
1002	1001	Не используются
1003	1002	Не используются
1004	1003	Не используются
1005	1004	Не используются
1006	1005	Не используются
1007	1006	Не используются
1008	1007	Не используются
1009	1008	Не используются
1010	1009	Не используются
1011	1010	Не используются
1012	1011	Не используются
1013	1012	Не используются
1014	1013	Не используются
1015	1014	Не используются
1016	1015	Не используются
1017	1016	Не используются
1018	1017	Не используются
1019	1018	Не используются
1020	1019	Не используются
1021	1020	Не используются
1022	1021	Не используются
1023	1022	Не используются
1024	1023	Отсутствующее значение
\.


--
-- Name: bufr_code_035000_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_035000_seq', 1024, true);


--
-- Data for Name: bufr_code_035001; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_035001 (id, code, description) FROM stdin;
1	0	Реальное время
2	1	Время, близкое к реальному
3	2	Неоперативное время
4	3	Зарезервировано
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_035001_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_035001_seq', 8, true);


--
-- Data for Name: bufr_code_035030; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_035030 (id, code, description) FROM stdin;
1	0	Несоответствий нет
2	1	Несоответствие стандартным и рекомендуемым практике и процедурам, включая процедуры мониторинга
3	2	Несвоевременное обновление каталогов метеорологических бюллетеней
4	3	Неправильные справочники маршрутизации
5	4	Отсутствие гибкости в организации маршрутизации
6	5	Несоответствия в эксплуатации центров и цепей ГСТ
7	6	Потеря данных или задержка в трансляции данных по ГСТ
8	7	Маршрутизация данных, отличная от маршрутизации, рекомендуемой в плане
9	8	Различные недостатки
10	9	Зарезервировано
11	10	Зарезервировано
12	11	Зарезервировано
13	12	Зарезервировано
14	13	Зарезервировано
15	14	Зарезервировано
16	15	Отсутствующее значение
\.


--
-- Name: bufr_code_035030_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_035030_seq', 16, true);


--
-- Data for Name: bufr_code_035031; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_035031 (id, code, description) FROM stdin;
1	1	Достаточное количество и все приемлемого качества
2	2	Достаточное количество, но частично неприемлемого качества
3	3	Недостаточное количество, но все приемлемого качества
4	4	Недостаточное количество и неприемлемое качество
5	5	Некоторые сообщения неполные
6	6	Ненадежные или неправильно закодированные группы не могут интерпретироваться
7	7	Значительные ошибки кодирования
8	8	Не соблюдается передача в последовательном порядке
9	9	Сводка полностью непригодна и, таким образом, не учитывается
10	10	Определенные и устраненные недостатки
11	11	Определенные, но не устраненные недостатки
12	12	Недостатки не определены
13	13	Ошибки измерения
14	14	Взаимное несоответствие
15	15	Временное несоответствие
16	16	Ошибка прогноза
17	17	Отклонение
18	18	Улучшить систему контроля качества
19	19	Расширить программы обучения
20	20	Зарезервировано
21	21	Зарезервировано
22	22	Зарезервировано
23	23	Зарезервировано
24	24	Зарезервировано
25	25	Зарезервировано
26	26	Зарезервировано
27	27	Зарезервировано
28	28	Зарезервировано
29	29	Зарезервировано
30	30	Зарезервировано
31	31	Зарезервировано
32	32	Зарезервировано
33	33	Зарезервировано
34	34	Зарезервировано
35	35	Зарезервировано
36	36	Зарезервировано
37	37	Зарезервировано
38	38	Зарезервировано
39	39	Зарезервировано
40	40	Зарезервировано
41	41	Зарезервировано
42	42	Зарезервировано
43	43	Зарезервировано
44	44	Зарезервировано
45	45	Зарезервировано
46	46	Зарезервировано
47	47	Зарезервировано
48	48	Зарезервировано
49	49	Зарезервировано
50	50	Зарезервировано
51	51	Зарезервировано
52	52	Зарезервировано
53	53	Зарезервировано
54	54	Зарезервировано
55	55	Зарезервировано
56	56	Зарезервировано
57	57	Зарезервировано
58	58	Зарезервировано
59	59	Зарезервировано
60	60	Зарезервировано
61	61	Зарезервировано
62	62	Зарезервировано
63	63	Зарезервировано
64	64	Зарезервировано
65	65	Зарезервировано
66	66	Зарезервировано
67	67	Зарезервировано
68	68	Зарезервировано
69	69	Зарезервировано
70	70	Зарезервировано
71	71	Зарезервировано
72	72	Зарезервировано
73	73	Зарезервировано
74	74	Зарезервировано
75	75	Зарезервировано
76	76	Зарезервировано
77	77	Зарезервировано
78	78	Зарезервировано
79	79	Зарезервировано
80	80	Зарезервировано
81	81	Зарезервировано
82	82	Зарезервировано
83	83	Зарезервировано
84	84	Зарезервировано
85	85	Зарезервировано
86	86	Зарезервировано
87	87	Зарезервировано
88	88	Зарезервировано
89	89	Зарезервировано
90	90	Зарезервировано
91	91	Зарезервировано
92	92	Зарезервировано
93	93	Зарезервировано
94	94	Зарезервировано
95	95	Зарезервировано
96	96	Зарезервировано
97	97	Зарезервировано
98	98	Зарезервировано
99	99	Не используются
100	100	Не используются
101	101	Не используются
102	102	Не используются
103	103	Не используются
104	104	Не используются
105	105	Не используются
106	106	Не используются
107	107	Не используются
108	108	Не используются
109	109	Не используются
110	110	Не используются
111	111	Не используются
112	112	Не используются
113	113	Не используются
114	114	Не используются
115	115	Не используются
116	116	Не используются
117	117	Не используются
118	118	Не используются
119	119	Не используются
120	120	Не используются
121	121	Не используются
122	122	Не используются
123	123	Не используются
124	124	Не используются
125	125	Не используются
126	126	Не используются
127	127	Отсутствующее значение
\.


--
-- Name: bufr_code_035031_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_035031_seq', 127, true);


--
-- Data for Name: bufr_code_035032; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_035032 (id, code, description) FROM stdin;
1	1	Отсутствие групп данных вследствие слабого радиосигнала
2	2	Отсутствие групп данных вследствие выхода из строя центра
3	3	Отсутствие групп данных вследствие выхода из строя цепи
4	4	Отсутствие осуществления или обслуживания РОСС требуемой плотности
5	5	Недостаточное количество подготовленного персонала на обслуживаемых станциях
6	6	Нехватка расходных материалов
7	7	Неисправность приборов
8	8	Невыполнение процедур телесвязи
9	9	Прекращение выполнения некоторых программ наблюдения
10	10	Не используются
11	11	Не используются
12	12	Не используются
13	13	Не используются
14	14	Не используются
15	15	Отсутствующее значение
\.


--
-- Name: bufr_code_035032_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_035032_seq', 15, true);


--
-- Data for Name: bufr_code_035033; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_035033 (id, code, description) FROM stdin;
1	1	Нет недостатков
2	2	Наблюдения проводились на нерегулярной основе
3	3	Наблюдения проводились не в установленный срок
4	4	Наблюдения проводились, но данные не распространялись
5	5	Наблюдения проводились и направлены по неправильному адресу потребителей
6	6	Собранные данные не получены
7	7	Собранные данные переданы поздно
8	8	Собранные данные не передавались
9	9	Трудности в распространении ВЧ и в выборе подходящей частоты
10	10	Трудности в обслуживании оборудования связи на удаленных станциях
11	11	Нет альтернативной схемы для маршрутизации данных метеорологических наблюдений
12	12	Зарезервировано
13	13	Зарезервировано
14	14	Зарезервировано
15	15	Зарезервировано
16	16	Зарезервировано
17	17	Зарезервировано
18	18	Зарезервировано
19	19	Зарезервировано
20	20	Зарезервировано
21	21	Зарезервировано
22	22	Зарезервировано
23	23	Зарезервировано
24	24	Зарезервировано
25	25	Зарезервировано
26	26	Зарезервировано
27	27	Зарезервировано
28	28	Зарезервировано
29	29	Зарезервировано
30	30	Зарезервировано
31	31	Зарезервировано
32	32	Зарезервировано
33	33	Зарезервировано
34	34	Зарезервировано
35	35	Зарезервировано
36	36	Зарезервировано
37	37	Зарезервировано
38	38	Зарезервировано
39	39	Зарезервировано
40	40	Зарезервировано
41	41	Зарезервировано
42	42	Зарезервировано
43	43	Зарезервировано
44	44	Зарезервировано
45	45	Зарезервировано
46	46	Зарезервировано
47	47	Зарезервировано
48	48	Зарезервировано
49	49	Зарезервировано
50	50	Зарезервировано
51	51	Зарезервировано
52	52	Зарезервировано
53	53	Зарезервировано
54	54	Зарезервировано
55	55	Зарезервировано
56	56	Зарезервировано
57	57	Зарезервировано
58	58	Зарезервировано
59	59	Зарезервировано
60	60	Зарезервировано
61	61	Зарезервировано
62	62	Зарезервировано
63	63	Зарезервировано
64	64	Зарезервировано
65	65	Зарезервировано
66	66	Зарезервировано
67	67	Зарезервировано
68	68	Зарезервировано
69	69	Зарезервировано
70	70	Зарезервировано
71	71	Зарезервировано
72	72	Зарезервировано
73	73	Зарезервировано
74	74	Зарезервировано
75	75	Зарезервировано
76	76	Зарезервировано
77	77	Зарезервировано
78	78	Зарезервировано
79	79	Зарезервировано
80	80	Зарезервировано
81	81	Зарезервировано
82	82	Зарезервировано
83	83	Зарезервировано
84	84	Зарезервировано
85	85	Зарезервировано
86	86	Зарезервировано
87	87	Зарезервировано
88	88	Зарезервировано
89	89	Зарезервировано
90	90	Зарезервировано
91	91	Зарезервировано
92	92	Зарезервировано
93	93	Зарезервировано
94	94	Зарезервировано
95	95	Зарезервировано
96	96	Зарезервировано
97	97	Зарезервировано
98	98	Зарезервировано
99	99	Зарезервировано
100	100	Не используются
101	101	Не используются
102	102	Не используются
103	103	Не используются
104	104	Не используются
105	105	Не используются
106	106	Не используются
107	107	Не используются
108	108	Не используются
109	109	Не используются
110	110	Не используются
111	111	Не используются
112	112	Не используются
113	113	Не используются
114	114	Не используются
115	115	Не используются
116	116	Не используются
117	117	Не используются
118	118	Не используются
119	119	Не используются
120	120	Не используются
121	121	Не используются
122	122	Не используются
123	123	Отсутствующее значение
\.


--
-- Name: bufr_code_035033_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_035033_seq', 123, true);


--
-- Data for Name: bufr_code_035034; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_035034 (id, code, description) FROM stdin;
1	1	Незначительное улучшение
2	2	Значительное улучшение
3	3	Весьма значительное улучшение
4	4	Устойчивое
5	5	Уменьшающееся
6	6	Меры, необходимые для улучшения наблюдений в ночные сроки
7	7	Отсутствующее значение
\.


--
-- Name: bufr_code_035034_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_035034_seq', 7, true);


--
-- Data for Name: bufr_code_035035; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_035035 (id, code, description) FROM stdin;
1	0	Зарезервирована
2	1	Разрыв оболочки шара-зонда
3	2	Вынужденное снижение шара-зонда в результате обледенения
4	3	Утечка газа или уравновешенный шар-зонд
5	4	Слабый или затухающий сигнал
6	5	Отказ батареи
7	6	Отказ наземного оборудования
8	7	Радиопомехи
9	8	Отказ радиозонда
10	9	Чрезмерное количество отсутствующих групп данных
11	10	Зарезервирована
12	11	Чрезмерное количество отсутствующих данных о температуре
13	12	Чрезмерное количество отсутствующих данных о давлении
14	13	Прекращение работы пользователя
15	14	Зарезервировано
16	15	Зарезервировано
17	16	Зарезервировано
18	17	Зарезервировано
19	18	Зарезервировано
20	19	Зарезервировано
21	20	Зарезервировано
22	21	Зарезервировано
23	22	Зарезервировано
24	23	Зарезервировано
25	24	Зарезервировано
26	25	Зарезервировано
27	26	Зарезервировано
28	27	Зарезервировано
29	28	Зарезервировано
30	29	Зарезервировано
31	30	Другие
32	31	Отсутствующее значение
\.


--
-- Name: bufr_code_035035_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_035035_seq', 32, true);


--
-- Data for Name: bufr_code_040005; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_040005 (id, bit_number, description) FROM stdin;
1	1	Влажность почвы между –20 % и 0 %
2	2	Влажность почвы между 100 % и 120 %
3	3	Коррекция начала отсчета влажного обратного рассеяния
4	4	Коррекция начала отсчета сухого обратного рассеяния
5	5	Коррекция рассеяния объема в песке
6	6	Зарезервировано
7	7	Зарезервировано
8	0	Отсутствующее значение
\.


--
-- Name: bufr_code_040005_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_040005_seq', 8, true);


--
-- Data for Name: bufr_code_040006; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_040006 (id, bit_number, description) FROM stdin;
1	1	Не почва
2	2	Чувствительность к влажности почвы ниже предела
3	3	Шум азимута выше предела
4	4	Обратное рассеяние переднего-заднего луча вне диапазона
5	5	Наклон среднего-переднего луча вне диапазона
6	6	Наклон среднего-заднего луча вне диапазона
7	7	Влажность почвы ниже –20 %
8	8	Влажность почвы выше 120 %
9	9	Зарезервировано
10	10	Зарезервировано
11	11	Зарезервировано
12	12	Зарезервировано
13	13	Зарезервировано
14	14	Зарезервировано
15	15	Зарезервировано
16	0	Отсутствующее значение
\.


--
-- Name: bufr_code_040006_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_040006_seq', 16, true);


--
-- Data for Name: bufr_code_040011; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_040011 (id, bit_number, description) FROM stdin;
1	1	Флаг интерполяции средней высоты поверхности моря (MSS)
2	2	Флаг интерполяции океанского прилива, решение 1 (0 = 4 единицам над океаном, 1 = менее 4 единиц)
3	3	Флаг интерполяции океанского прилива, решение 2 (0 = 4 единицам над океаном, 1 = менее
4	4	Флаг интерполяции метеорологических данных (0 = 4 единицам над океаном, 1 = менее 4 единиц)
5	5	Зарезервировано
6	6	Зарезервировано
7	7	Зарезервировано
8	0	Отсутствующее значение
\.


--
-- Name: bufr_code_040011_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_040011_seq', 8, true);


--
-- Data for Name: bufr_code_040012; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_040012 (id, bit_number, description) FROM stdin;
1	1	Яркостная температура 18,7 ГГц
2	2	Яркостная температура 23,8 ГГц
3	3	Яркостная температура 34 ГГц
4	4	Зарезервировано
5	5	Зарезервировано
6	6	Зарезервировано
7	7	Зарезервировано
8	0	Отсутствующее значение
\.


--
-- Name: bufr_code_040012_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_040012_seq', 8, true);


--
-- Data for Name: bufr_code_040013; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_040013 (id, code, description) FROM stdin;
1	0	Интерполяция без пропуска между данными JMR*
2	1	Интерполяция с пропусками между данными JMR*
3	2	Экстраполяция данных JMR*
4	3	Неудавшаяся экстраполяция и интерполяция
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_040013_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_040013_seq', 8, true);


--
-- Data for Name: bufr_code_040020; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_040020 (id, bit_number, description) FROM stdin;
1	1	NZPD (номер нулевой разности хода) и ошибка комплексной калибровки
2	2	Полоса 3, искаженная вследствие выброса
3	3	Полоса 3, искаженная вследствие насыщения
4	4	Полоса 2, искаженная вследствие выброса
5	5	Полоса 1, искаженная вследствие выброса
6	6	Переполнение/ недостаточность данных
7	7	Ошибка обработки на борту
8	8	Ошибка спектральной калибровки
9	9	Ошибка радиометрической калибровки
10	10	Данные AVHRR отсутствуют
11	11	Данные IIS отсутствуют
12	12	Данные зондирующего устройства отсутствуют
13	13	GqisFlagQual результирующий флаг для всех полос
14	14	Ошибка обработки на земле
15	15	Ошибка взаимной калибровки IASI/AVHRR
16	16	Резервный
17	0	Отсутствующее значение
\.


--
-- Name: bufr_code_040020_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_040020_seq', 17, true);


--
-- Data for Name: bufr_code_040023; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_040023 (id, bit_number, description) FROM stdin;
1	1	Последовательность полосы (0 = 3Ku_1C_3Ku, 1 = 2Ku_1C_2Ku)
2	2	Частота полосы C (0 = 320 МГц, 1 = 100 Мгц)
3	3	Статус полосы C (0 = вкл., 1 = выкл.)
4	4	Статус полосы Ku (0 = вкл., 1 = выкл.)
5	0	Отсутствующее значение
\.


--
-- Name: bufr_code_040023_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_040023_seq', 5, true);


--
-- Data for Name: bufr_code_040024; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_040024 (id, code, description) FROM stdin;
1	0	Имеются 2 карты (разница 6 часов)
2	1	Имеются 2 карты (разница > 6 часов)
3	2	Имеется 1 карта; данные экстраполируются
4	3	Карты не используются
5	4	Зарезервировано
6	5	Зарезервировано
7	6	Зарезервировано
8	7	Отсутствующее значение
\.


--
-- Name: bufr_code_040024_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_040024_seq', 8, true);


--
-- Data for Name: bufr_code_040025; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_code_040025 (id, code, description) FROM stdin;
1	0	Хорошая
2	1	Плохая
3	2	Зарезервировано
4	3	Отсутствующее значение
\.


--
-- Name: bufr_code_040025_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_code_040025_seq', 4, true);


--
-- Data for Name: bufr_codes; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bufr_codes (id, table_name, description, table_code) FROM stdin;
1	bufr_code_001003	Номер региона ВМО/географический район	001003
2	bufr_code_001024	Источник данных о скорости ветра	001024
3	bufr_code_001028	Источник данных об оптической плотности аэрозоля (ОПА)	001028
4	bufr_code_001029	Источник данных о ПСИ*	001029
5	bufr_code_001036	Агентство, ответственное за функционирование наблюдательной платформы	001036
6	bufr_code_001038	Источник данных о доле морского льда	001038
7	bufr_code_001052	Идентификатор передатчика платформы	001052
8	bufr_code_001090	Способ определения первоначальных возмущений	001090
9	bufr_code_001092	Тип ансамблевого прогноза	001092
10	bufr_code_001101	Указатель страны	001101
11	bufr_code_002001	Тип станции	002001
12	bufr_code_002002	Тип приборного обеспечения для измерения ветра	002002
13	bufr_code_002003	Тип используемого измерительного оборудования	002003
14	bufr_code_002004	Тип приборов для измерения испарения или вид сельскохозяйственной культуры, по которой сообщаются данные об эвапотранспирации	002004
15	bufr_code_002013	Поправка на солнечную и инфракрасную радиацию	002013
16	bufr_code_002015	Полнота радиозондовых измерений	002015
17	bufr_code_002016	Конфигурация зонда	002016
18	bufr_code_002017	Алгоритмы поправок для измерений влажности	002017
19	bufr_code_002020	Классификация спутников	002020
20	bufr_code_002021	Данные о спутниковых приборах, используемые при обработке	002021
21	bufr_code_002022	Используемая методика обработки спутниковых данных. Битовые флаги, показывающие элементы, включенные в обработку данных зондирования	002022
22	bufr_code_002023	Метод расчета ветра по спутниковым данным	002023
23	bufr_code_002024	Метод вычисления средней влажности по слою	002024
24	bufr_code_002025	Спутниковые каналы, используемые в вычислениях	002025
25	bufr_code_002030	Метод измерения течения	002030
26	bufr_code_002031	Продолжительность и время измерения течения	002031
27	bufr_code_002032	Указатель преобразования в цифровую форму	002032
28	bufr_code_002033	Метод измерения солености/глубины	002033
29	bufr_code_002034	Тип плавучего якоря	002034
30	bufr_code_002036	Тип буя	002036
31	bufr_code_002037	Метод наблюдения за приливами	002037
32	bufr_code_002038	Метод измерения температуры воды и/или солености	002038
33	bufr_code_002039	Метод измерения температуры по смоченному термометру	002039
34	bufr_code_002040	Метод исключения скорости и направления движения платформы при определении параметров течения	002040
35	bufr_code_002041	Метод оценки сводок, касающихся синоптических характеристик	002041
36	bufr_code_002042	Указатель скорости поверхностного морского течения	002042
37	bufr_code_002044	Указатель метода расчета данных о спектре волны	002044
38	bufr_code_002045	Указатель типа платформы	002045
39	bufr_code_002046	Приборы, используемые для измерения волн	002046
40	bufr_code_002047	Тип/производитель платформы глубоководного измерителя волн цунами	002047
41	bufr_code_002048	Указатель спутникового датчика	002048
42	bufr_code_002049	Используемая методика обработки данных геостационарных спутников	002049
43	bufr_code_002050	Используемые каналы геостационарных спутников зондирования	002050
44	bufr_code_002051	Указатель для определения метода наблюдения за экстремальными температурами	002051
45	bufr_code_002052	Каналы для получения изображений, используемые на геостационарных спутниках	002052
46	bufr_code_002053	Характеристики яркостной температуры GOES-I/M	002053
47	bufr_code_002054	Характеристики параметров зондирований GOES-I/M	002054
48	bufr_code_002055	Статистические параметры геостационарного зондирования	002055
49	bufr_code_002056	Статистика точности геостационарного зондирования	002056
50	bufr_code_002057	Источник информации в нулевом приближении для зондирований GOES-I/M	002057
51	bufr_code_002058	Эффективное время первой ориентировочной информации для зондирований GOES-I/M	002058
52	bufr_code_002059	Источник аналитической информации для зондирований GOES-I/M	002059
53	bufr_code_002060	Источник приземной информации для зондирований GOES-I/M	002060
54	bufr_code_002061	Навигационная система воздушного судна	002061
55	bufr_code_002062	Тип системы ретрансляции данных с воздушного судна	002062
56	bufr_code_002064	Качество угла крена воздушного судна	002064
57	bufr_code_002066	Наземная система приема сигналов радиозонда	002066
58	bufr_code_002070	Первоначальная спецификация широты/долготы	002070
59	bufr_code_002080	Производитель шара-зонда	002080
60	bufr_code_002081	Тип шара-зонда	002081
61	bufr_code_002083	Тип укрытия для шаров-зондов	002083
62	bufr_code_002084	Тип газа, используемого для шара-зонда	002084
63	bufr_code_002095	Тип датчика давления	002095
64	bufr_code_002096	Тип датчика температуры	002096
65	bufr_code_002097	Тип датчика влажности	002097
66	bufr_code_002099	Поляризация	002099
67	bufr_code_002101	Тип антенны	002101
68	bufr_code_002103	Обтекатель антенны	002103
69	bufr_code_002104	Поляризация антенны	002104
70	bufr_code_002115	Тип оборудования для приземных наблюдений	002115
71	bufr_code_002119	Режим работы прибора RA-2	002119
72	bufr_code_002131	Временной контроль чувствительности (STC)	002131
73	bufr_code_002137	Соотношение двойной частоты повторения импульсов (ЧПИ) радиолокатора	002137
74	bufr_code_002138	Направление вращения антенны	002138
75	bufr_code_002139	Компоновка приборов SIRAL	002139
76	bufr_code_002143	Тип прибора для измерения озона	002143
77	bufr_code_002144	Тип источника света для спектрофотометра Брюйера	002144
78	bufr_code_002145	Установка длины волны для приборов Добсона	002145
79	bufr_code_002146	Условия источника для приборов Добсона	002146
80	bufr_code_002148	Система сбора данных и/или определения местоположения	002148
81	bufr_code_002149	Тип буя для сбора данных	002149
82	bufr_code_002150	Номер канала используемого прибора TOVS/ATOVS/AVHRR	002150
83	bufr_code_002151	Идентификатор радиометра	002151
84	bufr_code_002152	Спутниковые приборы, используемые при обработке данных	002152
85	bufr_code_002158	Приборы RA-2	002158
86	bufr_code_002159	Приборы MWR	002159
87	bufr_code_002160	Длина волны радиолокатора	002160
88	bufr_code_002163	Метод определения высоты	002163
89	bufr_code_002164	Метод корреляции слежения	002164
90	bufr_code_002165	Флаги типа излучения	002165
91	bufr_code_002166	Тип излучения	002166
92	bufr_code_002167	Метод расчета излучения	002167
93	bufr_code_002169	Тип анемометра	002169
94	bufr_code_002170	Самолетные датчики влажности	002170
95	bufr_code_002172	Тип продукции по атмосферным газам, (восстановленной по спутниковым данным)	002172
96	bufr_code_002175	Метод измерения осадков	002175
97	bufr_code_002176	Метод измерения состояния поверхности земли	002176
98	bufr_code_002177	Метод измерения высоты снежного покрова	002177
99	bufr_code_002178	Метод измерения жидкой фазы осадков	002178
100	bufr_code_002179	Тип алгоритма состояния неба	002179
101	bufr_code_002180	Основная система определения текущей погоды	002180
102	bufr_code_002181	Дополнительный датчик текущей погоды	002181
103	bufr_code_002182	Система измерения видимости	002182
104	bufr_code_002183	Система обнаружения облаков	002183
105	bufr_code_002184	Тип датчика обнаружения молний	002184
106	bufr_code_002185	Метод измерения испарения	002185
107	bufr_code_002186	Способность обнаруживать явления осадков	002186
108	bufr_code_002187	Способность обнаруживать другие явления погоды	002187
109	bufr_code_002188	Способность обнаруживать явления, ухудшающие видимость	002188
110	bufr_code_002189	Способность различать удары молнии	002189
111	bufr_code_002191	Расчет геопотенциальной высоты	002191
112	bufr_code_004059	Сроки наблюдений, использованные для вычисления сообщённых средних значений	004059
113	bufr_code_004080	Период усреднения для следующего значения	004080
114	bufr_code_008001	Значимость вертикального зондирования	008001
115	bufr_code_008002	Вертикальная значимость (приземные наблюдения)	008002
116	bufr_code_008003	Вертикальная значимость (спутниковые наблюдения)	008003
117	bufr_code_008004	Фаза полета воздушного судна	008004
118	bufr_code_008005	Значимость приземного синоптического образования	008005
119	bufr_code_008006	Значимость вертикального зондирования озона	008006
120	bufr_code_008007	Значимость размера	008007
121	bufr_code_008008	Значимость вертикального зондирования радиации	008008
122	bufr_code_008009	Подробная фаза полета воздушного судна	008009
123	bufr_code_008010	Описатель поверхности (для данных о температуре)	008010
124	bufr_code_008011	Метеорологическая характеристика	008011
125	bufr_code_008012	Описатель суши/моря	008012
126	bufr_code_008013	Описатель дня/ночи	008013
127	bufr_code_008014	Описатель дальности видимости на взлетно-посадочной полосе	008014
128	bufr_code_008016	Описатель изменения прогноза трендового типа или прогноза по аэродрому	008016
129	bufr_code_008017	Описатель времени, когда ожидается изменение прогноза	008017
130	bufr_code_008018	Тип поверхности суша/лед по наблюдениям SEAWINDS	008018
131	bufr_code_008019	Определитель для следующего указателя центра	008019
132	bufr_code_008021	Значимость времени	008021
133	bufr_code_008023	Данные первого порядка*	008023
134	bufr_code_008024	Данные о разностях*	008024
135	bufr_code_008025	Описатель разницы во времени	008025
136	bufr_code_008026	Значимость матрицы	008026
137	bufr_code_008029	Тип поверхности	008029
138	bufr_code_008033	Метод вычисления процента достоверности	008033
139	bufr_code_008035	Тип проводимого мониторинга	008035
140	bufr_code_008036	Тип центра или станции, проводящей мониторинг	008036
141	bufr_code_008039	Значимость времени (авиационный прогноз)	008039
142	bufr_code_008040	Особые точки по данным радиозондирования	008040
143	bufr_code_008041	Значимость данных	008041
144	bufr_code_008042	Значимость продленного вертикального зондирования	008042
145	bufr_code_008043	Тип химических или физических составляющих атмосферы	008043
146	bufr_code_008050	Определитель ряда отсутствующих значений при расчете статистических данных	008050
147	bufr_code_008051	Описатель числа отсутствующих значений в расчетах статистики	008051
148	bufr_code_008052	Условие, для которого далее указывается число дней с явлением	008052
149	bufr_code_008053	Описатель дня с явлением	008053
150	bufr_code_008054	Описатель скорости ветра или порывов ветра	008054
151	bufr_code_008060	Значимость режима сканирования выборки	008060
152	bufr_code_008065	Указатель солнечных бликов	008065
153	bufr_code_008066	Указатель полупрозрачности	008066
154	bufr_code_008070	Описатель продукции TOVS/ATOVS	008070
155	bufr_code_008072	Тип элемента(ов) изображения	008072
156	bufr_code_008074	Тип отраженного сигнала альтиметра	008074
157	bufr_code_008075	Определитель восходящей/нисходящей орбиты	008075
158	bufr_code_008076	Тип полосы	008076
159	bufr_code_008077	Тип поверхности, зондируемой радиометром	008077
160	bufr_code_008079	Статус продукции	008079
161	bufr_code_008080	Описатель флага качества ГТСПП*	008080
162	bufr_code_008081	Тип оборудования	008081
163	bufr_code_008082	Модификация высоты датчика по другому значению	008082
164	bufr_code_008083	Указатель номинального значения	008083
165	bufr_code_008085	Указатель луча	008085
166	bufr_code_008086	Вертикальная значимость данных для ЧПП	008086
167	bufr_code_010063	Характеристика барической тенденции	010063
168	bufr_code_010064	Крейсерский эшелон SIGMET	010064
169	bufr_code_011030	Повышенная степень турбулентности	011030
170	bufr_code_011031	Степень турбулентности	011031
171	bufr_code_011037	Индекс турбулентности	011037
172	bufr_code_011038	Время наступления пиковой скорости вихревой диссипации	011038
173	bufr_code_011039	Расширенное время наступления пиковой скорости вихревой диссипации	011039
174	bufr_code_013038	Сверхадиабатический указатель	013038
175	bufr_code_013039	Тип поверхности (лед/снег)	013039
176	bufr_code_013040	Флаг поверхности	013040
177	bufr_code_013041	Категория стабильности Пасквиля — Гиффорда	013041
178	bufr_code_013051	Повторяемость группы, осадки	013051
179	bufr_code_013056	Характер и интенсивность осадков	013056
180	bufr_code_013057	Время начала или окончания осадков	013057
181	bufr_code_015025	Тип загрязняющего вещества	015025
182	bufr_code_019001	Тип синоптической характеристики	019001
183	bufr_code_019008	Вертикальное распространение циркуляции	019008
184	bufr_code_019010	Метод отслеживания центра синоптической характеристики	019010
185	bufr_code_019100	Временной интервал для расчета движения тропического циклона	019100
186	bufr_code_019101	Точность местоположения центра тропического циклона	019101
187	bufr_code_019102	Форма и четкость определения глаза тропического циклона	019102
188	bufr_code_019103	Диаметр большой оси глаза тропического циклона	019103
189	bufr_code_019104	Изменение в характере глаза в течение 30 минут	019104
190	bufr_code_019105	Расстояние между концом спиральной полосы и центром	019105
191	bufr_code_019107	Временной интервал, за который рассчитывалось перемещение тропического циклона	019107
192	bufr_code_019108	Точность географического положения тропического циклона	019108
193	bufr_code_019109	Средний диаметр сплошной облачности тропического циклона	019109
194	bufr_code_019110	Видимое изменение в интенсивности тропического циклона за 24 часа	019110
195	bufr_code_019113	Тип системы облаков номера ТД	019113
196	bufr_code_019117	Тип картины облачности номера ТМ	019117
197	bufr_code_019119	Тип окончательного Т номера	019119
198	bufr_code_020003	Текущая погода	020003
199	bufr_code_020004	Прошедшая погода (1) и (2)	020004
200	bufr_code_020005	Прошедшая погода (1) и (2)	020005
201	bufr_code_020006	Правила полетов	020006
202	bufr_code_020008	Распределение облачности для авиации	020008
203	bufr_code_020009	Общий указатель погоды (TAF/METAR)	020009
204	bufr_code_020011	Количество облаков	020011
205	bufr_code_020012	Типы облаков	020012
206	bufr_code_020017	Описание верхней границы облачности	020017
207	bufr_code_020018	Тенденция дальности видимости на взлетно-посадочной полосе	020018
208	bufr_code_020021	Тип осадков	020021
209	bufr_code_020022	Характер осадков	020022
210	bufr_code_020023	Другие метеорологические явления	020023
211	bufr_code_020024	Интенсивность явления	020024
212	bufr_code_020025	Явления, ухудшающие видимость	020025
213	bufr_code_020026	Характер явления, ухудшающего видимость	020026
214	bufr_code_020027	Возникновение явления*	020027
215	bufr_code_020028	Ожидаемое изменение в интенсивности	020028
216	bufr_code_020029	Флаг дождя	020029
217	bufr_code_020032	Скорость нарастания льда	020032
218	bufr_code_020033	Причина нарастания льда	020033
219	bufr_code_020034	Сплоченность морского льда	020034
220	bufr_code_020035	Количество и тип льда	020035
221	bufr_code_020036	Ледовая обстановка	020036
222	bufr_code_020037	Стадии развития льда	020037
223	bufr_code_020040	Эволюция поземка	020040
224	bufr_code_020041	Обледенение фюзеляжа	020041
225	bufr_code_020042	Наличие обледенения фюзеляжа	020042
226	bufr_code_020045	Условия переохлажденных крупных капель (SLD)	020045
227	bufr_code_020048	Эволюция характеристики	020048
228	bufr_code_020050	Индекс облачности	020050
229	bufr_code_020055	Состояние неба в тропиках	020055
230	bufr_code_020056	Фазовое состояние воды в облаке	020056
231	bufr_code_020062	Состояние поверхности почвы (со снегом или без снега)	020062
232	bufr_code_020063	Особые явления	020063
233	bufr_code_020071	Точность местоположения и скорость атмосфериков	020071
234	bufr_code_020085	Общее состояние взлетно-посадочной полосы	020085
235	bufr_code_020086	Отложения на взлетно-посадочной полосе	020086
236	bufr_code_020087	Загрязнение взлетно-посадочной полосы	020087
237	bufr_code_020089	Коэффициент трения на взлетно-посадочной полосе	020089
238	bufr_code_020090	Особые облака	020090
239	bufr_code_020101	Название саранчи (или ее разновидности)	020101
240	bufr_code_020102	Цвет (зрелость) саранчи	020102
241	bufr_code_020103	Стадия развития саранчи	020103
242	bufr_code_020104	Состояние формирования стаи или кулиги саранчи	020104
243	bufr_code_020105	Размер стаи или кулиги саранчи и время прохождения стаи	020105
244	bufr_code_020106	Плотность популяции саранчи	020106
245	bufr_code_020107	Направления движения стаи саранчи	020107
246	bufr_code_020108	Протяженность растительного покрова	020108
247	bufr_code_020119	Полярность разряда молнии	020119
248	bufr_code_020124	Разряд или вспышка молнии	020124
249	bufr_code_020136	Дополнительный тип облачности	020136
250	bufr_code_021066	Данные о достоверности продукции волнового рефлектометра	021066
251	bufr_code_021067	Данные о достоверности продукции ветра	021067
252	bufr_code_021068	Данные о достоверности продукции радиолокационного альтиметра	021068
253	bufr_code_021069	Данные о достоверности продукции ТПМ	021069
254	bufr_code_021070	Данные о достоверности продукции по ТПМ (SADIST-2)	021070
255	bufr_code_021072	Статус калибровки альтиметра на спутнике	021072
256	bufr_code_021073	Режим спутникового альтиметра	021073
257	bufr_code_021076	Представление интенсивностей	021076
258	bufr_code_021109	Качество ячейки векторов ветра по измерениям SEAWINDS	021109
259	bufr_code_021115	Качество параметра сигма-0 по измерениям SEAWINDS	021115
260	bufr_code_021116	Режим параметра сигма-0 по измерениям SEAWINDS	021116
261	bufr_code_021119	Функция геофизической модели ветрового скаттерометра	021119
262	bufr_code_021144	Флаг дождя при работе альтиметра	021144
263	bufr_code_021150	Совместное положение луча	021150
264	bufr_code_021155	Качество ячейки векторов ветра	021155
265	bufr_code_021158	Оценка качества Kр ASCAT	021158
266	bufr_code_021159	Используемость параметра сигма-0 АSCAT	021159
267	bufr_code_021169	Указатель наличия льда	021169
268	bufr_code_022056	Направление профиля	022056
269	bufr_code_022060	Состояние плавучего якоря дрейфующего буя Лагранжа	022060
270	bufr_code_022061	Состояние моря	022061
271	bufr_code_022120	Автоматизированный контроль уровня воды станцией наблюдения за приливами	022120
272	bufr_code_022121	Ручной контроль уровня воды станцией наблюдения за приливами	022121
273	bufr_code_022122	Автоматизированный контроль метеорологических данных станцией наблюдения за приливами	022122
274	bufr_code_022123	Ручной контроль метеорологических данных станцией наблюдения за приливами	022123
275	bufr_code_022178	Тип устройства для спуска ОБТ/ОПТГ	022178
276	bufr_code_023001	Оперативное оповещение об аварии — применимая статья Конвенции	023001
277	bufr_code_023002	Деятельность или установка, связанные с происшествием	023002
278	bufr_code_023003	Тип выброса	023003
279	bufr_code_023004	Контрмеры, принятые близ границы	023004
280	bufr_code_023005	Причина происшествия	023005
281	bufr_code_023006	Ситуация, связанная с происшествием	023006
282	bufr_code_023007	Характеристика выброса	023007
283	bufr_code_023008	Состояние текущего или ожидаемого выброса	023008
284	bufr_code_023009	Состояние текущего или ожидаемого выброса	023009
285	bufr_code_023016	Возможность значительного химико-токсического воздействия на здоровье	023016
286	bufr_code_023018	Поведение выброса во времени	023018
287	bufr_code_023031	Возможность взаимодействия шлейфа с осадками, выпавшими в стране происхождения аварии	023031
288	bufr_code_023032	Воздействие на шлейф изменения в направлении и/или флаге скорости ветра	023032
289	bufr_code_024003	Состав выброса	024003
290	bufr_code_025004	Обработка отраженного сигнала	025004
291	bufr_code_025005	Интегрирование отраженного сигнала	025005
292	bufr_code_025006	Конверсия Z в R	025006
293	bufr_code_025009	Метод калибровки	025009
294	bufr_code_025010	Подавление мешающих отражений	025010
295	bufr_code_025011	Коррекция помех от земной поверхности (защита)	025011
296	bufr_code_025012	Коррекция затухания с увеличением дальности	025012
297	bufr_code_025013	Коррекция яркой полосы	025013
298	bufr_code_025015	Коррекция затухания на обтекателе	025015
299	bufr_code_025017	Коррекция затухания в осадках	025017
300	bufr_code_025020	Оценка средней скорости	025020
301	bufr_code_025021	Расширение расчета ветра	025021
302	bufr_code_025022	Флаг неприемлемости ТПМВРГ*	025022
303	bufr_code_025023	Флаг достоверности ТПМВРГ	025023
304	bufr_code_025024	Качество данных ТПМВРГ	025024
305	bufr_code_025029	Метод калибровки	025029
306	bufr_code_025030	Использование скользящей средней температуры поверхности моря	025030
307	bufr_code_025031	Метод прореживания вертикальных профилей, полученных с помощью ЧПП	025031
308	bufr_code_025032	Информация о режиме, в котором используется профилометр ветра	025032
309	bufr_code_025033	Информация о поддиапазоне применения профилометра ветра	025033
310	bufr_code_025034	Результаты контроля качества данных профилометра ветра	025034
311	bufr_code_025035	Метод обнаружения атмосфериков	025035
312	bufr_code_025036	Метод обнаружения атмосфериков	025036
313	bufr_code_025040	Получение продукции о ветре по измерениям CO2	025040
314	bufr_code_025041	Метод передачи сводок о направлении движения подвижной платформы	025041
315	bufr_code_025042	Метод передачи сводок о скорости движения подвижной платформы	025042
316	bufr_code_025045	Комбинация каналов HIRS	025045
317	bufr_code_025046	Комбинация каналов MSU	025046
318	bufr_code_025047	Комбинация каналов SSU	025047
319	bufr_code_025048	Комбинация каналов AMSU-A	025048
320	bufr_code_025049	Комбинация каналов AMSU-B	025049
321	bufr_code_025051	Комбинация каналов AVHRR	025051
322	bufr_code_025053	Качество наблюдений	025053
323	bufr_code_025063	Указатель центрального процессора или системы	025063
324	bufr_code_025069	Поправки давления на высоту	025069
325	bufr_code_025086	Указатель корректировки глубины	025086
326	bufr_code_025090	Флаг характеристики орбиты	025090
327	bufr_code_025093	Корректировка расчета данных РАСC*	025093
328	bufr_code_025095	Флаг состояния высотомера	025095
329	bufr_code_025096	Флаг состояния радиометра	025096
330	bufr_code_025097	Трехмерная оценка ошибки орбиты навигатора	025097
331	bufr_code_025098	Флаг качества данных альтиметра	025098
332	bufr_code_025099	Флаг качества коррекции альтиметра	025099
333	bufr_code_025110	Краткая сводка об обработке изображения	025110
334	bufr_code_025120	Флаги обработки RA2-L2	025120
335	bufr_code_025122	Аппаратная конфигурация RF*	025122
336	bufr_code_025123	Аппаратная конфигурация НРА*	025123
337	bufr_code_025124	Флаги обработки MWR* – L2	025124
338	bufr_code_025150	Метод анализа интенсивности тропического циклона с использованием спутниковых данных	025150
339	bufr_code_025174	Флаг информации о СМОС*	025174
340	bufr_code_025181	Флаг обработки данных L2	025181
341	bufr_code_025182	Флаг обработки данных L1	025182
342	bufr_code_025184	Статус продукции L2	025184
343	bufr_code_026010	Включенные часы	026010
344	bufr_code_029001	Тип проекции	029001
345	bufr_code_029002	Тип сетки координат	029002
346	bufr_code_030031	Тип изображения	030031
347	bufr_code_030032	Комбинация с другими данными	030032
348	bufr_code_031021	Значимость ассоциированного поля	031021
349	bufr_code_031031	Указатель наличия данных	031031
350	bufr_code_033002	Информация о качестве	033002
351	bufr_code_033003	Информация о качестве	033003
352	bufr_code_033005	Информация о качестве (данные АМС)	033005
353	bufr_code_033006	Информация о состоянии внутренних измерений (АМС)	033006
354	bufr_code_033015	Указатель проверки качества данных	033015
355	bufr_code_033020	Указание контроля качества значения последующей величины	033020
356	bufr_code_033021	Качество последующей величины	033021
357	bufr_code_033022	Качество передачи спутником данных с буев	033022
358	bufr_code_033023	Качество местоположения буя	033023
359	bufr_code_033024	Отметка качества превышения станции (для подвижных станций)	033024
360	bufr_code_033025	Указатель интерполированных значений ACARS	033025
361	bufr_code_033026	Качество данных о влажности	033026
362	bufr_code_033027	Класс качества местоположения (длина радиуса с достоверностью в 66 %)	033027
363	bufr_code_033028	Общее качество моментального снимка	033028
364	bufr_code_033030	Флаги статуса сканирующей строки ATOVS	033030
365	bufr_code_033031	Флаги качества сканирующей строки ATOVS	033031
366	bufr_code_033032	Флаги качества каналов ATOVS	033032
367	bufr_code_033033	Флаги качества поля зрения ATOVS	033033
368	bufr_code_033035	Ручной/автоматический контроль качества	033035
369	bufr_code_033037	Коэффициент корреляции ветра	033037
370	bufr_code_033038	Флаги качества для данных наземных ГНСС*	033038
371	bufr_code_033039	Флаги качества для данных о радиозатмении	033039
372	bufr_code_033041	Атрибут следующего значения	033041
373	bufr_code_033042	Тип предела, представленный последующим значением	033042
374	bufr_code_033043	Достоверность AST (средняя температура поверхности)	033043
375	bufr_code_033044	Информация о качестве данных ASAR (усовершенствованный радиолокатор с синтезированной апертурой)	033044
376	bufr_code_033047	Данные о достоверности измерений	033047
377	bufr_code_033048	Мера достоверности инверсии РСА*	033048
378	bufr_code_033049	Мера достоверности восстановленного значения ветра	033049
379	bufr_code_033050	Общий флаг качества ГТСПП	033050
380	bufr_code_033052	Качество вторичного прослеживания океана в полосе частот S	033052
381	bufr_code_033053	Качество вторичного прослеживания океана в полосе частот Ku	033053
382	bufr_code_033060	GqisFlagQual — индивидуальный флаг качества системы IASI	033060
383	bufr_code_033070	Качество измерений общего содержания озона	033070
384	bufr_code_033071	Качество измерений профиля озона	033071
385	bufr_code_033072	Ошибка в измерении озона	033072
386	bufr_code_033075	Флаги качества на уровне сканирования	033075
387	bufr_code_033076	Флаги качества калибровки	033076
388	bufr_code_033077	Флаги качества поля зрения	033077
389	bufr_code_033078	Качество геоположения	033078
390	bufr_code_033079	Флаги качества на уровне гранул	033079
391	bufr_code_033080	Флаги качества на уровне сканирования	033080
392	bufr_code_033081	Флаги качества данных канала	033081
393	bufr_code_033082	Флаги качества геоположения	033082
394	bufr_code_033083	Флаги качества данных по излучению	033083
395	bufr_code_033084	Флаг качества уровня элемента изображения	033084
396	bufr_code_033086	Качество воспроизведения на уровне элемента изображения	033086
397	bufr_code_035000	FM и номер регионального кода	035000
398	bufr_code_035001	Временной период для мониторинга	035001
399	bufr_code_035030	Несоответствия в поступлении ожидаемых данных	035030
400	bufr_code_035031	Показатель оценки результатов мониторинга	035031
401	bufr_code_035032	Причина отсутствия данных	035032
402	bufr_code_035033	Недостатки в наблюдениях и сборе данных	035033
403	bufr_code_035034	Статистические тенденции в отношении наличия данных (в течение периода(ов) обзора)	035034
404	bufr_code_035035	Причина прекращения полета	035035
405	bufr_code_040005	Флаг коррекции влажности почвы	040005
406	bufr_code_040006	Флаг обработки влажности почвы	040006
407	bufr_code_040011	Флаг интерполяции	040011
408	bufr_code_040012	Флаг качества данных радиометра	040012
409	bufr_code_040013	Флаг интерпретации яркостной температуры, измеренной с помощью радиометра	040013
410	bufr_code_040020	GqisFlagQualDetailed — Флаг качества для системы	040020
411	bufr_code_040023	Вспомогательные флаги состояния альтиметра	040023
412	bufr_code_040024	Наличие метеорологической карты	040024
413	bufr_code_040025	Флаг интерполяции для среднего значения величины суточного прилива	040025
414	bufr_code_021022	Метеорологические явления и типы облачности по радиолокационным данным	021022
\.


--
-- Name: bufr_codes_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('bufr_codes_seq', 415, true);


--
-- Name: bufr_code_001003_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_001003
    ADD CONSTRAINT bufr_code_001003_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_001024_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_001024
    ADD CONSTRAINT bufr_code_001024_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_001028_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_001028
    ADD CONSTRAINT bufr_code_001028_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_001029_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_001029
    ADD CONSTRAINT bufr_code_001029_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_001036_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_001036
    ADD CONSTRAINT bufr_code_001036_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_001038_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_001038
    ADD CONSTRAINT bufr_code_001038_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_001052_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_001052
    ADD CONSTRAINT bufr_code_001052_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_001090_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_001090
    ADD CONSTRAINT bufr_code_001090_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_001092_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_001092
    ADD CONSTRAINT bufr_code_001092_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_001101_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_001101
    ADD CONSTRAINT bufr_code_001101_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002001_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002001
    ADD CONSTRAINT bufr_code_002001_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002002_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002002
    ADD CONSTRAINT bufr_code_002002_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002003_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002003
    ADD CONSTRAINT bufr_code_002003_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002004_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002004
    ADD CONSTRAINT bufr_code_002004_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002013_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002013
    ADD CONSTRAINT bufr_code_002013_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002015_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002015
    ADD CONSTRAINT bufr_code_002015_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002016_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002016
    ADD CONSTRAINT bufr_code_002016_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002017_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002017
    ADD CONSTRAINT bufr_code_002017_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002020_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002020
    ADD CONSTRAINT bufr_code_002020_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002021_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002021
    ADD CONSTRAINT bufr_code_002021_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002022_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002022
    ADD CONSTRAINT bufr_code_002022_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002023_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002023
    ADD CONSTRAINT bufr_code_002023_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002024_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002024
    ADD CONSTRAINT bufr_code_002024_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002025_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002025
    ADD CONSTRAINT bufr_code_002025_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002030_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002030
    ADD CONSTRAINT bufr_code_002030_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002031_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002031
    ADD CONSTRAINT bufr_code_002031_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002032_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002032
    ADD CONSTRAINT bufr_code_002032_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002033_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002033
    ADD CONSTRAINT bufr_code_002033_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002034_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002034
    ADD CONSTRAINT bufr_code_002034_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002036_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002036
    ADD CONSTRAINT bufr_code_002036_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002037_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002037
    ADD CONSTRAINT bufr_code_002037_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002038_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002038
    ADD CONSTRAINT bufr_code_002038_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002039_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002039
    ADD CONSTRAINT bufr_code_002039_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002040_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002040
    ADD CONSTRAINT bufr_code_002040_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002041_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002041
    ADD CONSTRAINT bufr_code_002041_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002042_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002042
    ADD CONSTRAINT bufr_code_002042_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002044_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002044
    ADD CONSTRAINT bufr_code_002044_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002045_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002045
    ADD CONSTRAINT bufr_code_002045_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002046_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002046
    ADD CONSTRAINT bufr_code_002046_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002047_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002047
    ADD CONSTRAINT bufr_code_002047_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002048_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002048
    ADD CONSTRAINT bufr_code_002048_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002049_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002049
    ADD CONSTRAINT bufr_code_002049_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002050_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002050
    ADD CONSTRAINT bufr_code_002050_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002051_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002051
    ADD CONSTRAINT bufr_code_002051_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002052_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002052
    ADD CONSTRAINT bufr_code_002052_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002053_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002053
    ADD CONSTRAINT bufr_code_002053_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002054_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002054
    ADD CONSTRAINT bufr_code_002054_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002055_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002055
    ADD CONSTRAINT bufr_code_002055_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002056_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002056
    ADD CONSTRAINT bufr_code_002056_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002057_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002057
    ADD CONSTRAINT bufr_code_002057_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002058_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002058
    ADD CONSTRAINT bufr_code_002058_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002059_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002059
    ADD CONSTRAINT bufr_code_002059_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002060_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002060
    ADD CONSTRAINT bufr_code_002060_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002061_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002061
    ADD CONSTRAINT bufr_code_002061_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002062_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002062
    ADD CONSTRAINT bufr_code_002062_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002064_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002064
    ADD CONSTRAINT bufr_code_002064_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002066_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002066
    ADD CONSTRAINT bufr_code_002066_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002070_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002070
    ADD CONSTRAINT bufr_code_002070_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002080_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002080
    ADD CONSTRAINT bufr_code_002080_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002081_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002081
    ADD CONSTRAINT bufr_code_002081_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002083_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002083
    ADD CONSTRAINT bufr_code_002083_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002084_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002084
    ADD CONSTRAINT bufr_code_002084_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002095_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002095
    ADD CONSTRAINT bufr_code_002095_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002096_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002096
    ADD CONSTRAINT bufr_code_002096_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002097_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002097
    ADD CONSTRAINT bufr_code_002097_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002099_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002099
    ADD CONSTRAINT bufr_code_002099_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002101_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002101
    ADD CONSTRAINT bufr_code_002101_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002103_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002103
    ADD CONSTRAINT bufr_code_002103_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002104_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002104
    ADD CONSTRAINT bufr_code_002104_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002115_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002115
    ADD CONSTRAINT bufr_code_002115_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002119_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002119
    ADD CONSTRAINT bufr_code_002119_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002131_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002131
    ADD CONSTRAINT bufr_code_002131_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002137_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002137
    ADD CONSTRAINT bufr_code_002137_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002138_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002138
    ADD CONSTRAINT bufr_code_002138_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002139_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002139
    ADD CONSTRAINT bufr_code_002139_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002143_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002143
    ADD CONSTRAINT bufr_code_002143_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002144_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002144
    ADD CONSTRAINT bufr_code_002144_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002145_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002145
    ADD CONSTRAINT bufr_code_002145_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002146_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002146
    ADD CONSTRAINT bufr_code_002146_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002148_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002148
    ADD CONSTRAINT bufr_code_002148_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002149_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002149
    ADD CONSTRAINT bufr_code_002149_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002150_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002150
    ADD CONSTRAINT bufr_code_002150_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002151_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002151
    ADD CONSTRAINT bufr_code_002151_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002152_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002152
    ADD CONSTRAINT bufr_code_002152_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002158_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002158
    ADD CONSTRAINT bufr_code_002158_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002159_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002159
    ADD CONSTRAINT bufr_code_002159_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002160_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002160
    ADD CONSTRAINT bufr_code_002160_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002163_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002163
    ADD CONSTRAINT bufr_code_002163_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002164_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002164
    ADD CONSTRAINT bufr_code_002164_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002165_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002165
    ADD CONSTRAINT bufr_code_002165_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002166_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002166
    ADD CONSTRAINT bufr_code_002166_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002167_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002167
    ADD CONSTRAINT bufr_code_002167_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002169_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002169
    ADD CONSTRAINT bufr_code_002169_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002170_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002170
    ADD CONSTRAINT bufr_code_002170_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002172_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002172
    ADD CONSTRAINT bufr_code_002172_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002175_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002175
    ADD CONSTRAINT bufr_code_002175_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002176_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002176
    ADD CONSTRAINT bufr_code_002176_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002177_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002177
    ADD CONSTRAINT bufr_code_002177_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002178_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002178
    ADD CONSTRAINT bufr_code_002178_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002179_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002179
    ADD CONSTRAINT bufr_code_002179_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002180_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002180
    ADD CONSTRAINT bufr_code_002180_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002181_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002181
    ADD CONSTRAINT bufr_code_002181_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002182_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002182
    ADD CONSTRAINT bufr_code_002182_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002183_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002183
    ADD CONSTRAINT bufr_code_002183_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002184_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002184
    ADD CONSTRAINT bufr_code_002184_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002185_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002185
    ADD CONSTRAINT bufr_code_002185_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002186_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002186
    ADD CONSTRAINT bufr_code_002186_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002187_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002187
    ADD CONSTRAINT bufr_code_002187_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002188_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002188
    ADD CONSTRAINT bufr_code_002188_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002189_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002189
    ADD CONSTRAINT bufr_code_002189_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_002191_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_002191
    ADD CONSTRAINT bufr_code_002191_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_004059_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_004059
    ADD CONSTRAINT bufr_code_004059_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_004080_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_004080
    ADD CONSTRAINT bufr_code_004080_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008001_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008001
    ADD CONSTRAINT bufr_code_008001_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008002_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008002
    ADD CONSTRAINT bufr_code_008002_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008003_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008003
    ADD CONSTRAINT bufr_code_008003_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008004_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008004
    ADD CONSTRAINT bufr_code_008004_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008005_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008005
    ADD CONSTRAINT bufr_code_008005_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008006_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008006
    ADD CONSTRAINT bufr_code_008006_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008007_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008007
    ADD CONSTRAINT bufr_code_008007_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008008_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008008
    ADD CONSTRAINT bufr_code_008008_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008009_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008009
    ADD CONSTRAINT bufr_code_008009_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008010_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008010
    ADD CONSTRAINT bufr_code_008010_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008011_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008011
    ADD CONSTRAINT bufr_code_008011_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008012_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008012
    ADD CONSTRAINT bufr_code_008012_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008013_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008013
    ADD CONSTRAINT bufr_code_008013_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008014_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008014
    ADD CONSTRAINT bufr_code_008014_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008016_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008016
    ADD CONSTRAINT bufr_code_008016_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008017_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008017
    ADD CONSTRAINT bufr_code_008017_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008018_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008018
    ADD CONSTRAINT bufr_code_008018_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008019_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008019
    ADD CONSTRAINT bufr_code_008019_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008021_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008021
    ADD CONSTRAINT bufr_code_008021_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008023_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008023
    ADD CONSTRAINT bufr_code_008023_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008024_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008024
    ADD CONSTRAINT bufr_code_008024_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008025_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008025
    ADD CONSTRAINT bufr_code_008025_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008026_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008026
    ADD CONSTRAINT bufr_code_008026_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008029_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008029
    ADD CONSTRAINT bufr_code_008029_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008033_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008033
    ADD CONSTRAINT bufr_code_008033_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008035_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008035
    ADD CONSTRAINT bufr_code_008035_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008036_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008036
    ADD CONSTRAINT bufr_code_008036_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008039_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008039
    ADD CONSTRAINT bufr_code_008039_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008040_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008040
    ADD CONSTRAINT bufr_code_008040_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008041_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008041
    ADD CONSTRAINT bufr_code_008041_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008042_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008042
    ADD CONSTRAINT bufr_code_008042_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008043_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008043
    ADD CONSTRAINT bufr_code_008043_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008050_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008050
    ADD CONSTRAINT bufr_code_008050_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008051_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008051
    ADD CONSTRAINT bufr_code_008051_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008052_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008052
    ADD CONSTRAINT bufr_code_008052_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008053_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008053
    ADD CONSTRAINT bufr_code_008053_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008054_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008054
    ADD CONSTRAINT bufr_code_008054_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008060_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008060
    ADD CONSTRAINT bufr_code_008060_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008065_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008065
    ADD CONSTRAINT bufr_code_008065_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008066_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008066
    ADD CONSTRAINT bufr_code_008066_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008070_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008070
    ADD CONSTRAINT bufr_code_008070_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008072_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008072
    ADD CONSTRAINT bufr_code_008072_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008074_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008074
    ADD CONSTRAINT bufr_code_008074_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008075_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008075
    ADD CONSTRAINT bufr_code_008075_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008076_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008076
    ADD CONSTRAINT bufr_code_008076_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008077_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008077
    ADD CONSTRAINT bufr_code_008077_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008079_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008079
    ADD CONSTRAINT bufr_code_008079_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008080_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008080
    ADD CONSTRAINT bufr_code_008080_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008081_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008081
    ADD CONSTRAINT bufr_code_008081_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008082_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008082
    ADD CONSTRAINT bufr_code_008082_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008083_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008083
    ADD CONSTRAINT bufr_code_008083_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008085_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008085
    ADD CONSTRAINT bufr_code_008085_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_008086_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_008086
    ADD CONSTRAINT bufr_code_008086_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_010063_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_010063
    ADD CONSTRAINT bufr_code_010063_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_010064_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_010064
    ADD CONSTRAINT bufr_code_010064_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_011030_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_011030
    ADD CONSTRAINT bufr_code_011030_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_011031_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_011031
    ADD CONSTRAINT bufr_code_011031_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_011037_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_011037
    ADD CONSTRAINT bufr_code_011037_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_011038_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_011038
    ADD CONSTRAINT bufr_code_011038_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_011039_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_011039
    ADD CONSTRAINT bufr_code_011039_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_013038_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_013038
    ADD CONSTRAINT bufr_code_013038_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_013039_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_013039
    ADD CONSTRAINT bufr_code_013039_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_013040_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_013040
    ADD CONSTRAINT bufr_code_013040_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_013041_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_013041
    ADD CONSTRAINT bufr_code_013041_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_013051_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_013051
    ADD CONSTRAINT bufr_code_013051_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_013056_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_013056
    ADD CONSTRAINT bufr_code_013056_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_013057_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_013057
    ADD CONSTRAINT bufr_code_013057_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_015025_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_015025
    ADD CONSTRAINT bufr_code_015025_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_019001_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_019001
    ADD CONSTRAINT bufr_code_019001_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_019008_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_019008
    ADD CONSTRAINT bufr_code_019008_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_019010_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_019010
    ADD CONSTRAINT bufr_code_019010_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_019100_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_019100
    ADD CONSTRAINT bufr_code_019100_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_019101_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_019101
    ADD CONSTRAINT bufr_code_019101_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_019102_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_019102
    ADD CONSTRAINT bufr_code_019102_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_019103_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_019103
    ADD CONSTRAINT bufr_code_019103_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_019104_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_019104
    ADD CONSTRAINT bufr_code_019104_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_019105_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_019105
    ADD CONSTRAINT bufr_code_019105_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_019107_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_019107
    ADD CONSTRAINT bufr_code_019107_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_019108_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_019108
    ADD CONSTRAINT bufr_code_019108_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_019109_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_019109
    ADD CONSTRAINT bufr_code_019109_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_019110_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_019110
    ADD CONSTRAINT bufr_code_019110_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_019113_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_019113
    ADD CONSTRAINT bufr_code_019113_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_019117_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_019117
    ADD CONSTRAINT bufr_code_019117_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_019119_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_019119
    ADD CONSTRAINT bufr_code_019119_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020003_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020003
    ADD CONSTRAINT bufr_code_020003_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020004_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020004
    ADD CONSTRAINT bufr_code_020004_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020005_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020005
    ADD CONSTRAINT bufr_code_020005_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020006_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020006
    ADD CONSTRAINT bufr_code_020006_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020008_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020008
    ADD CONSTRAINT bufr_code_020008_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020009_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020009
    ADD CONSTRAINT bufr_code_020009_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020011_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020011
    ADD CONSTRAINT bufr_code_020011_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020012_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020012
    ADD CONSTRAINT bufr_code_020012_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020017_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020017
    ADD CONSTRAINT bufr_code_020017_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020018_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020018
    ADD CONSTRAINT bufr_code_020018_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020021_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020021
    ADD CONSTRAINT bufr_code_020021_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020022_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020022
    ADD CONSTRAINT bufr_code_020022_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020023_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020023
    ADD CONSTRAINT bufr_code_020023_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020024_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020024
    ADD CONSTRAINT bufr_code_020024_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020025_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020025
    ADD CONSTRAINT bufr_code_020025_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020026_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020026
    ADD CONSTRAINT bufr_code_020026_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020027_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020027
    ADD CONSTRAINT bufr_code_020027_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020028_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020028
    ADD CONSTRAINT bufr_code_020028_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020029_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020029
    ADD CONSTRAINT bufr_code_020029_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020032_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020032
    ADD CONSTRAINT bufr_code_020032_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020033_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020033
    ADD CONSTRAINT bufr_code_020033_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020034_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020034
    ADD CONSTRAINT bufr_code_020034_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020035_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020035
    ADD CONSTRAINT bufr_code_020035_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020036_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020036
    ADD CONSTRAINT bufr_code_020036_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020037_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020037
    ADD CONSTRAINT bufr_code_020037_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020040_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020040
    ADD CONSTRAINT bufr_code_020040_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020041_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020041
    ADD CONSTRAINT bufr_code_020041_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020042_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020042
    ADD CONSTRAINT bufr_code_020042_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020045_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020045
    ADD CONSTRAINT bufr_code_020045_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020048_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020048
    ADD CONSTRAINT bufr_code_020048_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020050_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020050
    ADD CONSTRAINT bufr_code_020050_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020055_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020055
    ADD CONSTRAINT bufr_code_020055_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020056_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020056
    ADD CONSTRAINT bufr_code_020056_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020062_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020062
    ADD CONSTRAINT bufr_code_020062_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020063_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020063
    ADD CONSTRAINT bufr_code_020063_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020071_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020071
    ADD CONSTRAINT bufr_code_020071_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020085_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020085
    ADD CONSTRAINT bufr_code_020085_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020086_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020086
    ADD CONSTRAINT bufr_code_020086_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020087_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020087
    ADD CONSTRAINT bufr_code_020087_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020089_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020089
    ADD CONSTRAINT bufr_code_020089_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020090_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020090
    ADD CONSTRAINT bufr_code_020090_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020101_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020101
    ADD CONSTRAINT bufr_code_020101_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020102_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020102
    ADD CONSTRAINT bufr_code_020102_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020103_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020103
    ADD CONSTRAINT bufr_code_020103_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020104_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020104
    ADD CONSTRAINT bufr_code_020104_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020105_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020105
    ADD CONSTRAINT bufr_code_020105_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020106_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020106
    ADD CONSTRAINT bufr_code_020106_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020107_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020107
    ADD CONSTRAINT bufr_code_020107_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020108_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020108
    ADD CONSTRAINT bufr_code_020108_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020119_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020119
    ADD CONSTRAINT bufr_code_020119_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020124_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020124
    ADD CONSTRAINT bufr_code_020124_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_020136_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_020136
    ADD CONSTRAINT bufr_code_020136_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_021022_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_021022
    ADD CONSTRAINT bufr_code_021022_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_021066_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_021066
    ADD CONSTRAINT bufr_code_021066_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_021067_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_021067
    ADD CONSTRAINT bufr_code_021067_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_021068_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_021068
    ADD CONSTRAINT bufr_code_021068_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_021069_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_021069
    ADD CONSTRAINT bufr_code_021069_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_021070_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_021070
    ADD CONSTRAINT bufr_code_021070_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_021072_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_021072
    ADD CONSTRAINT bufr_code_021072_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_021073_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_021073
    ADD CONSTRAINT bufr_code_021073_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_021076_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_021076
    ADD CONSTRAINT bufr_code_021076_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_021109_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_021109
    ADD CONSTRAINT bufr_code_021109_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_021115_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_021115
    ADD CONSTRAINT bufr_code_021115_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_021116_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_021116
    ADD CONSTRAINT bufr_code_021116_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_021119_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_021119
    ADD CONSTRAINT bufr_code_021119_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_021144_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_021144
    ADD CONSTRAINT bufr_code_021144_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_021150_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_021150
    ADD CONSTRAINT bufr_code_021150_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_021155_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_021155
    ADD CONSTRAINT bufr_code_021155_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_021158_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_021158
    ADD CONSTRAINT bufr_code_021158_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_021159_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_021159
    ADD CONSTRAINT bufr_code_021159_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_021169_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_021169
    ADD CONSTRAINT bufr_code_021169_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_022056_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_022056
    ADD CONSTRAINT bufr_code_022056_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_022060_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_022060
    ADD CONSTRAINT bufr_code_022060_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_022061_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_022061
    ADD CONSTRAINT bufr_code_022061_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_022120_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_022120
    ADD CONSTRAINT bufr_code_022120_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_022121_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_022121
    ADD CONSTRAINT bufr_code_022121_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_022122_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_022122
    ADD CONSTRAINT bufr_code_022122_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_022123_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_022123
    ADD CONSTRAINT bufr_code_022123_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_022178_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_022178
    ADD CONSTRAINT bufr_code_022178_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_023001_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_023001
    ADD CONSTRAINT bufr_code_023001_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_023002_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_023002
    ADD CONSTRAINT bufr_code_023002_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_023003_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_023003
    ADD CONSTRAINT bufr_code_023003_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_023004_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_023004
    ADD CONSTRAINT bufr_code_023004_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_023005_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_023005
    ADD CONSTRAINT bufr_code_023005_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_023006_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_023006
    ADD CONSTRAINT bufr_code_023006_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_023007_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_023007
    ADD CONSTRAINT bufr_code_023007_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_023008_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_023008
    ADD CONSTRAINT bufr_code_023008_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_023009_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_023009
    ADD CONSTRAINT bufr_code_023009_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_023016_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_023016
    ADD CONSTRAINT bufr_code_023016_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_023018_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_023018
    ADD CONSTRAINT bufr_code_023018_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_023031_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_023031
    ADD CONSTRAINT bufr_code_023031_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_023032_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_023032
    ADD CONSTRAINT bufr_code_023032_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_024003_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_024003
    ADD CONSTRAINT bufr_code_024003_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025004_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025004
    ADD CONSTRAINT bufr_code_025004_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025005_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025005
    ADD CONSTRAINT bufr_code_025005_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025006_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025006
    ADD CONSTRAINT bufr_code_025006_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025009_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025009
    ADD CONSTRAINT bufr_code_025009_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025010_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025010
    ADD CONSTRAINT bufr_code_025010_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025011_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025011
    ADD CONSTRAINT bufr_code_025011_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025012_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025012
    ADD CONSTRAINT bufr_code_025012_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025013_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025013
    ADD CONSTRAINT bufr_code_025013_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025015_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025015
    ADD CONSTRAINT bufr_code_025015_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025017_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025017
    ADD CONSTRAINT bufr_code_025017_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025020_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025020
    ADD CONSTRAINT bufr_code_025020_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025021_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025021
    ADD CONSTRAINT bufr_code_025021_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025022_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025022
    ADD CONSTRAINT bufr_code_025022_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025023_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025023
    ADD CONSTRAINT bufr_code_025023_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025024_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025024
    ADD CONSTRAINT bufr_code_025024_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025029_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025029
    ADD CONSTRAINT bufr_code_025029_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025030_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025030
    ADD CONSTRAINT bufr_code_025030_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025031_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025031
    ADD CONSTRAINT bufr_code_025031_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025032_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025032
    ADD CONSTRAINT bufr_code_025032_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025033_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025033
    ADD CONSTRAINT bufr_code_025033_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025034_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025034
    ADD CONSTRAINT bufr_code_025034_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025035_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025035
    ADD CONSTRAINT bufr_code_025035_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025036_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025036
    ADD CONSTRAINT bufr_code_025036_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025040_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025040
    ADD CONSTRAINT bufr_code_025040_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025041_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025041
    ADD CONSTRAINT bufr_code_025041_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025042_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025042
    ADD CONSTRAINT bufr_code_025042_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025045_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025045
    ADD CONSTRAINT bufr_code_025045_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025046_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025046
    ADD CONSTRAINT bufr_code_025046_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025047_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025047
    ADD CONSTRAINT bufr_code_025047_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025048_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025048
    ADD CONSTRAINT bufr_code_025048_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025049_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025049
    ADD CONSTRAINT bufr_code_025049_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025051_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025051
    ADD CONSTRAINT bufr_code_025051_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025053_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025053
    ADD CONSTRAINT bufr_code_025053_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025063_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025063
    ADD CONSTRAINT bufr_code_025063_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025069_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025069
    ADD CONSTRAINT bufr_code_025069_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025086_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025086
    ADD CONSTRAINT bufr_code_025086_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025090_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025090
    ADD CONSTRAINT bufr_code_025090_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025093_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025093
    ADD CONSTRAINT bufr_code_025093_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025095_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025095
    ADD CONSTRAINT bufr_code_025095_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025096_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025096
    ADD CONSTRAINT bufr_code_025096_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025097_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025097
    ADD CONSTRAINT bufr_code_025097_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025098_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025098
    ADD CONSTRAINT bufr_code_025098_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025099_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025099
    ADD CONSTRAINT bufr_code_025099_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025110_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025110
    ADD CONSTRAINT bufr_code_025110_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025120_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025120
    ADD CONSTRAINT bufr_code_025120_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025122_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025122
    ADD CONSTRAINT bufr_code_025122_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025123_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025123
    ADD CONSTRAINT bufr_code_025123_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025124_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025124
    ADD CONSTRAINT bufr_code_025124_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025150_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025150
    ADD CONSTRAINT bufr_code_025150_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025174_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025174
    ADD CONSTRAINT bufr_code_025174_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025181_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025181
    ADD CONSTRAINT bufr_code_025181_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025182_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025182
    ADD CONSTRAINT bufr_code_025182_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_025184_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_025184
    ADD CONSTRAINT bufr_code_025184_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_026010_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_026010
    ADD CONSTRAINT bufr_code_026010_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_029001_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_029001
    ADD CONSTRAINT bufr_code_029001_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_029002_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_029002
    ADD CONSTRAINT bufr_code_029002_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_030031_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_030031
    ADD CONSTRAINT bufr_code_030031_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_030032_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_030032
    ADD CONSTRAINT bufr_code_030032_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_031021_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_031021
    ADD CONSTRAINT bufr_code_031021_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_031031_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_031031
    ADD CONSTRAINT bufr_code_031031_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033002_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033002
    ADD CONSTRAINT bufr_code_033002_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033003_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033003
    ADD CONSTRAINT bufr_code_033003_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033005_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033005
    ADD CONSTRAINT bufr_code_033005_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033006_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033006
    ADD CONSTRAINT bufr_code_033006_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033015_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033015
    ADD CONSTRAINT bufr_code_033015_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033020_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033020
    ADD CONSTRAINT bufr_code_033020_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033021_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033021
    ADD CONSTRAINT bufr_code_033021_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033022_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033022
    ADD CONSTRAINT bufr_code_033022_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033023_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033023
    ADD CONSTRAINT bufr_code_033023_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033024_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033024
    ADD CONSTRAINT bufr_code_033024_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033025_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033025
    ADD CONSTRAINT bufr_code_033025_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033026_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033026
    ADD CONSTRAINT bufr_code_033026_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033027_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033027
    ADD CONSTRAINT bufr_code_033027_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033028_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033028
    ADD CONSTRAINT bufr_code_033028_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033030_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033030
    ADD CONSTRAINT bufr_code_033030_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033031_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033031
    ADD CONSTRAINT bufr_code_033031_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033032_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033032
    ADD CONSTRAINT bufr_code_033032_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033033_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033033
    ADD CONSTRAINT bufr_code_033033_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033035_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033035
    ADD CONSTRAINT bufr_code_033035_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033037_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033037
    ADD CONSTRAINT bufr_code_033037_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033038_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033038
    ADD CONSTRAINT bufr_code_033038_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033039_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033039
    ADD CONSTRAINT bufr_code_033039_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033041_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033041
    ADD CONSTRAINT bufr_code_033041_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033042_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033042
    ADD CONSTRAINT bufr_code_033042_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033043_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033043
    ADD CONSTRAINT bufr_code_033043_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033044_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033044
    ADD CONSTRAINT bufr_code_033044_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033047_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033047
    ADD CONSTRAINT bufr_code_033047_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033048_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033048
    ADD CONSTRAINT bufr_code_033048_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033049_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033049
    ADD CONSTRAINT bufr_code_033049_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033050_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033050
    ADD CONSTRAINT bufr_code_033050_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033052_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033052
    ADD CONSTRAINT bufr_code_033052_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033053_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033053
    ADD CONSTRAINT bufr_code_033053_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033060_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033060
    ADD CONSTRAINT bufr_code_033060_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033070_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033070
    ADD CONSTRAINT bufr_code_033070_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033071_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033071
    ADD CONSTRAINT bufr_code_033071_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033072_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033072
    ADD CONSTRAINT bufr_code_033072_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033075_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033075
    ADD CONSTRAINT bufr_code_033075_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033076_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033076
    ADD CONSTRAINT bufr_code_033076_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033077_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033077
    ADD CONSTRAINT bufr_code_033077_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033078_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033078
    ADD CONSTRAINT bufr_code_033078_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033079_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033079
    ADD CONSTRAINT bufr_code_033079_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033080_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033080
    ADD CONSTRAINT bufr_code_033080_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033081_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033081
    ADD CONSTRAINT bufr_code_033081_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033082_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033082
    ADD CONSTRAINT bufr_code_033082_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033083_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033083
    ADD CONSTRAINT bufr_code_033083_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033084_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033084
    ADD CONSTRAINT bufr_code_033084_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_033086_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_033086
    ADD CONSTRAINT bufr_code_033086_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_035000_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_035000
    ADD CONSTRAINT bufr_code_035000_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_035001_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_035001
    ADD CONSTRAINT bufr_code_035001_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_035030_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_035030
    ADD CONSTRAINT bufr_code_035030_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_035031_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_035031
    ADD CONSTRAINT bufr_code_035031_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_035032_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_035032
    ADD CONSTRAINT bufr_code_035032_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_035033_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_035033
    ADD CONSTRAINT bufr_code_035033_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_035034_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_035034
    ADD CONSTRAINT bufr_code_035034_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_035035_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_035035
    ADD CONSTRAINT bufr_code_035035_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_040005_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_040005
    ADD CONSTRAINT bufr_code_040005_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_040006_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_040006
    ADD CONSTRAINT bufr_code_040006_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_040011_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_040011
    ADD CONSTRAINT bufr_code_040011_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_040012_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_040012
    ADD CONSTRAINT bufr_code_040012_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_040013_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_040013
    ADD CONSTRAINT bufr_code_040013_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_040020_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_040020
    ADD CONSTRAINT bufr_code_040020_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_040023_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_040023
    ADD CONSTRAINT bufr_code_040023_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_040024_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_040024
    ADD CONSTRAINT bufr_code_040024_pkey PRIMARY KEY (id);


--
-- Name: bufr_code_040025_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_code_040025
    ADD CONSTRAINT bufr_code_040025_pkey PRIMARY KEY (id);


--
-- Name: bufr_codes_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bufr_codes
    ADD CONSTRAINT bufr_codes_pkey PRIMARY KEY (id);


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

