include:
  - project: 'pak_group/codequalityci'
    ref: main
    file: '/.gitlab/CodeQuality.gitlab-ci.yml'

variables:
  GIT_STRATEGY: none
  GIT_DEPTH: 5
  GIT_SUBMODULE_STRATEGY: none
  CORES: 6
  SRC: $CI_PROJECT_DIR
  PRJ_NAME: meteo

stages:
  - pull
  - build
  - analyze
  - deploy

pull:
  stage: pull
  variables:
    GIT_STRATEGY: fetch
  tags: [private]
  when: always
  script:
    - mkdir -p $PRJ_NAME/commons
    - mv * $PRJ_NAME/commons 2>/dev/null || true
    - mv $PRJ_NAME/commons/include.pro $SRC
    - mv $PRJ_NAME/commons/protobuf.pri $SRC
    - mv $PRJ_NAME/commons/$PRJ_NAME.pro $SRC/$PRJ_NAME
    - git clone --depth 1 --single-branch -b $CI_DEFAULT_BRANCH http://${GITLAB_USERNAME}:${GITLAB_TOKEN}@${CI_SERVER_HOST}:${CI_SERVER_PORT}/pak_group/cross-commons.git
    - git clone --depth 1 --single-branch -b $CI_DEFAULT_BRANCH http://${GITLAB_USERNAME}:${GITLAB_TOKEN}@${CI_SERVER_HOST}:${CI_SERVER_PORT}/pak_group/sql.git
    - git clone --depth 1 --single-branch -b $CI_DEFAULT_BRANCH http://${GITLAB_USERNAME}:${GITLAB_TOKEN}@${CI_SERVER_HOST}:${CI_SERVER_PORT}/pak_group/commons.git

build:
  stage: build
  needs: [ pull ]
  tags: [private]
  when: always
  timeout: 1 day
  cache:
    - key: ccache-dir
      paths: [ccache]
  script:
    - cd $SRC/$PRJ_NAME
    - export BUILD_DIR=~/build_dir
    - export PACKAGE_DIR=$BUILD_DIR
    - export PRJ_DIR=$BUILD_DIR
    - export QT_VERSION=QT5
    - LD_LIBRARY_PATH=${BUILD_DIR}/lib:/usr/local/lib:/opt/mappi/lib:${LD_LIBRARY_PATH}
    - export PATH="/usr/lib/ccache:$PATH" #Override all compiler binaries with ccache
    - export CCACHE_BASEDIR="$SRC"
    - export CCACHE_DIR="$SRC/ccache"
    - export CCACHE_COMPILERCHECK=content #slightly slower than "mtime"
    - ccache --zero-stats || true
    - qmake -r
    - make -s clean
    - make -s # compilation runs two times but with ccache time is similar
    - ccache --show-stats
    - pvs-studio-analyzer trace -- make -s &>/dev/null || touch strace_out
  after_script:
    - echo "BUILD_JOB_ID=$CI_JOB_ID" >> job.env
  artifacts:
    reports:
      dotenv: job.env
    name: ${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}
    expire_in: 30 min
    paths: [ strace_out ]

pvs-studio:
  stage: analyze
  variables:
    PVS_EXCLUDE: -e ./sql -e ./cross-commons -e ./commons -e */usr/lib* -e *.pb.cc

metrix:
  variables:
    METRIC_EXCLUDE: --exclude-files=proto
