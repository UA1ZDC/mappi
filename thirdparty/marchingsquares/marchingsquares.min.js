/*!
* MarchingSquaresJS
* version 1.3.3
* https://github.com/RaumZeit/MarchingSquares.js
*
* @license GNU Affero General Public License.
* Copyright (c) 2015-2020 Ronny Lorenz <ronny@tbi.univie.ac.at>
*/
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t(e.MarchingSquaresJS=e.MarchingSquaresJS||{})}(this,function(e){"use strict";function b(e,t,n){return e<t?(n-e)/(t-e):(e-n)/(e-t)}function y(e,t,n,o){var r;return o<n&&(r=n,n=o,o=r),e<t?e<n?(n-e)/(t-e):(o-e)/(t-e):o<e?(e-o)/(e-t):(e-n)/(e-t)}function _(e,t,n,o){return e<t?(n-e)/(t-e):(e-o)/(e-t)}function d(e,t,n,o){return e<t?(o-e)/(t-e):(e-n)/(e-t)}function f(){this.successCallback=null,this.verbose=!1,this.polygons=!1,this.polygons_full=!1,this.linearRing=!0,this.noQuadTree=!1,this.noFrame=!1}function V(e,t,n,o){var r=[];return e.polygons.forEach(function(e){e.forEach(function(e){e[0]+=t,e[1]+=n}),o.linearRing&&e.push(e[0]),r.push(e)}),r}function q(e,t,n,o){return 0===n?(e+=1,t+=o[0][1]):1===n?e+=o[0][0]:2===n?t+=o[0][1]:3===n&&(e+=o[0][0],t+=1),[e,t]}function S(e,t,n){return 0===n?e++:1===n||(2===n?t++:3===n&&(e++,t++)),[e,t]}function x(e,o,r){var a,l,i,s,p,g,h,m,u,b,c,y,_,d,f,V,x=[],v=e.length-1,k=e[0].length-1,w=[["rt","rb"],["br","bl"],["lb","lt"],["tl","tr"]],B=[0,-1,0,1],E=[-1,0,1,0],A=["bl","lb","lt","tl","tr","rt","rb","br"],N={bl:1,br:1,lb:2,lt:2,tl:3,tr:3,rt:0,rb:0};return function(e,t,n){for(var o,r=!0,a=e[0].length,l=e.length,i=0;i<l;i++)if(e[i][0]<t||e[i][0]>n||e[i][a-1]<t||e[i][a-1]>n){r=!1;break}if(r&&(e[l-1][0]<t||e[l-1][0]>n||e[l-1][a-1]<t||e[l-1][a-1]>n)&&(r=!1),r)for(o=0;o<a-1;o++)if(e[0][o]<t||e[0][o]>n||e[l-1][o]<t||e[l-1][o]>n){r=!1;break}return r}(e,r.minV,r.maxV)&&(r.linearRing?x.push([[0,0],[0,v],[k,v],[k,0],[0,0]]):x.push([[0,0],[0,v],[k,v],[k,0]])),o.forEach(function(e,n){e.forEach(function(e,t){for(i=0;i<8;i++)if(a=A[i],"object"==typeof e.edges[a]){for(l=[],s=e.edges[a],h=a,u=t,b=!1,c=[(m=n)+s.path[0][0],t+s.path[0][1]],l.push(c);!b&&"object"==typeof(y=o[m][u]).edges[h];)if(s=y.edges[h],delete y.edges[h],(f=s.path[1])[0]+=m,f[1]+=u,l.push(f),h=s.move.enter,m+=s.move.x,u+=s.move.y,void 0===o[m]||void 0===o[m][u]){if(d=_=0,m===k)m--,_=0;else if(m<0)m++,_=2;else if(u===v)u--,_=3;else{if(!(u<0))throw new Error("Left the grid somewhere in the interior!");u++,_=1}if(m===n&&u===t&&_===N[a]){b=!0,h=a;break}for(;;){if(V=!1,4<d)throw new Error("Direction change counter overflow! This should never happen!");if(void 0!==o[m]&&void 0!==o[m][u])for(y=o[m][u],p=0;p<w[_].length;p++)if(g=w[_][p],"object"==typeof y.edges[g]){s=y.edges[g],l.push(q(m,u,_,s.path)),h=g,V=!0;break}if(V)break;if(l.push(S(m,u,_)),u+=E[_],void 0!==o[m+=B[_]]&&void 0!==o[m][u]||(0===_&&u<0||1===_&&m<0||2===_&&u===v||3===_&&m===k)&&(m-=B[_],u-=E[_],_=(_+1)%4,d++),m===n&&u===t&&_===N[a]){b=!0,h=a;break}}}!r.linearRing||l[l.length-1][0]===c[0]&&l[l.length-1][1]===c[1]||l.push(c),x.push(l)}})}),x}function c(e,o,r){var a,l,i,s,p,g,h,m,u,b,c,y,_,d,f,V=[],x=e.length-1,v=e[0].length-1,k=["right","bottom","left","top"],w=[0,-1,0,1],B=[-1,0,1,0],E={bottom:1,left:2,top:3,right:0};return r.noFrame||!function(e,t){for(var n,o=!0,r=e[0].length,a=e.length,l=0;l<a;l++)if(e[l][0]>=t||e[l][r-1]>=t){o=!1;break}if(o&&(e[a-1][0]>=t||e[a-1][r-1]>=t)&&(o=!1),o)for(n=0;n<r-1;n++)if(e[0][n]>=t||e[a-1][n]>t){o=!1;break}return o}(e,r.threshold)||(r.linearRing?V.push([[0,0],[0,x],[v,x],[v,0],[0,0]]):V.push([[0,0],[0,x],[v,x],[v,0]])),o.forEach(function(e,n){e.forEach(function(e,t){for(l=0;l<4;l++)if(a=k[l],"object"==typeof e.edges[a]){for(p=[],i=e.edges[a],g=a,m=t,u=!1,b=[(h=n)+i.path[0][0],t+i.path[0][1]],p.push(b);!u&&"object"==typeof(s=o[h][m]).edges[g];)if(i=s.edges[g],delete s.edges[g],(c=i.path[1])[0]+=h,c[1]+=m,p.push(c),g=i.move.enter,h+=i.move.x,m+=i.move.y,void 0===o[h]||void 0===o[h][m]){if(!r.linearRing)break;if(_=y=0,h===v?(h--,y=0):h<0?(h++,y=2):m===x?(m--,y=3):m<0&&(m++,y=1),h===n&&m===t&&y===E[a]){u=!0,g=a;break}for(;;){if(d=!1,4<_)throw new Error("Direction change counter overflow! This should never happen!");if(void 0!==o[h]&&void 0!==o[h][m]&&(s=o[h][m],f=k[y],"object"==typeof s.edges[f])){i=s.edges[f],p.push(q(h,m,y,i.path)),g=f,d=!0;break}if(d)break;if(p.push(S(h,m,y)),m+=B[y],void 0!==o[h+=w[y]]&&void 0!==o[h][m]||(0===y&&m<0||1===y&&h<0||2===y&&m===x||3===y&&h===v)&&(h-=w[y],m-=B[y],y=(y+1)%4,_++),h===n&&m===t&&y===E[a]){u=!0,g=a;break}}}!r.linearRing||p[p.length-1][0]===b[0]&&p[p.length-1][1]===b[1]||p.push(b),V.push(p)}})}),V}function p(e,t,n,o,r){var a=o,l=r,i=0,s=0;if(this.x=t,this.y=n,this.lowerBound=null,this.upperBound=null,this.childA=null,this.childB=null,this.childC=null,this.childD=null,1===o&&1===r)this.lowerBound=Math.min(e[n][t],e[n][t+1],e[n+1][t+1],e[n+1][t]),this.upperBound=Math.max(e[n][t],e[n][t+1],e[n+1][t+1],e[n+1][t]);else{if(1<o){for(;0!==a;)a>>=1,i++;o===1<<i-1&&i--,a=1<<i-1}if(1<r){for(;0!==l;)l>>=1,s++;r===1<<s-1&&s--,l=1<<s-1}this.childA=new p(e,t,n,a,l),this.lowerBound=this.childA.lowerBound,this.upperBound=this.childA.upperBound,0<o-a&&(this.childB=new p(e,t+a,n,o-a,l),this.lowerBound=Math.min(this.lowerBound,this.childB.lowerBound),this.upperBound=Math.max(this.upperBound,this.childB.upperBound),0<r-l&&(this.childC=new p(e,t+a,n+l,o-a,r-l),this.lowerBound=Math.min(this.lowerBound,this.childC.lowerBound),this.upperBound=Math.max(this.upperBound,this.childC.upperBound))),0<r-l&&(this.childD=new p(e,t,n+l,a,r-l),this.lowerBound=Math.min(this.lowerBound,this.childD.lowerBound),this.upperBound=Math.max(this.upperBound,this.childD.upperBound))}}function v(e){var t,n;if(!e)throw new Error("data is required");if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Error("data must be scalar field, i.e. array of arrays");if(e.length<2)throw new Error("data must contain at least two rows");if((n=e[0].length)<2)throw new Error("data must contain at least two columns");for(t=1;t<e.length;t++){if(!Array.isArray(e[t]))throw new Error("Row "+t+" is not an array");if(e[t].length!=n)throw new Error("unequal row lengths detected, please provide a regular grid")}this.data=e,this.root=new p(e,0,0,e[0].length-1,e.length-1)}function t(e,t,n){var o,r,a,l=!1,i=!1,s=null,p=null,g=null,h=null,m=null,u=[];if(!e)throw new Error("data is required");if(null==t)throw new Error("threshold is required");if(n&&"object"!=typeof n)throw new Error("options must be an object");if(o=function(e){var t,n,o,r,a=new f;for(e=e||{},r=Object.keys(a),t=0;t<r.length;t++)null!=(o=e[n=r[t]])&&(a[n]=o);return a.polygons_full=!a.polygons,a.interpolate=b,a}(n),e instanceof v)p=(s=e).root,g=e.data,o.noQuadTree||(l=!0);else{if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Error("input is neither array of arrays nor object retrieved from 'QuadTree()'");g=e}if(Array.isArray(t)){for(i=!0,o.noQuadTree||(l=!0),r=0;r<t.length;r++)if(isNaN(+t[r]))throw new Error("threshold["+r+"] is not a number")}else{if(isNaN(+t))throw new Error("threshold must be a number or array of numbers");t=[t]}return l&&!p&&(s=new v(g),p=s.root,g=s.data),o.verbose&&(o.polygons?console.log("MarchingSquaresJS-isoLines: returning single lines (polygons) for each grid cell"):console.log("MarchingSquaresJS-isoLines: returning line paths (polygons) for entire data grid"),i&&console.log("MarchingSquaresJS-isoLines: multiple lines requested, returning array of line paths instead of lines for a single threshold")),t.forEach(function(e,t){if(m=[],o.threshold=e,o.verbose&&console.log("MarchingSquaresJS-isoLines: computing iso lines for threshold "+e),o.polygons)if(l)p.cellsBelowThreshold(o.threshold,!0).forEach(function(e){m=m.concat(V(k(g,e.x,e.y,o),e.x,e.y,o))});else for(a=0;a<g.length-1;++a)for(t=0;t<g[0].length-1;++t)m=m.concat(V(k(g,t,a,o),t,a,o));else{for(h=[],t=0;t<g[0].length-1;++t)h[t]=[];if(l)p.cellsBelowThreshold(o.threshold,!1).forEach(function(e){h[e.x][e.y]=k(g,e.x,e.y,o)});else for(t=0;t<g[0].length-1;++t)for(a=0;a<g.length-1;++a)h[t][a]=k(g,t,a,o);m=c(g,h,o)}i?u.push(m):u=m,"function"==typeof o.successCallback&&o.successCallback(u,e)}),u}function k(e,t,n,o){var r,a,l,i,s,p=0,g=e[n+1][t],h=e[n+1][t+1],m=e[n][t+1],e=e[n][t],n=o.threshold;if(!(isNaN(e)||isNaN(m)||isNaN(h)||isNaN(g))){switch(p|=n<=g?8:0,p|=n<=h?4:0,p|=n<=m?2:0,t={cval:p=+(p|=n<=e?1:0),polygons:[],edges:{},x0:e,x1:m,x2:h,x3:g},p){case 0:o.polygons&&t.polygons.push([[0,0],[0,1],[1,1],[1,0]]);break;case 15:break;case 14:r=o.interpolate(e,g,n),i=o.interpolate(e,m,n),o.polygons_full&&(t.edges.left={path:[[0,r],[i,0]],move:{x:0,y:-1,enter:"top"}}),o.polygons&&t.polygons.push([[0,0],[0,r],[i,0]]);break;case 13:i=o.interpolate(e,m,n),a=o.interpolate(m,h,n),o.polygons_full&&(t.edges.bottom={path:[[i,0],[1,a]],move:{x:1,y:0,enter:"left"}}),o.polygons&&t.polygons.push([[i,0],[1,a],[1,0]]);break;case 11:a=o.interpolate(m,h,n),l=o.interpolate(g,h,n),o.polygons_full&&(t.edges.right={path:[[1,a],[l,1]],move:{x:0,y:1,enter:"bottom"}}),o.polygons&&t.polygons.push([[1,a],[l,1],[1,1]]);break;case 7:r=o.interpolate(e,g,n),l=o.interpolate(g,h,n),o.polygons_full&&(t.edges.top={path:[[l,1],[0,r]],move:{x:-1,y:0,enter:"right"}}),o.polygons&&t.polygons.push([[l,1],[0,r],[0,1]]);break;case 1:r=o.interpolate(e,g,n),i=o.interpolate(e,m,n),o.polygons_full&&(t.edges.bottom={path:[[i,0],[0,r]],move:{x:-1,y:0,enter:"right"}}),o.polygons&&t.polygons.push([[i,0],[0,r],[0,1],[1,1],[1,0]]);break;case 2:i=o.interpolate(e,m,n),a=o.interpolate(m,h,n),o.polygons_full&&(t.edges.right={path:[[1,a],[i,0]],move:{x:0,y:-1,enter:"top"}}),o.polygons&&t.polygons.push([[0,0],[0,1],[1,1],[1,a],[i,0]]);break;case 4:a=o.interpolate(m,h,n),l=o.interpolate(g,h,n),o.polygons_full&&(t.edges.top={path:[[l,1],[1,a]],move:{x:1,y:0,enter:"left"}}),o.polygons&&t.polygons.push([[0,0],[0,1],[l,1],[1,a],[1,0]]);break;case 8:r=o.interpolate(e,g,n),l=o.interpolate(g,h,n),o.polygons_full&&(t.edges.left={path:[[0,r],[l,1]],move:{x:0,y:1,enter:"bottom"}}),o.polygons&&t.polygons.push([[0,0],[0,r],[l,1],[1,1],[1,0]]);break;case 12:r=o.interpolate(e,g,n),a=o.interpolate(m,h,n),o.polygons_full&&(t.edges.left={path:[[0,r],[1,a]],move:{x:1,y:0,enter:"left"}}),o.polygons&&t.polygons.push([[0,0],[0,r],[1,a],[1,0]]);break;case 9:i=o.interpolate(e,m,n),l=o.interpolate(g,h,n),o.polygons_full&&(t.edges.bottom={path:[[i,0],[l,1]],move:{x:0,y:1,enter:"bottom"}}),o.polygons&&t.polygons.push([[i,0],[l,1],[1,1],[1,0]]);break;case 3:r=o.interpolate(e,g,n),a=o.interpolate(m,h,n),o.polygons_full&&(t.edges.right={path:[[1,a],[0,r]],move:{x:-1,y:0,enter:"right"}}),o.polygons&&t.polygons.push([[0,r],[0,1],[1,1],[1,a]]);break;case 6:i=o.interpolate(e,m,n),l=o.interpolate(g,h,n),o.polygons_full&&(t.edges.top={path:[[l,1],[i,0]],move:{x:0,y:-1,enter:"top"}}),o.polygons&&t.polygons.push([[0,0],[0,1],[l,1],[i,0]]);break;case 10:r=o.interpolate(e,g,n),a=o.interpolate(m,h,n),i=o.interpolate(e,m,n),l=o.interpolate(g,h,n),s=(e+m+h+g)/4,o.polygons_full&&(s<n?(t.edges.left={path:[[0,r],[l,1]],move:{x:0,y:1,enter:"bottom"}},t.edges.right={path:[[1,a],[i,0]],move:{x:0,y:-1,enter:"top"}}):(t.edges.right={path:[[1,a],[l,1]],move:{x:0,y:1,enter:"bottom"}},t.edges.left={path:[[0,r],[i,0]],move:{x:0,y:-1,enter:"top"}})),o.polygons&&(s<n?t.polygons.push([[0,0],[0,r],[l,1],[1,1],[1,a],[i,0]]):(t.polygons.push([[0,0],[0,r],[i,0]]),t.polygons.push([[l,1],[1,1],[1,a]])));break;case 5:r=o.interpolate(e,g,n),a=o.interpolate(m,h,n),i=o.interpolate(e,m,n),l=o.interpolate(g,h,n),s=(e+m+h+g)/4,o.polygons_full&&(s<n?(t.edges.bottom={path:[[i,0],[0,r]],move:{x:-1,y:0,enter:"right"}},t.edges.top={path:[[l,1],[1,a]],move:{x:1,y:0,enter:"left"}}):(t.edges.top={path:[[l,1],[0,r]],move:{x:-1,y:0,enter:"right"}},t.edges.bottom={path:[[i,0],[1,a]],move:{x:1,y:0,enter:"left"}})),o.polygons&&(s<n?t.polygons.push([[0,r],[0,1],[l,1],[1,a],[1,0],[i,0]]):(t.polygons.push([[0,r],[0,1],[l,1]]),t.polygons.push([[i,0],[1,a],[1,0]])))}return t}}p.prototype.cellsInBand=function(e,t,n){var o=[];return n=void 0===n||n,this.lowerBound>t||this.upperBound<e||(this.childA||this.childB||this.childC||this.childD?(this.childA&&(o=o.concat(this.childA.cellsInBand(e,t,n))),this.childB&&(o=o.concat(this.childB.cellsInBand(e,t,n))),this.childD&&(o=o.concat(this.childD.cellsInBand(e,t,n))),this.childC&&(o=o.concat(this.childC.cellsInBand(e,t,n)))):(n||this.lowerBound<=e||this.upperBound>=t)&&o.push({x:this.x,y:this.y})),o},p.prototype.cellsBelowThreshold=function(e,t){var n=[];return t=void 0===t||t,this.lowerBound>e||(this.childA||this.childB||this.childC||this.childD?(this.childA&&(n=n.concat(this.childA.cellsBelowThreshold(e,t))),this.childB&&(n=n.concat(this.childB.cellsBelowThreshold(e,t))),this.childD&&(n=n.concat(this.childD.cellsBelowThreshold(e,t))),this.childC&&(n=n.concat(this.childC.cellsBelowThreshold(e,t)))):(t||this.upperBound>=e)&&n.push({x:this.x,y:this.y})),n};var h={square:function(e,t,n,o,r,a){a.polygons&&e.polygons.push([[0,0],[0,1],[1,1],[1,0]])},triangle_bl:function(e,t,n,o,r,a){n=a.interpolate(t,n,a.minV,a.maxV),r=a.interpolate(t,r,a.minV,a.maxV);a.polygons_full&&(e.edges.lb={path:[[0,r],[n,0]],move:{x:0,y:-1,enter:"tl"}}),a.polygons&&e.polygons.push([[0,r],[n,0],[0,0]])},triangle_br:function(e,t,n,o,r,a){t=a.interpolate(t,n,a.minV,a.maxV),o=a.interpolate(n,o,a.minV,a.maxV);a.polygons_full&&(e.edges.br={path:[[t,0],[1,o]],move:{x:1,y:0,enter:"lb"}}),a.polygons&&e.polygons.push([[t,0],[1,o],[1,0]])},triangle_tr:function(e,t,n,o,r,a){n=a.interpolate(n,o,a.minV,a.maxV),o=a.interpolate(r,o,a.minV,a.maxV);a.polygons_full&&(e.edges.rt={path:[[1,n],[o,1]],move:{x:0,y:1,enter:"br"}}),a.polygons&&e.polygons.push([[1,n],[o,1],[1,1]])},triangle_tl:function(e,t,n,o,r,a){o=a.interpolate(r,o,a.minV,a.maxV),r=a.interpolate(t,r,a.minV,a.maxV);a.polygons_full&&(e.edges.tl={path:[[o,1],[0,r]],move:{x:-1,y:0,enter:"rt"}}),a.polygons&&e.polygons.push([[0,r],[0,1],[o,1]])},tetragon_t:function(e,t,n,o,r,a){o=a.interpolate(n,o,a.minV,a.maxV),r=a.interpolate(t,r,a.minV,a.maxV);a.polygons_full&&(e.edges.rt={path:[[1,o],[0,r]],move:{x:-1,y:0,enter:"rt"}}),a.polygons&&e.polygons.push([[0,r],[0,1],[1,1],[1,o]])},tetragon_r:function(e,t,n,o,r,a){n=a.interpolate(t,n,a.minV,a.maxV),o=a.interpolate(r,o,a.minV,a.maxV);a.polygons_full&&(e.edges.br={path:[[n,0],[o,1]],move:{x:0,y:1,enter:"br"}}),a.polygons&&e.polygons.push([[n,0],[o,1],[1,1],[1,0]])},tetragon_b:function(e,t,n,o,r,a){r=a.interpolate(t,r,a.minV,a.maxV),o=a.interpolate(n,o,a.minV,a.maxV);a.polygons_full&&(e.edges.lb={path:[[0,r],[1,o]],move:{x:1,y:0,enter:"lb"}}),a.polygons&&e.polygons.push([[0,0],[0,r],[1,o],[1,0]])},tetragon_l:function(e,t,n,o,r,a){o=a.interpolate(r,o,a.minV,a.maxV),n=a.interpolate(t,n,a.minV,a.maxV);a.polygons_full&&(e.edges.tl={path:[[o,1],[n,0]],move:{x:0,y:-1,enter:"tl"}}),a.polygons&&e.polygons.push([[0,0],[0,1],[o,1],[n,0]])},tetragon_bl:function(e,t,n,o,r,a){var l=a.interpolate_a(t,n,a.minV,a.maxV),i=a.interpolate_b(t,n,a.minV,a.maxV),n=a.interpolate_a(t,r,a.minV,a.maxV),r=a.interpolate_b(t,r,a.minV,a.maxV);a.polygons_full&&(e.edges.bl={path:[[l,0],[0,n]],move:{x:-1,y:0,enter:"rb"}},e.edges.lt={path:[[0,r],[i,0]],move:{x:0,y:-1,enter:"tr"}}),a.polygons&&e.polygons.push([[l,0],[0,n],[0,r],[i,0]])},tetragon_br:function(e,t,n,o,r,a){var l=a.interpolate_a(t,n,a.minV,a.maxV),i=a.interpolate_b(t,n,a.minV,a.maxV),t=a.interpolate_a(n,o,a.minV,a.maxV),o=a.interpolate_b(n,o,a.minV,a.maxV);a.polygons_full&&(e.edges.bl={path:[[l,0],[1,o]],move:{x:1,y:0,enter:"lt"}},e.edges.rb={path:[[1,t],[i,0]],move:{x:0,y:-1,enter:"tr"}}),a.polygons&&e.polygons.push([[l,0],[1,o],[1,t],[i,0]])},tetragon_tr:function(e,t,n,o,r,a){var l=a.interpolate_a(r,o,a.minV,a.maxV),i=a.interpolate_b(r,o,a.minV,a.maxV),r=a.interpolate_b(n,o,a.minV,a.maxV),o=a.interpolate_a(n,o,a.minV,a.maxV);a.polygons_full&&(e.edges.rb={path:[[1,o],[l,1]],move:{x:0,y:1,enter:"bl"}},e.edges.tr={path:[[i,1],[1,r]],move:{x:1,y:0,enter:"lt"}}),a.polygons&&e.polygons.push([[1,o],[l,1],[i,1],[1,r]])},tetragon_tl:function(e,t,n,o,r,a){var l=a.interpolate_a(r,o,a.minV,a.maxV),i=a.interpolate_b(r,o,a.minV,a.maxV),o=a.interpolate_b(t,r,a.minV,a.maxV),r=a.interpolate_a(t,r,a.minV,a.maxV);a.polygons_full&&(e.edges.tr={path:[[i,1],[0,r]],move:{x:-1,y:0,enter:"rb"}},e.edges.lt={path:[[0,o],[l,1]],move:{x:0,y:1,enter:"bl"}}),a.polygons&&e.polygons.push([[i,1],[0,r],[0,o],[l,1]])},tetragon_lr:function(e,t,n,o,r,a){var l=a.interpolate_a(t,r,a.minV,a.maxV),t=a.interpolate_b(t,r,a.minV,a.maxV),r=a.interpolate_b(n,o,a.minV,a.maxV),o=a.interpolate_a(n,o,a.minV,a.maxV);a.polygons_full&&(e.edges.lt={path:[[0,t],[1,r]],move:{x:1,y:0,enter:"lt"}},e.edges.rb={path:[[1,o],[0,l]],move:{x:-1,y:0,enter:"rb"}}),a.polygons&&e.polygons.push([[0,l],[0,t],[1,r],[1,o]])},tetragon_tb:function(e,t,n,o,r,a){var l=a.interpolate_a(r,o,a.minV,a.maxV),r=a.interpolate_b(r,o,a.minV,a.maxV),o=a.interpolate_b(t,n,a.minV,a.maxV),n=a.interpolate_a(t,n,a.minV,a.maxV);a.polygons_full&&(e.edges.tr={path:[[r,1],[o,0]],move:{x:0,y:-1,enter:"tr"}},e.edges.bl={path:[[n,0],[l,1]],move:{x:0,y:1,enter:"bl"}}),a.polygons&&e.polygons.push([[n,0],[l,1],[r,1],[o,0]])},pentagon_tr:function(e,t,n,o,r,a){r=a.interpolate(r,o,a.minV,a.maxV),o=a.interpolate(n,o,a.minV,a.maxV);a.polygons_full&&(e.edges.tl={path:[[r,1],[1,o]],move:{x:1,y:0,enter:"lb"}}),a.polygons&&e.polygons.push([[0,0],[0,1],[r,1],[1,o],[1,0]])},pentagon_tl:function(e,t,n,o,r,a){t=a.interpolate(t,r,a.minV,a.maxV),o=a.interpolate(r,o,a.minV,a.maxV);a.polygons_full&&(e.edges.lb={path:[[0,t],[o,1]],move:{x:0,y:1,enter:"br"}}),a.polygons&&e.polygons.push([[0,0],[0,t],[o,1],[1,1],[1,0]])},pentagon_br:function(e,t,n,o,r,a){t=a.interpolate(t,n,a.minV,a.maxV),o=a.interpolate(n,o,a.minV,a.maxV);a.polygons_full&&(e.edges.rt={path:[[1,o],[t,0]],move:{x:0,y:-1,enter:"tl"}}),a.polygons&&e.polygons.push([[0,0],[0,1],[1,1],[1,o],[t,0]])},pentagon_bl:function(e,t,n,o,r,a){r=a.interpolate(t,r,a.minV,a.maxV),n=a.interpolate(t,n,a.minV,a.maxV);a.polygons_full&&(e.edges.br={path:[[n,0],[0,r]],move:{x:-1,y:0,enter:"rt"}}),a.polygons&&e.polygons.push([[0,r],[0,1],[1,1],[1,0],[n,0]])},pentagon_tr_rl:function(e,t,n,o,r,a){var l=a.interpolate(t,r,a.minV,a.maxV),t=a.interpolate(r,o,a.minV,a.maxV),r=a.interpolate_b(n,o,a.minV,a.maxV),o=a.interpolate_a(n,o,a.minV,a.maxV);a.polygons_full&&(e.edges.tl={path:[[t,1],[1,r]],move:{x:1,y:0,enter:"lt"}},e.edges.rb={path:[[1,o],[0,l]],move:{x:-1,y:0,enter:"rt"}}),a.polygons&&e.polygons.push([[0,l],[0,1],[t,1],[1,r],[1,o]])},pentagon_rb_bt:function(e,t,n,o,r,a){var l=a.interpolate(n,o,a.minV,a.maxV),i=a.interpolate_b(t,n,a.minV,a.maxV),n=a.interpolate_a(t,n,a.minV,a.maxV),o=a.interpolate(r,o,a.minV,a.maxV);a.polygons_full&&(e.edges.rt={path:[[1,l],[i,0]],move:{x:0,y:-1,enter:"tr"}},e.edges.bl={path:[[n,0],[o,1]],move:{x:0,y:1,enter:"br"}}),a.polygons&&e.polygons.push([[o,1],[1,1],[1,l],[i,0],[n,0]])},pentagon_bl_lr:function(e,t,n,o,r,a){var l=a.interpolate(t,n,a.minV,a.maxV),i=a.interpolate_a(t,r,a.minV,a.maxV),r=a.interpolate_b(t,r,a.minV,a.maxV),o=a.interpolate(n,o,a.minV,a.maxV);a.polygons_full&&(e.edges.br={path:[[l,0],[0,i]],move:{x:-1,y:0,enter:"rb"}},e.edges.lt={path:[[0,r],[1,o]],move:{x:1,y:0,enter:"lb"}}),a.polygons&&e.polygons.push([[l,0],[0,i],[0,r],[1,o],[1,0]])},pentagon_lt_tb:function(e,t,n,o,r,a){var l=a.interpolate(t,r,a.minV,a.maxV),i=a.interpolate_a(r,o,a.minV,a.maxV),o=a.interpolate_b(r,o,a.minV,a.maxV),n=a.interpolate(t,n,a.minV,a.maxV);a.polygons_full&&(e.edges.lb={path:[[0,l],[i,1]],move:{x:0,y:1,enter:"bl"}},e.edges.tr={path:[[o,1],[n,0]],move:{x:0,y:-1,enter:"tl"}}),a.polygons&&e.polygons.push([[0,0],[0,l],[i,1],[o,1],[n,0]])},pentagon_bl_tb:function(e,t,n,o,r,a){var l=a.interpolate(t,r,a.minV,a.maxV),r=a.interpolate(r,o,a.minV,a.maxV),o=a.interpolate_b(t,n,a.minV,a.maxV),n=a.interpolate_a(t,n,a.minV,a.maxV);a.polygons_full&&(e.edges.bl={path:[[n,0],[0,l]],move:{x:-1,y:0,enter:"rt"}},e.edges.tl={path:[[r,1],[o,0]],move:{x:0,y:-1,enter:"tr"}}),a.polygons&&e.polygons.push([[0,l],[0,1],[r,1],[o,0],[n,0]])},pentagon_lt_rl:function(e,t,n,o,r,a){var l=a.interpolate_a(t,r,a.minV,a.maxV),t=a.interpolate_b(t,r,a.minV,a.maxV),o=a.interpolate(r,o,a.minV,a.maxV),r=a.interpolate(n,r,a.minV,a.maxV);a.polygons_full&&(e.edges.lt={path:[[0,t],[o,1]],move:{x:0,y:1,enter:"br"}},e.edges.rt={path:[[1,r],[0,l]],move:{x:-1,y:0,enter:"rb"}}),a.polygons&&e.polygons.push([[0,l],[0,t],[o,1],[1,1],[1,r]])},pentagon_tr_bt:function(e,t,n,o,r,a){var l=a.interpolate_a(r,o,a.minV,a.maxV),r=a.interpolate_b(r,o,a.minV,a.maxV),o=a.interpolate(n,o,a.minV,a.maxV),n=a.interpolate(t,n,a.minV,a.maxV);a.polygons_full&&(e.edges.br={path:[[n,0],[l,1]],move:{x:0,y:1,enter:"bl"}},e.edges.tr={path:[[r,1],[1,o]],move:{x:1,y:0,enter:"lb"}}),a.polygons&&e.polygons.push([[l,1],[r,1],[1,o],[1,0],[n,0]])},pentagon_rb_lr:function(e,t,n,o,r,a){var l=a.interpolate(t,r,a.minV,a.maxV),r=a.interpolate_b(n,o,a.minV,a.maxV),o=a.interpolate_a(n,o,a.minV,a.maxV),n=a.interpolate(t,n,a.minV,a.maxV);a.polygons_full&&(e.edges.lb={path:[[0,l],[1,r]],move:{x:1,y:0,enter:"lt"}},e.edges.rb={path:[[1,o],[n,0]],move:{x:0,y:-1,enter:"tl"}}),a.polygons&&e.polygons.push([[0,0],[0,l],[1,r],[1,o],[n,0]])},hexagon_lt_tr:function(e,t,n,o,r,a){var l=a.interpolate(t,r,a.minV,a.maxV),t=a.interpolate_a(r,o,a.minV,a.maxV),r=a.interpolate_b(r,o,a.minV,a.maxV),o=a.interpolate(n,o,a.minV,a.maxV);a.polygons_full&&(e.edges.lb={path:[[0,l],[t,1]],move:{x:0,y:1,enter:"bl"}},e.edges.tr={path:[[r,1],[1,o]],move:{x:1,y:0,enter:"lb"}}),a.polygons&&e.polygons.push([[0,0],[0,l],[t,1],[r,1],[1,o],[1,0]])},hexagon_bl_lt:function(e,t,n,o,r,a){var l=a.interpolate(t,n,a.minV,a.maxV),n=a.interpolate_a(t,r,a.minV,a.maxV),t=a.interpolate_b(t,r,a.minV,a.maxV),o=a.interpolate(r,o,a.minV,a.maxV);a.polygons_full&&(e.edges.br={path:[[l,0],[0,n]],move:{x:-1,y:0,enter:"rb"}},e.edges.lt={path:[[0,t],[o,1]],move:{x:0,y:1,enter:"br"}}),a.polygons&&e.polygons.push([[l,0],[0,n],[0,t],[o,1],[1,1],[1,0]])},hexagon_bl_rb:function(e,t,n,o,r,a){var l=a.interpolate_a(t,n,a.minV,a.maxV),i=a.interpolate_b(t,n,a.minV,a.maxV),r=a.interpolate(t,r,a.minV,a.maxV),o=a.interpolate(n,o,a.minV,a.maxV);a.polygons_full&&(e.edges.bl={path:[[l,0],[0,r]],move:{x:-1,y:0,enter:"rt"}},e.edges.rt={path:[[1,o],[i,0]],move:{x:0,y:-1,enter:"tr"}}),a.polygons&&e.polygons.push([[l,0],[0,r],[0,1],[1,1],[1,o],[i,0]])},hexagon_tr_rb:function(e,t,n,o,r,a){var l=a.interpolate(t,n,a.minV,a.maxV),t=a.interpolate(r,o,a.minV,a.maxV),r=a.interpolate_b(n,o,a.minV,a.maxV),o=a.interpolate_a(n,o,a.minV,a.maxV);a.polygons_full&&(e.edges.tl={path:[[t,1],[1,r]],move:{x:1,y:0,enter:"lt"}},e.edges.rb={path:[[1,o],[l,0]],move:{x:0,y:-1,enter:"tl"}}),a.polygons&&e.polygons.push([[0,0],[0,1],[t,1],[1,r],[1,o],[l,0]])},hexagon_lt_rb:function(e,t,n,o,r,a){var l=a.interpolate(t,r,a.minV,a.maxV),r=a.interpolate(r,o,a.minV,a.maxV),o=a.interpolate(n,o,a.minV,a.maxV),n=a.interpolate(t,n,a.minV,a.maxV);a.polygons_full&&(e.edges.lb={path:[[0,l],[r,1]],move:{x:0,y:1,enter:"br"}},e.edges.rt={path:[[1,o],[n,0]],move:{x:0,y:-1,enter:"tl"}}),a.polygons&&e.polygons.push([[0,0],[0,l],[r,1],[1,1],[1,o],[n,0]])},hexagon_bl_tr:function(e,t,n,o,r,a){var l=a.interpolate(t,n,a.minV,a.maxV),t=a.interpolate(t,r,a.minV,a.maxV),r=a.interpolate(r,o,a.minV,a.maxV),o=a.interpolate(n,o,a.minV,a.maxV);a.polygons_full&&(e.edges.br={path:[[l,0],[0,t]],move:{x:-1,y:0,enter:"rt"}},e.edges.tl={path:[[r,1],[1,o]],move:{x:1,y:0,enter:"lb"}}),a.polygons&&e.polygons.push([[l,0],[0,t],[0,1],[r,1],[1,o],[1,0]])},heptagon_tr:function(e,t,n,o,r,a){var l=a.interpolate_a(t,n,a.minV,a.maxV),i=a.interpolate_b(t,n,a.minV,a.maxV),s=a.interpolate_a(t,r,a.minV,a.maxV),t=a.interpolate_b(t,r,a.minV,a.maxV),r=a.interpolate(r,o,a.minV,a.maxV),o=a.interpolate(n,o,a.minV,a.maxV);a.polygons_full&&(e.edges.bl={path:[[l,0],[0,s]],move:{x:-1,y:0,enter:"rb"}},e.edges.lt={path:[[0,t],[r,1]],move:{x:0,y:1,enter:"br"}},e.edges.rt={path:[[1,o],[i,0]],move:{x:0,y:-1,enter:"tr"}}),a.polygons&&e.polygons.push([[l,0],[0,s],[0,t],[r,1],[1,1],[1,o],[i,0]])},heptagon_bl:function(e,t,n,o,r,a){var l=a.interpolate(t,n,a.minV,a.maxV),i=a.interpolate(t,r,a.minV,a.maxV),s=a.interpolate_a(r,o,a.minV,a.maxV),t=a.interpolate_b(r,o,a.minV,a.maxV),r=a.interpolate_b(n,o,a.minV,a.maxV),o=a.interpolate_a(n,o,a.minV,a.maxV);a.polygons_full&&(e.edges.lb={path:[[0,i],[s,1]],move:{x:0,y:1,enter:"bl"}},e.edges.tr={path:[[t,1],[1,r]],move:{x:1,y:0,enter:"lt"}},e.edges.rb={path:[[1,o],[l,0]],move:{x:0,y:-1,enter:"tl"}}),a.polygons&&e.polygons.push([[0,0],[0,i],[s,1],[t,1],[1,r],[1,o],[l,0]])},heptagon_tl:function(e,t,n,o,r,a){var l=a.interpolate_a(t,n,a.minV,a.maxV),i=a.interpolate_b(t,n,a.minV,a.maxV),s=a.interpolate(t,r,a.minV,a.maxV),t=a.interpolate(r,o,a.minV,a.maxV),r=a.interpolate_b(n,o,a.minV,a.maxV),o=a.interpolate_a(n,o,a.minV,a.maxV);a.polygons_full&&(e.edges.bl={path:[[l,0],[0,s]],move:{x:-1,y:0,enter:"rt"}},e.edges.tl={path:[[t,1],[1,r]],move:{x:1,y:0,enter:"lt"}},e.edges.rb={path:[[1,o],[i,0]],move:{x:0,y:-1,enter:"tr"}}),a.polygons&&e.polygons.push([[l,0],[0,s],[0,1],[t,1],[1,r],[1,o],[i,0]])},heptagon_br:function(e,t,n,o,r,a){var l=a.interpolate(t,n,a.minV,a.maxV),i=a.interpolate_a(t,r,a.minV,a.maxV),s=a.interpolate_b(t,r,a.minV,a.maxV),t=a.interpolate_a(r,o,a.minV,a.maxV),r=a.interpolate_b(r,o,a.minV,a.maxV),o=a.interpolate(n,o,a.minV,a.maxV);a.polygons_full&&(e.edges.br={path:[[l,0],[0,i]],move:{x:-1,y:0,enter:"rb"}},e.edges.lt={path:[[0,s],[t,1]],move:{x:0,y:1,enter:"bl"}},e.edges.tr={path:[[r,1],[1,o]],move:{x:1,y:0,enter:"lb"}}),a.polygons&&e.polygons.push([[l,0],[0,i],[0,s],[t,1],[r,1],[1,o],[1,0]])},octagon:function(e,t,n,o,r,a){var l=a.interpolate_a(t,n,a.minV,a.maxV),i=a.interpolate_b(t,n,a.minV,a.maxV),s=a.interpolate_a(t,r,a.minV,a.maxV),p=a.interpolate_b(t,r,a.minV,a.maxV),g=a.interpolate_a(r,o,a.minV,a.maxV),t=a.interpolate_b(r,o,a.minV,a.maxV),r=a.interpolate_b(n,o,a.minV,a.maxV),o=a.interpolate_a(n,o,a.minV,a.maxV);a.polygons_full&&(e.edges.bl={path:[[l,0],[0,s]],move:{x:-1,y:0,enter:"rb"}},e.edges.lt={path:[[0,p],[g,1]],move:{x:0,y:1,enter:"bl"}},e.edges.tr={path:[[t,1],[1,r]],move:{x:1,y:0,enter:"lt"}},e.edges.rb={path:[[1,o],[i,0]],move:{x:0,y:-1,enter:"tr"}}),a.polygons&&e.polygons.push([[l,0],[0,s],[0,p],[g,1],[t,1],[1,r],[1,o],[i,0]])}};function m(e,t,n,o,r,a){e=(o+n+t+e)/4;return a<e?2:e<r?0:1}function w(e,t,n,o){var r=0,a=e[n+1][t],l=e[n+1][t+1],i=e[n][t+1],s=e[n][t],p=o.minV,g=o.maxV;if(!(isNaN(s)||isNaN(i)||isNaN(l)||isNaN(a))){switch(r|=a<p?0:g<a?128:64,r|=l<p?0:g<l?32:16,r|=i<p?0:g<i?8:4,e=0,n={cval:r=+(r|=s<p?0:g<s?2:1),polygons:[],edges:{},x0:s,x1:i,x2:l,x3:a,x:t,y:n},r){case 85:h.square(n,s,i,l,a,o);case 0:case 170:break;case 169:h.triangle_bl(n,s,i,l,a,o);break;case 166:h.triangle_br(n,s,i,l,a,o);break;case 154:h.triangle_tr(n,s,i,l,a,o);break;case 106:h.triangle_tl(n,s,i,l,a,o);break;case 1:h.triangle_bl(n,s,i,l,a,o);break;case 4:h.triangle_br(n,s,i,l,a,o);break;case 16:h.triangle_tr(n,s,i,l,a,o);break;case 64:h.triangle_tl(n,s,i,l,a,o);break;case 168:h.tetragon_bl(n,s,i,l,a,o);break;case 162:h.tetragon_br(n,s,i,l,a,o);break;case 138:h.tetragon_tr(n,s,i,l,a,o);break;case 42:h.tetragon_tl(n,s,i,l,a,o);break;case 2:h.tetragon_bl(n,s,i,l,a,o);break;case 8:h.tetragon_br(n,s,i,l,a,o);break;case 32:h.tetragon_tr(n,s,i,l,a,o);break;case 128:h.tetragon_tl(n,s,i,l,a,o);break;case 5:h.tetragon_b(n,s,i,l,a,o);break;case 20:h.tetragon_r(n,s,i,l,a,o);break;case 80:h.tetragon_t(n,s,i,l,a,o);break;case 65:h.tetragon_l(n,s,i,l,a,o);break;case 165:h.tetragon_b(n,s,i,l,a,o);break;case 150:h.tetragon_r(n,s,i,l,a,o);break;case 90:h.tetragon_t(n,s,i,l,a,o);break;case 105:h.tetragon_l(n,s,i,l,a,o);break;case 160:h.tetragon_lr(n,s,i,l,a,o);break;case 130:h.tetragon_tb(n,s,i,l,a,o);break;case 10:h.tetragon_lr(n,s,i,l,a,o);break;case 40:h.tetragon_tb(n,s,i,l,a,o);break;case 101:h.pentagon_tr(n,s,i,l,a,o);break;case 149:h.pentagon_tl(n,s,i,l,a,o);break;case 86:h.pentagon_bl(n,s,i,l,a,o);break;case 89:h.pentagon_br(n,s,i,l,a,o);break;case 69:h.pentagon_tr(n,s,i,l,a,o);break;case 21:h.pentagon_tl(n,s,i,l,a,o);break;case 84:h.pentagon_bl(n,s,i,l,a,o);break;case 81:h.pentagon_br(n,s,i,l,a,o);break;case 96:h.pentagon_tr_rl(n,s,i,l,a,o);break;case 24:h.pentagon_rb_bt(n,s,i,l,a,o);break;case 6:h.pentagon_bl_lr(n,s,i,l,a,o);break;case 129:h.pentagon_lt_tb(n,s,i,l,a,o);break;case 74:h.pentagon_tr_rl(n,s,i,l,a,o);break;case 146:h.pentagon_rb_bt(n,s,i,l,a,o);break;case 164:h.pentagon_bl_lr(n,s,i,l,a,o);break;case 41:h.pentagon_lt_tb(n,s,i,l,a,o);break;case 66:h.pentagon_bl_tb(n,s,i,l,a,o);break;case 144:h.pentagon_lt_rl(n,s,i,l,a,o);break;case 36:h.pentagon_tr_bt(n,s,i,l,a,o);break;case 9:h.pentagon_rb_lr(n,s,i,l,a,o);break;case 104:h.pentagon_bl_tb(n,s,i,l,a,o);break;case 26:h.pentagon_lt_rl(n,s,i,l,a,o);break;case 134:h.pentagon_tr_bt(n,s,i,l,a,o);break;case 161:h.pentagon_rb_lr(n,s,i,l,a,o);break;case 37:h.hexagon_lt_tr(n,s,i,l,a,o);break;case 148:h.hexagon_bl_lt(n,s,i,l,a,o);break;case 82:h.hexagon_bl_rb(n,s,i,l,a,o);break;case 73:h.hexagon_tr_rb(n,s,i,l,a,o);break;case 133:h.hexagon_lt_tr(n,s,i,l,a,o);break;case 22:h.hexagon_bl_lt(n,s,i,l,a,o);break;case 88:h.hexagon_bl_rb(n,s,i,l,a,o);break;case 97:h.hexagon_tr_rb(n,s,i,l,a,o);break;case 145:case 25:h.hexagon_lt_rb(n,s,i,l,a,o);break;case 70:case 100:h.hexagon_bl_tr(n,s,i,l,a,o);break;case 17:0===(e=m(s,i,l,a,p,g))?(h.triangle_bl(n,s,i,l,a,o),h.triangle_tr(n,s,i,l,a,o)):h.hexagon_lt_rb(n,s,i,l,a,o);break;case 68:0===(e=m(s,i,l,a,p,g))?(h.triangle_tl(n,s,i,l,a,o),h.triangle_br(n,s,i,l,a,o)):h.hexagon_bl_tr(n,s,i,l,a,o);break;case 153:2===(e=m(s,i,l,a,p,g))?(h.triangle_bl(n,s,i,l,a,o),h.triangle_tr(n,s,i,l,a,o)):h.hexagon_lt_rb(n,s,i,l,a,o);break;case 102:2===(e=m(s,i,l,a,p,g))?(h.triangle_tl(n,s,i,l,a,o),h.triangle_br(n,s,i,l,a,o)):h.hexagon_bl_tr(n,s,i,l,a,o);break;case 152:2===(e=m(s,i,l,a,p,g))?(h.triangle_tr(n,s,i,l,a,o),h.tetragon_bl(n,s,i,l,a,o)):h.heptagon_tr(n,s,i,l,a,o);break;case 137:2===(e=m(s,i,l,a,p,g))?(h.triangle_bl(n,s,i,l,a,o),h.tetragon_tr(n,s,i,l,a,o)):h.heptagon_bl(n,s,i,l,a,o);break;case 98:2===(e=m(s,i,l,a,p,g))?(h.triangle_tl(n,s,i,l,a,o),h.tetragon_br(n,s,i,l,a,o)):h.heptagon_tl(n,s,i,l,a,o);break;case 38:2===(e=m(s,i,l,a,p,g))?(h.triangle_br(n,s,i,l,a,o),h.tetragon_tl(n,s,i,l,a,o)):h.heptagon_br(n,s,i,l,a,o);break;case 18:0===(e=m(s,i,l,a,p,g))?(h.triangle_tr(n,s,i,l,a,o),h.tetragon_bl(n,s,i,l,a,o)):h.heptagon_tr(n,s,i,l,a,o);break;case 33:0===(e=m(s,i,l,a,p,g))?(h.triangle_bl(n,s,i,l,a,o),h.tetragon_tr(n,s,i,l,a,o)):h.heptagon_bl(n,s,i,l,a,o);break;case 72:0===(e=m(s,i,l,a,p,g))?(h.triangle_tl(n,s,i,l,a,o),h.tetragon_br(n,s,i,l,a,o)):h.heptagon_tl(n,s,i,l,a,o);break;case 132:0===(e=m(s,i,l,a,p,g))?(h.triangle_br(n,s,i,l,a,o),h.tetragon_tl(n,s,i,l,a,o)):h.heptagon_br(n,s,i,l,a,o);break;case 136:0===(e=m(s,i,l,a,p,g))?(h.tetragon_tl(n,s,i,l,a,o),h.tetragon_br(n,s,i,l,a,o)):1===e?h.octagon(n,s,i,l,a,o):(h.tetragon_bl(n,s,i,l,a,o),h.tetragon_tr(n,s,i,l,a,o));break;case 34:0===(e=m(s,i,l,a,p,g))?(h.tetragon_bl(n,s,i,l,a,o),h.tetragon_tr(n,s,i,l,a,o)):1===e?h.octagon(n,s,i,l,a,o):(h.tetragon_tl(n,s,i,l,a,o),h.tetragon_br(n,s,i,l,a,o))}return n}}e.isoLines=t,e.isoContours=t,e.isoBands=function(e,t,n,o){var r,a,l,i=!1,s=null,p=null,g=null,h=null,m=!1,u=[],b=[],c=[];if(!e)throw new Error("data is required");if(null==t)throw new Error("lowerBound is required");if(null==n)throw new Error("bandWidth is required");if(o&&"object"!=typeof o)throw new Error("options must be an object");if(l=function(e){var t,n,o,r,a=new f;for(e=e||{},r=Object.keys(a),t=0;t<r.length;t++)null!=(o=e[n=r[t]])&&(a[n]=o);return a.polygons_full=!a.polygons,a.interpolate=y,a.interpolate_a=_,a.interpolate_b=d,a}(o),e instanceof v)p=(s=e).root,g=e.data,l.noQuadTree||(i=!0);else{if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Error("input is neither array of arrays nor object retrieved from 'QuadTree()'");g=e}if(Array.isArray(t)){for(m=!0,l.noQuadTree||(i=!0),r=0;r<t.length;r++)if(isNaN(+t[r]))throw new Error("lowerBound["+r+"] is not a number");if(Array.isArray(n)){if(t.length!==n.length)throw new Error("lowerBound and bandWidth have unequal lengths");for(r=0;r<n.length;r++)if(isNaN(+n[r]))throw new Error("bandWidth["+r+"] is not a number")}else{if(isNaN(+n))throw new Error("bandWidth must be a number");for(u=[],r=0;r<t.length;r++)u.push(n);n=u}}else{if(isNaN(+t))throw new Error("lowerBound must be a number");if(t=[t],isNaN(+n))throw new Error("bandWidth must be a number");n=[n]}return i&&!p&&(s=new v(g),p=s.root,g=s.data),l.verbose&&(l.polygons?console.log("MarchingSquaresJS-isoBands: returning single polygons for each grid cell"):console.log("MarchingSquaresJS-isoBands: returning polygon paths for entire data grid"),m&&console.log("MarchingSquaresJS-isoBands: multiple bands requested, returning array of band polygons instead of polygons for a single band")),t.forEach(function(e,t){if(b=[],l.minV=e,l.maxV=e+n[t],l.verbose&&console.log("MarchingSquaresJS-isoBands: computing isobands for ["+e+":"+(e+n[t])+"]"),l.polygons)if(i)p.cellsInBand(l.minV,l.maxV,!0).forEach(function(e){b=b.concat(V(w(g,e.x,e.y,l),e.x,e.y,l))});else for(a=0;a<g.length-1;++a)for(r=0;r<g[0].length-1;++r)b=b.concat(V(w(g,r,a,l),r,a,l));else{for(h=[],r=0;r<g[0].length-1;++r)h[r]=[];if(i)p.cellsInBand(l.minV,l.maxV,!1).forEach(function(e){h[e.x][e.y]=w(g,e.x,e.y,l)});else for(r=0;r<g[0].length-1;++r)for(a=0;a<g.length-1;++a)h[r][a]=w(g,r,a,l);b=x(g,h,l)}m?c.push(b):c=b,"function"==typeof l.successCallback&&l.successCallback(c,e,n[t])}),c},e.QuadTree=v,e.quadTree=v,Object.defineProperty(e,"__esModule",{value:!0})});
