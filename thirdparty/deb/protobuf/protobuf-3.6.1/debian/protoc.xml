<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [

<!--

`xsltproc -nonet \
          -param man.charmap.use.subset "0" \
          -param make.year.ranges "1" \
          -param make.single.year.ranges "1" \
          /usr/share/xml/docbook/stylesheet/nwalsh/manpages/docbook.xsl \
          manpage.xml'

A manual page <package>.<section> will be generated. You may view the
manual page with: nroff -man <package>.<section> | less'. A typical entry
in a Makefile or Makefile.am is:

DB2MAN = /usr/share/sgml/docbook/stylesheet/xsl/nwalsh/manpages/docbook.xsl
XP     = xsltproc -nonet -param man.charmap.use.subset "0"

manpage.1: manpage.xml
        $(XP) $(DB2MAN) $<

The xsltproc binary is found in the xsltproc package. The XSL files are in
docbook-xsl. A description of the parameters you can use can be found in the
docbook-xsl-doc-* packages. Please remember that if you create the nroff
version in one of the debian/rules file targets (such as build), you will need
to include xsltproc and docbook-xsl in your Build-Depends control field.
Alternatively use the xmlto command/package. That will also automatically
pull in xsltproc and docbook-xsl.

Notes for using docbook2x: docbook2x-man does not automatically create the
AUTHOR(S) and COPYRIGHT sections. In this case, please add them manually as
<refsect1> ... </refsect1>.

To disable the automatic creation of the AUTHOR(S) and COPYRIGHT sections
read /usr/share/doc/docbook-xsl/doc/manpages/authors.html. This file can be
found in the docbook-xsl-doc-html package.

Validation can be done using: `xmllint -noout -valid manpage.xml`

General documentation about man-pages and man-page-formatting:
man(1), man(7), http://www.tldp.org/HOWTO/Man-Page/

-->

  <!-- Fill in your name for FIRSTNAME and SURNAME. -->
  <!ENTITY dhfirstname "Iustin">
  <!ENTITY dhsurname   "Pop">
  <!-- dhusername could also be set to "&firstname; &surname;". -->
  <!ENTITY dhusername  "&dhfirstname; &dhsurname;">
  <!ENTITY dhemail     "iustin@debian.org">
  <!-- SECTION should be 1-8, maybe w/ subsection other parameters are
       allowed: see man(7), man(1) and
       http://www.tldp.org/HOWTO/Man-Page/q2.html. -->
  <!ENTITY dhsection   "1">
  <!-- TITLE should be something like "User commands" or similar (see
       http://www.tldp.org/HOWTO/Man-Page/q2.html). -->
  <!ENTITY dhtitle     "protocol buffer compiler">
  <!ENTITY dhucpackage "protobuf">
  <!ENTITY dhpackage   "protoc">
]>

<refentry>
  <refentryinfo>
    <title>&dhtitle;</title>
    <productname>&dhucpackage;</productname>
    <authorgroup>
      <author>
       <firstname>&dhfirstname;</firstname>
        <surname>&dhsurname;</surname>
        <contrib>Wrote this manpage for the Debian system.</contrib>
        <address>
          <email>&dhemail;</email>
        </address>
      </author>
    </authorgroup>
    <copyright>
      <year>2007</year>
      <holder>&dhusername;</holder>
    </copyright>
    <legalnotice>
      <para>This manual page was written for the Debian system
        (but may be used by others).</para>
      <para>Permission is granted to copy, distribute and/or modify this
        document under the terms of the GNU General Public License,
        Version 2 or (at your option) any later version published by
        the Free Software Foundation.</para>
      <para>On Debian systems, the complete text of the GNU General Public
        License can be found in
        <filename>/usr/share/common-licenses/GPL</filename>.</para>
    </legalnotice>
    <date>2008-10-04</date>
  </refentryinfo>
  <refmeta>
    <refentrytitle>&dhpackage;</refentrytitle>
    <manvolnum>&dhsection;</manvolnum>
    <refmiscinfo class="version">2.0.2</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>&dhpackage;</refname>
    <refpurpose>compile protocol buffer description files</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>&dhpackage;</command>
      <!-- These are several examples, how syntaxes could look -->
      <arg choice="opt"><option>--cpp_out=<replaceable>OUT_DIR</replaceable></option></arg>
      <arg choice="opt"><option>--java_out=<replaceable>OUT_DIR</replaceable></option></arg>
      <arg choice="opt"><option>--python_out=<replaceable>OUT_DIR</replaceable></option></arg>

      <arg choice="opt">
        <group choice="plain">
          <arg choice="plain"><option>-I<replaceable>PATH</replaceable></option></arg>
          <arg choice="plain"><option>--proto_path=<replaceable>PATH</replaceable></option></arg>
        </group>
      </arg>
      <arg choice="plain"><replaceable>PROTO_FILE</replaceable></arg>
    </cmdsynopsis>
    <!-- Normally the help and version options make the programs stop
         right after outputting the requested information. -->
    <cmdsynopsis>
      <command>&dhpackage;</command>
      <group choice="req">
        <arg choice="plain"><option>-h</option></arg>
        <arg choice="plain"><option>--help</option></arg>
      </group>
    </cmdsynopsis>
    <cmdsynopsis>
      <command>&dhpackage;</command>
      <arg choice="plain"><option>--version</option></arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1 id="description">
    <title>DESCRIPTION</title>

    <para><command>&dhpackage;</command> is a compiler for protocol
    buffers definitions files. It can can generate C++, Java and
    Python source code for the classes defined in
    <replaceable>PROTO_FILE</replaceable>.</para>

  </refsect1>

  <refsect1 id="options">
    <title>OPTIONS</title>
    <variablelist>
      <!-- Use the variablelist.term.separator and the
           variablelist.term.break.after parameters to
           control the term elements. -->
      <varlistentry>
        <term><option>-I<replaceable>PATH</replaceable></option></term>
        <term><option>--proto_path=<replaceable>PATH</replaceable></option></term>
        <listitem>
          <para>Specify the directory in which to search for imports.
          May be specified multiple times; directories will be
          searched in order. If not given, the current working
          directory is used.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>--cpp_out=<replaceable>OUT_DIR</replaceable></option></term>
        <listitem>
          <simpara>Enable generation of C++ bindings and store them in
          <replaceable>OUT_DIR</replaceable>.</simpara>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>--java_out=<replaceable>OUT_DIR</replaceable></option></term>
        <listitem>
          <simpara>Enable generation of Java bindings and store them
          in <replaceable>OUT_DIR</replaceable>.</simpara>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>--python_out=<replaceable>OUT_DIR</replaceable></option></term>
        <listitem>
          <simpara>Enable generation of Python bindings and store them
          in <replaceable>OUT_DIR</replaceable>.</simpara>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>-h</option></term>
        <term><option>--help</option></term>
        <listitem>
          <para>Show summary of options.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>--version</option></term>
        <listitem>
          <para>Show version of program.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <para>Note that at least one of the <option>--cpp_out</option>,
    <option>--java_out</option> and <option>--python_out</option>
    options must be given (otherwise the program has nothing to
    do). It's also possible to specify more than one.</para>

  </refsect1>
  <refsect1 id="bugs">
    <!-- Or use this section to tell about upstream BTS. -->
    <title>BUGS</title>

    <para>The program currently exits with code 255 for all errors,
    which makes it hard to differentiante from scripts the actual
    error.</para>

    <para>The upstreams <acronym>BTS</acronym> can be found at <ulink
    url="http://code.google.com/p/protobuf/issues/list"/>.</para>

  </refsect1>
  <refsect1 id="see_also">
    <title>SEE ALSO</title>

    <para>More documentation about protocol buffers syntax and APIs is
    available online at <ulink
    url="http://code.google.com/apis/protocolbuffers/docs/overview.html"></ulink>.</para>


  </refsect1>
</refentry>
